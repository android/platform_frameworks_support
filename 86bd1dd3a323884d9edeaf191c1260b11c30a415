{
  "comments": [
    {
      "key": {
        "uuid": "212c21bc_1fcf1f1f",
        "filename": "car/core/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1010674
      },
      "writtenOn": "2019-05-13T19:41:35Z",
      "side": 1,
      "message": "can we have have only one CarDialog.builder class, that spews CarMultipleChoiceDialog or CarSingleChoiceDialog based on the item types? The builders for these two are too similar, and I am imagining they will always be like that.\n\nIn fact maybe have one CarDialog that handles single and multiple choice?\n\nBasically I am trying to understand why we need two separate classes for these two very similar cases.",
      "range": {
        "startLine": 52,
        "startChar": 28,
        "endLine": 52,
        "endChar": 51
      },
      "revId": "86bd1dd3a323884d9edeaf191c1260b11c30a415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3122bc06_99992834",
        "filename": "car/core/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1455326
      },
      "writtenOn": "2019-05-13T19:45:07Z",
      "side": 1,
      "message": "My understanding from the conversations on go/car-selection-dialog-dd was that we wanted androidx to have use case specific classes for dialogs rather than a catch all class (a la AlertDialog) that offers a ton of configuration.",
      "parentUuid": "212c21bc_1fcf1f1f",
      "range": {
        "startLine": 52,
        "startChar": 28,
        "endLine": 52,
        "endChar": 51
      },
      "revId": "86bd1dd3a323884d9edeaf191c1260b11c30a415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8951806_827261f1",
        "filename": "car/core/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1344512
      },
      "writtenOn": "2019-05-13T21:00:04Z",
      "side": 1,
      "message": "I think we can probably have the builders extend from each other a bit to reduce some code duplication. I don\u0027t have a strong preference for this.\n\nHowever, I think we should still keep the dialogs themselves separate. They\u0027re similar, but they function and look rather differently. We could combine all the functionality into one class a la AlertDialog, but I think that has just kept to code bloat in that class.\n\nI personally feel individual dialogs with defined purposes makes things easier to debug and code.",
      "parentUuid": "3122bc06_99992834",
      "range": {
        "startLine": 52,
        "startChar": 28,
        "endLine": 52,
        "endChar": 51
      },
      "revId": "86bd1dd3a323884d9edeaf191c1260b11c30a415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6508c8b8_6dba3449",
        "filename": "car/core/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1455326
      },
      "writtenOn": "2019-05-20T23:10:42Z",
      "side": 1,
      "message": "Having the builders extend from one another means the builders can\u0027t introduce new API (ie. using OnMultiChoiceClickListener vs OnClickListener). A workaround would be having all values not common to builders show up in the constructor (which seemed clunky) or having a single common builder (which seemed like the AlertDialog, one thing that can do everything but bunch of branching code problem).\n\nShould I move this conversation to a design doc?",
      "parentUuid": "b8951806_827261f1",
      "range": {
        "startLine": 52,
        "startChar": 28,
        "endLine": 52,
        "endChar": 51
      },
      "revId": "86bd1dd3a323884d9edeaf191c1260b11c30a415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}