// Signature format: 2.0
package android.support.v4.media {

  public final class MediaBrowserCompat {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public android.os.Bundle? getNotifyChildrenChangedOptions();
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @IntDef(flag=true, value={android.support.v4.media.MediaBrowserCompat.MediaItem.FLAG_BROWSABLE, android.support.v4.media.MediaBrowserCompat.MediaItem.FLAG_PLAYABLE}) public static @interface MediaBrowserCompat.MediaItem.Flags {
  }

  public final class MediaDescriptionCompat implements android.os.Parcelable {
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static final String DESCRIPTION_KEY_MEDIA_URI = "android.support.v4.media.description.MEDIA_URI";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static final String DESCRIPTION_KEY_NULL_BUNDLE_FLAG = "android.support.v4.media.description.NULL_BUNDLE_FLAG";
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @StringDef({android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface MediaMetadataCompat.BitmapKey {
  }

  public static final class MediaMetadataCompat.Builder {
    ctor @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public MediaMetadataCompat.Builder(android.support.v4.media.MediaMetadataCompat!, int);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @StringDef(value={android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DURATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_YEAR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TRACK_NUMBER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_NUM_TRACKS, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISC_NUMBER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_BT_FOLDER_TYPE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ADVERTISEMENT, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DOWNLOAD_STATUS}, open=true) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface MediaMetadataCompat.LongKey {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @StringDef({android.support.v4.media.MediaMetadataCompat.METADATA_KEY_USER_RATING, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_RATING}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface MediaMetadataCompat.RatingKey {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @StringDef(value={android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_AUTHOR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_WRITER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPOSER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPILATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DATE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_GENRE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_DESCRIPTION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_ID, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_URI}, open=true) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface MediaMetadataCompat.TextKey {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface RatingCompat.StarStyle {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface RatingCompat.Style {
  }

}

package android.support.v4.media.session {

  public final class MediaControllerCompat {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public androidx.versionedparcelable.VersionedParcelable? getSessionToken2();
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_ADD_QUEUE_ITEM = "android.support.v4.media.session.command.ADD_QUEUE_ITEM";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_ADD_QUEUE_ITEM_AT = "android.support.v4.media.session.command.ADD_QUEUE_ITEM_AT";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_ARGUMENT_INDEX = "android.support.v4.media.session.command.ARGUMENT_INDEX";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_ARGUMENT_MEDIA_DESCRIPTION = "android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_GET_EXTRA_BINDER = "android.support.v4.media.session.command.GET_EXTRA_BINDER";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_REMOVE_QUEUE_ITEM = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String COMMAND_REMOVE_QUEUE_ITEM_AT = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM_AT";
  }

  public abstract static class MediaControllerCompat.Callback implements android.os.IBinder.DeathRecipient {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public IMediaControllerCallback! getIControllerCallback();
  }

  public class MediaSessionCompat {
    ctor @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public MediaSessionCompat(android.content.Context!, String!, androidx.versionedparcelable.VersionedParcelable!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static void ensureClassLoader(android.os.Bundle?);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public String! getCallingPackage();
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_CAPTIONING_ENABLED = "android.support.v4.media.session.action.ARGUMENT_CAPTIONING_ENABLED";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_EXTRAS = "android.support.v4.media.session.action.ARGUMENT_EXTRAS";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_MEDIA_ID = "android.support.v4.media.session.action.ARGUMENT_MEDIA_ID";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_QUERY = "android.support.v4.media.session.action.ARGUMENT_QUERY";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_RATING = "android.support.v4.media.session.action.ARGUMENT_RATING";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_REPEAT_MODE = "android.support.v4.media.session.action.ARGUMENT_REPEAT_MODE";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_SHUFFLE_MODE = "android.support.v4.media.session.action.ARGUMENT_SHUFFLE_MODE";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_ARGUMENT_URI = "android.support.v4.media.session.action.ARGUMENT_URI";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_PLAY_FROM_URI = "android.support.v4.media.session.action.PLAY_FROM_URI";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_PREPARE = "android.support.v4.media.session.action.PREPARE";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_PREPARE_FROM_MEDIA_ID = "android.support.v4.media.session.action.PREPARE_FROM_MEDIA_ID";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_PREPARE_FROM_SEARCH = "android.support.v4.media.session.action.PREPARE_FROM_SEARCH";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_PREPARE_FROM_URI = "android.support.v4.media.session.action.PREPARE_FROM_URI";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_SET_CAPTIONING_ENABLED = "android.support.v4.media.session.action.SET_CAPTIONING_ENABLED";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_SET_RATING = "android.support.v4.media.session.action.SET_RATING";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_SET_REPEAT_MODE = "android.support.v4.media.session.action.SET_REPEAT_MODE";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String ACTION_SET_SHUFFLE_MODE = "android.support.v4.media.session.action.SET_SHUFFLE_MODE";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String KEY_EXTRA_BINDER = "android.support.v4.media.session.EXTRA_BINDER";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static final String KEY_SESSION_TOKEN2 = "android.support.v4.media.session.SESSION_TOKEN2";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static final String KEY_TOKEN = "android.support.v4.media.session.TOKEN";
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final class MediaSessionCompat.ResultReceiverWrapper implements android.os.Parcelable {
    ctor public MediaSessionCompat.ResultReceiverWrapper(android.os.ResultReceiver);
    method public int describeContents();
    method public void writeToParcel(android.os.Parcel!, int);
    field public static final android.os.Parcelable.Creator<android.support.v4.media.session.MediaSessionCompat.ResultReceiverWrapper>! CREATOR;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef(flag=true, value={android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_QUEUE_COMMANDS}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface MediaSessionCompat.SessionFlags {
  }

  public static final class MediaSessionCompat.Token implements android.os.Parcelable {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static android.support.v4.media.session.MediaSessionCompat.Token! fromBundle(android.os.Bundle!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static android.support.v4.media.session.MediaSessionCompat.Token! fromToken(Object!, IMediaSession!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public IMediaSession! getExtraBinder();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public androidx.versionedparcelable.VersionedParcelable! getSessionToken2();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public void setExtraBinder(IMediaSession!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public void setSessionToken2(androidx.versionedparcelable.VersionedParcelable!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public android.os.Bundle! toBundle();
  }

  public final class PlaybackStateCompat implements android.os.Parcelable {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public long getCurrentPosition(Long!);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @LongDef(flag=true, value={android.support.v4.media.session.PlaybackStateCompat.ACTION_STOP, android.support.v4.media.session.PlaybackStateCompat.ACTION_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY, android.support.v4.media.session.PlaybackStateCompat.ACTION_REWIND, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.ACTION_FAST_FORWARD, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_RATING, android.support.v4.media.session.PlaybackStateCompat.ACTION_SEEK_TO, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_MEDIA_ID, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_SEARCH, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE_FROM_MEDIA_ID, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE_FROM_SEARCH, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE_FROM_URI, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_REPEAT_MODE, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_SHUFFLE_MODE, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_CAPTIONING_ENABLED}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface PlaybackStateCompat.Actions {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_UNKNOWN_ERROR, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_APP_ERROR, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_NOT_SUPPORTED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_AUTHENTICATION_EXPIRED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_CONCURRENT_STREAM_LIMIT, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_PARENTAL_CONTROL_RESTRICTED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_NOT_AVAILABLE_IN_REGION, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_CONTENT_ALREADY_PLAYING, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_SKIP_LIMIT_REACHED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_ACTION_ABORTED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_END_OF_QUEUE}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface PlaybackStateCompat.ErrorCode {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @LongDef({android.support.v4.media.session.PlaybackStateCompat.ACTION_STOP, android.support.v4.media.session.PlaybackStateCompat.ACTION_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY, android.support.v4.media.session.PlaybackStateCompat.ACTION_REWIND, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.ACTION_FAST_FORWARD, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_PAUSE}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface PlaybackStateCompat.MediaKeyAction {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface PlaybackStateCompat.RepeatMode {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface PlaybackStateCompat.ShuffleMode {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({android.support.v4.media.session.PlaybackStateCompat.STATE_NONE, android.support.v4.media.session.PlaybackStateCompat.STATE_STOPPED, android.support.v4.media.session.PlaybackStateCompat.STATE_PAUSED, android.support.v4.media.session.PlaybackStateCompat.STATE_PLAYING, android.support.v4.media.session.PlaybackStateCompat.STATE_FAST_FORWARDING, android.support.v4.media.session.PlaybackStateCompat.STATE_REWINDING, android.support.v4.media.session.PlaybackStateCompat.STATE_BUFFERING, android.support.v4.media.session.PlaybackStateCompat.STATE_ERROR, android.support.v4.media.session.PlaybackStateCompat.STATE_CONNECTING, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_QUEUE_ITEM}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface PlaybackStateCompat.State {
  }

}

package androidx.media {

  public class AudioAttributesCompat implements androidx.versionedparcelable.VersionedParcelable {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static androidx.media.AudioAttributesCompat! fromBundle(android.os.Bundle!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static void setForceLegacyBehavior(boolean);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public android.os.Bundle toBundle();
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public androidx.media.AudioAttributesImpl! mImpl;
  }

  @IntDef({androidx.media.AudioAttributesCompat.CONTENT_TYPE_UNKNOWN, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SPEECH, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MUSIC, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MOVIE, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SONIFICATION}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static @interface AudioAttributesCompat.AttributeContentType {
  }

  @IntDef({androidx.media.AudioAttributesCompat.USAGE_UNKNOWN, androidx.media.AudioAttributesCompat.USAGE_MEDIA, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION_SIGNALLING, androidx.media.AudioAttributesCompat.USAGE_ALARM, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_RINGTONE, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_EVENT, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_SONIFICATION, androidx.media.AudioAttributesCompat.USAGE_GAME, androidx.media.AudioAttributesCompat.USAGE_ASSISTANT}) @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface AudioAttributesCompat.AttributeUsage {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @RequiresApi(21) public class AudioAttributesImplApi21 implements androidx.versionedparcelable.VersionedParcelable {
    method public static androidx.media.AudioAttributesImpl! fromBundle(android.os.Bundle!);
    method public Object! getAudioAttributes();
    method public int getContentType();
    method public int getFlags();
    method public int getLegacyStreamType();
    method public int getRawLegacyStreamType();
    method @androidx.media.AudioAttributesCompat.AttributeUsage public int getUsage();
    method public int getVolumeControlStream();
    method public android.os.Bundle toBundle();
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public android.media.AudioAttributes! mAudioAttributes;
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public int mLegacyStreamType;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public class AudioAttributesImplBase implements androidx.versionedparcelable.VersionedParcelable {
    method public static androidx.media.AudioAttributesImpl! fromBundle(android.os.Bundle!);
    method public Object! getAudioAttributes();
    method public int getContentType();
    method public int getFlags();
    method public int getLegacyStreamType();
    method public int getRawLegacyStreamType();
    method @androidx.media.AudioAttributesCompat.AttributeUsage public int getUsage();
    method public int getVolumeControlStream();
    method public android.os.Bundle toBundle();
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public int mContentType;
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public int mFlags;
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public int mLegacyStream;
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public int mUsage;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @IntDef({androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE}) public static @interface AudioFocusRequestCompat.FocusGainType {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public class MediaBrowserCompatUtils {
    method public static boolean areSameOptions(android.os.Bundle!, android.os.Bundle!);
    method public static boolean hasDuplicatedItems(android.os.Bundle!, android.os.Bundle!);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public class MediaBrowserProtocol {
    field public static final int CLIENT_MSG_ADD_SUBSCRIPTION = 3; // 0x3
    field public static final int CLIENT_MSG_CONNECT = 1; // 0x1
    field public static final int CLIENT_MSG_DISCONNECT = 2; // 0x2
    field public static final int CLIENT_MSG_GET_MEDIA_ITEM = 5; // 0x5
    field public static final int CLIENT_MSG_REGISTER_CALLBACK_MESSENGER = 6; // 0x6
    field public static final int CLIENT_MSG_REMOVE_SUBSCRIPTION = 4; // 0x4
    field public static final int CLIENT_MSG_SEARCH = 8; // 0x8
    field public static final int CLIENT_MSG_SEND_CUSTOM_ACTION = 9; // 0x9
    field public static final int CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER = 7; // 0x7
    field public static final int CLIENT_VERSION_1 = 1; // 0x1
    field public static final int CLIENT_VERSION_CURRENT = 1; // 0x1
    field public static final String DATA_CALLBACK_TOKEN = "data_callback_token";
    field public static final String DATA_CALLING_PID = "data_calling_pid";
    field public static final String DATA_CALLING_UID = "data_calling_uid";
    field public static final String DATA_CUSTOM_ACTION = "data_custom_action";
    field public static final String DATA_CUSTOM_ACTION_EXTRAS = "data_custom_action_extras";
    field public static final String DATA_MEDIA_ITEM_ID = "data_media_item_id";
    field public static final String DATA_MEDIA_ITEM_LIST = "data_media_item_list";
    field public static final String DATA_MEDIA_SESSION_TOKEN = "data_media_session_token";
    field public static final String DATA_NOTIFY_CHILDREN_CHANGED_OPTIONS = "data_notify_children_changed_options";
    field public static final String DATA_OPTIONS = "data_options";
    field public static final String DATA_PACKAGE_NAME = "data_package_name";
    field public static final String DATA_RESULT_RECEIVER = "data_result_receiver";
    field public static final String DATA_ROOT_HINTS = "data_root_hints";
    field public static final String DATA_SEARCH_EXTRAS = "data_search_extras";
    field public static final String DATA_SEARCH_QUERY = "data_search_query";
    field public static final String EXTRA_CLIENT_VERSION = "extra_client_version";
    field public static final String EXTRA_MESSENGER_BINDER = "extra_messenger";
    field public static final String EXTRA_SERVICE_VERSION = "extra_service_version";
    field public static final String EXTRA_SESSION_BINDER = "extra_session_binder";
    field public static final int SERVICE_MSG_ON_CONNECT = 1; // 0x1
    field public static final int SERVICE_MSG_ON_CONNECT_FAILED = 2; // 0x2
    field public static final int SERVICE_MSG_ON_LOAD_CHILDREN = 3; // 0x3
    field public static final int SERVICE_VERSION_1 = 1; // 0x1
    field public static final int SERVICE_VERSION_2 = 2; // 0x2
    field public static final int SERVICE_VERSION_CURRENT = 2; // 0x2
  }

  public abstract class MediaBrowserServiceCompat extends android.app.Service {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public void attachToBaseContext(android.content.Context!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public void notifyChildrenChanged(androidx.media.MediaSessionManager.RemoteUserInfo, String, android.os.Bundle);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public void onSubscribe(String!, android.os.Bundle!);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public void onUnsubscribe(String!);
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String KEY_MEDIA_ITEM = "media_item";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final String KEY_SEARCH_RESULTS = "search_results";
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final int RESULT_ERROR = -1; // 0xffffffff
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final int RESULT_OK = 0; // 0x0
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static final int RESULT_PROGRESS_UPDATE = 1; // 0x1
  }

  public static final class MediaSessionManager.RemoteUserInfo {
    ctor @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @RequiresApi(28) public MediaSessionManager.RemoteUserInfo(android.media.session.MediaSessionManager.RemoteUserInfo!);
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static final int UNKNOWN_PID = -1; // 0xffffffff
    field @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static final int UNKNOWN_UID = -1; // 0xffffffff
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) @IntDef({androidx.media.VolumeProviderCompat.VOLUME_CONTROL_FIXED, androidx.media.VolumeProviderCompat.VOLUME_CONTROL_RELATIVE, androidx.media.VolumeProviderCompat.VOLUME_CONTROL_ABSOLUTE}) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) public static @interface VolumeProviderCompat.ControlType {
  }

}

package androidx.media.session {

  public class MediaButtonReceiver extends android.content.BroadcastReceiver {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY) public static android.content.ComponentName! getMediaButtonReceiverComponent(android.content.Context!);
  }

}

