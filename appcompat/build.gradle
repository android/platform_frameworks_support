import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
<<<<<<< HEAD   (45b71a Merge "Merge empty history for sparse-5611686-L1840000032132)
=======
import androidx.build.Publish
>>>>>>> BRANCH (2c8b21 Merge "Merge cherrypicks of [973155, 973156] into sparse-561)

plugins {
    id("SupportAndroidLibraryPlugin")
}

dependencies {
    api(project(":annotation"))

    api(project(":core"))
    implementation(project(":collection"))
    api(project(":cursoradapter"))
    api(project(":fragment"))
    api(project(":appcompat:appcompat-resources"))
    api("androidx.drawerlayout:drawerlayout:1.0.0")

    androidTestImplementation(TEST_EXT_JUNIT)
    androidTestImplementation(TEST_CORE)
    androidTestImplementation(TEST_RUNNER)
    androidTestImplementation(TEST_RULES)
    androidTestImplementation(TRUTH)
    androidTestImplementation(ESPRESSO_CORE, libs.exclude_for_espresso)
    androidTestImplementation(MOCKITO_CORE, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker
    androidTestImplementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker
    androidTestImplementation project(':internal-testutils'), {
        exclude group: 'androidx.appcompat', module: 'appcompat'
    }
}

android {
    defaultConfig {
        // This disables the builds tools automatic vector -> PNG generation
        generatedDensities = []
    }

    sourceSets {
        main.res.srcDirs 'res', 'res-public'
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
        noCompress 'ttf'
    }

    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")
    }
}

supportLibrary {
    name = "Android AppCompat Library v7"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.APPCOMPAT
    mavenGroup = LibraryGroups.APPCOMPAT
    inceptionYear = "2011"
    description = "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren\'t a part of the framework APIs. Compatible on devices running API 14 or later."
    failOnUncheckedWarnings = false
    failOnDeprecationWarnings = false
}
