{
  "comments": [
    {
      "key": {
        "uuid": "e7c4c423_f35ea2df",
        "filename": "activity/src/androidTest/java/androidx/activity/ComponentActivityRunOnNextRecreateTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:17:19Z",
      "side": 1,
      "message": "Add a test for loading a class with work in a static init block that isn\u0027t an instance of autorecreateable - verify that static init is not called and that an error is thrown",
      "range": {
        "startLine": 33,
        "startChar": 45,
        "endLine": 33,
        "endChar": 46
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caba1850_8276737b",
        "filename": "activity/src/androidTest/java/androidx/activity/ComponentActivityRunOnNextRecreateTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "Added SavedStateRegistryTest#sneakClass, though not 100% sure that it is what you meant",
      "parentUuid": "e7c4c423_f35ea2df",
      "range": {
        "startLine": 33,
        "startChar": 45,
        "endLine": 33,
        "endChar": 46
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89de9c25_1fa8186c",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:13:30Z",
      "side": 1,
      "message": "final?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 5
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c825699_be100894",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89de9c25_1fa8186c",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 5
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c332220_470f4d4e",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:13:30Z",
      "side": 1,
      "message": "Wouldn\u0027t seeing an bundle stored at CLASSES_KEY but with no entries be an error?",
      "range": {
        "startLine": 54,
        "startChar": 12,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cacf1ad_4bd2cd29",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "Agree, should be error",
      "parentUuid": "5c332220_470f4d4e",
      "range": {
        "startLine": 54,
        "startChar": 12,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80b46ace_9aacbb60",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:46Z",
      "side": 1,
      "message": "done",
      "parentUuid": "8cacf1ad_4bd2cd29",
      "range": {
        "startLine": 54,
        "startChar": 12,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96f93cef_fdde00b8",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:13:30Z",
      "side": 1,
      "message": "Instead of instanceof check, use class.forname(name, false, classloader).asSubClass(AutoCreated.class)\n\nThis lets you do your validation before executing any code from the class. Historically this has caused some vulnerabilities in android, like fragment injection and a serializable bug.",
      "range": {
        "startLine": 70,
        "startChar": 24,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8d509df_df242df3",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "oh, interesting, found a doc about it. \n\nThanks and done.",
      "parentUuid": "96f93cef_fdde00b8",
      "range": {
        "startLine": 70,
        "startChar": 24,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2e293d3_03624537",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:13:30Z",
      "side": 1,
      "message": "No error if state is already saved?",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbd8515a_d5c3717b",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "I\u0027m going back and forth on that (yeah, I know that you banned commitAllowingStateLoss), because savedstate is lossy by its nature. Anyhow, I added it here, because for this usecase it looks like that if you can\u0027t guarantee lifecycle state, then it points on structural issue in your app / library",
      "parentUuid": "d2e293d3_03624537",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "098d6baa_f7e834f4",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-21T19:10:02Z",
      "side": 1,
      "message": "Why is it lossy by nature?",
      "parentUuid": "cbd8515a_d5c3717b",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d13d31e2_469450da",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-21T20:07:41Z",
      "side": 1,
      "message": "well I meant by \"lossy\": \nBecause even if you returned something as saved state, system still can drop it on the floor. So you should always expect that you can receive \u0027null\u0027 no matter what is your persistent state (like sql) is. \n\nSecondly, let\u0027s say after applying some changes to persistent state you want to change your savedstate as a result - you can\u0027t guarantee that change is going to be ever applied (app went to background and never came back).  Similarly in other direction, you changed your savedstate - no guarantee that your persistent storage will have time to change accordingly. \nTo sum up, once your savedstate is not about UI, but about having keys to some persistent data - you can\u0027t get consistency (so for cases like these I\u0027d say it is okay to update your savedstate opportunistically) \n\nHowever, this exact case doesn\u0027t fall into this category.",
      "parentUuid": "098d6baa_f7e834f4",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c610c2f_56db9064",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-21T20:32:42Z",
      "side": 1,
      "message": "OK. I differentiate between \"lossy\" where if you thrown your phone in a lake the state is lost, and \"lossy\" where your code is dumping data off to /dev/null. The problem is that updating opportunistically doesn\u0027t make a ton of sense - we know that updating saved state outside the lifecycle will not ever actually save state. I think that this API should raise an error if state is lost for any reason other than the system losing the underlying state.",
      "parentUuid": "d13d31e2_469450da",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe12c25c_2b8769d6",
        "filename": "savedstate/src/main/java/androidx/savedstate/Recreator.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-21T23:06:20Z",
      "side": 1,
      "message": "Just to be clear, in this API, I do check and throw but in earlier stage: SavedStateRegistry#runOnNextRecreation",
      "parentUuid": "9c610c2f_56db9064",
      "range": {
        "startLine": 96,
        "startChar": 13,
        "endLine": 96,
        "endChar": 16
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7a848ef_4c89952a",
        "filename": "savedstate/src/main/java/androidx/savedstate/SavedStateRegistry.java",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:17:19Z",
      "side": 1,
      "message": "Need to add a proguard spec - \n\nkeepclassmembers * extens blah.AutoRecreated {\n\u003cinit\u003e();\n}",
      "range": {
        "startLine": 136,
        "startChar": 21,
        "endLine": 136,
        "endChar": 34
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5709e598_10c3f4ee",
        "filename": "savedstate/src/main/java/androidx/savedstate/SavedStateRegistry.java",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7a848ef_4c89952a",
      "range": {
        "startLine": 136,
        "startChar": 21,
        "endLine": 136,
        "endChar": 34
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9324ba42_a54269f3",
        "filename": "savedstate/src/main/java/androidx/savedstate/SavedStateRegistry.java",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2019-02-01T01:17:19Z",
      "side": 1,
      "message": "Consider validating the presence of the default constructor here, rather than maybe failing later which people won\u0027t test",
      "range": {
        "startLine": 161,
        "startChar": 37,
        "endLine": 161,
        "endChar": 44
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ebb152b_9e7aef29",
        "filename": "savedstate/src/main/java/androidx/savedstate/SavedStateRegistry.java",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-02-14T14:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9324ba42_a54269f3",
      "range": {
        "startLine": 161,
        "startChar": 37,
        "endLine": 161,
        "endChar": 44
      },
      "revId": "cb51e75547075ef8796d90436e06bdecce72ae23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}