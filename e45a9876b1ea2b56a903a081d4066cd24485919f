{
  "comments": [
    {
      "key": {
        "uuid": "a879c821_ac528140",
        "filename": "webkit/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "This should be final, right?",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88903016_372caee6",
        "filename": "webkit/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "I didn\u0027t see that in the Guidelines and other Builders here are also not final, should I still change this one to final?",
      "parentUuid": "a879c821_ac528140",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58c6b671_1ffac21f",
        "filename": "webkit/api/current.txt",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-26T18:03:26Z",
      "side": 1,
      "message": "In general we tried to scope things down as much as possible, we prefer private methods over public, we prefer final classes/methods over overridables ones. That way, if we ever change our mind, we can still open it up, but it is not possible to go the other way. The question is really if you expect a developer to extend it and in this case I would say yes, so it should probably be final.",
      "parentUuid": "88903016_372caee6",
      "range": {
        "startLine": 11,
        "startChar": 22,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97925708_845057e8",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "just spell it out, \"for example\"",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 43
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1810a1b_e1c49941",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97925708_845057e8",
      "range": {
        "startLine": 30,
        "startChar": 41,
        "endLine": 30,
        "endChar": 43
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2c26266_c080b14e",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "Is fallback to direct not the default already? If so, why?",
      "range": {
        "startLine": 39,
        "startChar": 54,
        "endLine": 39,
        "endChar": 87
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e15b4e68_189f4531",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "It\u0027s not. If setProxyOverride is called, only rules explicitly added will be used.",
      "parentUuid": "c2c26266_c080b14e",
      "range": {
        "startLine": 39,
        "startChar": 54,
        "endLine": 39,
        "endChar": 87
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92951fef_8019b07e",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-26T18:03:26Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "e15b4e68_189f4531",
      "range": {
        "startLine": 39,
        "startChar": 54,
        "endLine": 39,
        "endChar": 87
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce84a14e_ead40f21",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "naming for these 3 seems inconsitent, should they be called MATCH_HTTP, MATCH_HTTPS, MATCH_ALL_SCHEMES?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877aca42_05a00b58",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce84a14e_ead40f21",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c83ab82_6c182824",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "Why are we using strings and not something like java.net.URL?",
      "range": {
        "startLine": 151,
        "startChar": 52,
        "endLine": 151,
        "endChar": 60
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a2a34ec_d8fd58de",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-02-22T05:35:12Z",
      "side": 1,
      "message": "For this specific API: this is not strictly a URL. As described by the javadoc, this differs from a URL/URI as such:\n\n * may or may not have a scheme (URIs require this, per https://tools.ietf.org/html/rfc2396)\n * cannot have a path, query, fragment, username/password (URIs permit these)\n\nAs this is not a URI, I recommended La√≠s to avoid android.net.Uri. I think the same argument applies to URLs/java.net.URL (but I\u0027m less familiar with this definition, feel free to correct me). I recommend String because (1) it doesn\u0027t mislead users into thinking we support queries/fragments/etc., and (2) string literals will always be more convenient to use than some custom type we create for this purpose (that feels like overkill).\n\nThat said, we should probably rename the variable. How about \"proxyOrigin\"? Per the RFC defining the term (https://tools.ietf.org/html/rfc6454):\n\n\u003e Roughly speaking, two URIs are part of the same origin (i.e., represent the same principal) if they have the same scheme, host, and port.\n\n^ This basically describes what we\u0027re asking for (the minor difference is that we\u0027ll choose default values for scheme \u0026 port for the app\u0027s convenience).\n\n---\n\nAs a general question: does API council prefer java.net.URL or android.net.Uri? Is this context-dependent? Couldn\u0027t find an answer on http://go/android-api-guidelines",
      "parentUuid": "4c83ab82_6c182824",
      "range": {
        "startLine": 151,
        "startChar": 52,
        "endLine": 151,
        "endChar": 60
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0874cce4_9ca13b37",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-26T18:03:26Z",
      "side": 1,
      "message": "Makes sense. I general we lean towards android.net.Uri as it is more flexible.",
      "parentUuid": "8a2a34ec_d8fd58de",
      "range": {
        "startLine": 151,
        "startChar": 52,
        "endLine": 151,
        "endChar": 60
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc022193_85199c55",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 194,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "do* seems like a method pattern we don\u0027t use in platform.\n\nCould something like disableProxyForLocalNetworkRequests() work?",
      "range": {
        "startLine": 194,
        "startChar": 23,
        "endLine": 194,
        "endChar": 53
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65ed43a1_ad9d2eaf",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 194,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "Renamed to bypassLocalNetworkRequests(). We didn\u0027t want to use \"disable\" because that might give the wrong idea.",
      "parentUuid": "dc022193_85199c55",
      "range": {
        "startLine": 194,
        "startChar": 23,
        "endLine": 194,
        "endChar": 53
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14ff7e90_e6e32aed",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "Explain this more, it is mot clear to me what calling this does, loopback request is not even mentioned in the javadoc.",
      "range": {
        "startLine": 199,
        "startChar": 11,
        "endLine": 200,
        "endChar": 34
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7b9a7a7_2a3b92cc",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-02-22T05:35:12Z",
      "side": 1,
      "message": "We struggled a lot on this javadoc. Maybe it\u0027s best if La√≠s can CC a Chrome net expert and hear their advice on the javadoc? I agree this is confusing to Android developers, and we should explain these terms better (or, link to authoritative definitions).",
      "parentUuid": "14ff7e90_e6e32aed",
      "range": {
        "startLine": 199,
        "startChar": 11,
        "endLine": 200,
        "endChar": 34
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9bdb64e_8f235286",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "Rephrased. I\u0027ll ask eroman@ to look at these 2 javadocs to make sure my phrasing is correct.",
      "parentUuid": "a7b9a7a7_2a3b92cc",
      "range": {
        "startLine": 199,
        "startChar": 11,
        "endLine": 200,
        "endChar": 34
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc80236_40482173",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "Similar as above, do not use \"do*\" in the method name, go with something like enableProxyForLoopbackRequests() or setProxyLoopbackRequestsEnabled()",
      "range": {
        "startLine": 203,
        "startChar": 23,
        "endLine": 203,
        "endChar": 46
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "166d99df_74d43a8a",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 203,
      "author": {
        "id": 1344364
      },
      "writtenOn": "2019-02-22T14:20:23Z",
      "side": 1,
      "message": "Renamed to proxyLoopbackRequests()",
      "parentUuid": "bdc80236_40482173",
      "range": {
        "startLine": 203,
        "startChar": 23,
        "endLine": 203,
        "endChar": 46
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "107a723a_452f30a2",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyController.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-22T04:34:59Z",
      "side": 1,
      "message": "I assume this should be private to library right? Scope.LIBRARY",
      "range": {
        "startLine": 57,
        "startChar": 16,
        "endLine": 57,
        "endChar": 53
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d4e2e0_2ecf7a78",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyController.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-02-22T05:35:12Z",
      "side": 1,
      "message": "IIUC both will work, but LIBRARY is a smaller scope? If that\u0027s correct, then all of our @RestrictTo\u0027s should be LIBRARY (we don\u0027t want to expose hidden code to other AndroidX modules). Could you file a ticket against our component to clean this up?\n\n---\n\nFor this particular API, I think we only use this in the subclass. Perhaps we should use Scope.SUBCLASSES instead?",
      "parentUuid": "107a723a_452f30a2",
      "range": {
        "startLine": 57,
        "startChar": 16,
        "endLine": 57,
        "endChar": 53
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3479f00c_4825cec8",
        "filename": "webkit/src/main/java/androidx/webkit/ProxyController.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-02-26T18:03:26Z",
      "side": 1,
      "message": "Yes library is a smaller scope. You can change it in a follow up CL. Please file a bug for it.",
      "parentUuid": "c2d4e2e0_2ecf7a78",
      "range": {
        "startLine": 57,
        "startChar": 16,
        "endLine": 57,
        "endChar": 53
      },
      "revId": "e45a9876b1ea2b56a903a081d4066cd24485919f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}