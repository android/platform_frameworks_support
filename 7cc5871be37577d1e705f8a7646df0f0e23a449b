{
  "comments": [
    {
      "key": {
        "uuid": "39cb3934_1f63460f",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-04-29T14:16:08Z",
      "side": 1,
      "message": "Can we pass this parameter to the Processor.transform() method instead? (This makes it easier to run Jetifer depending on what\u0027s on a whitelist---see my comment below.)",
      "range": {
        "startLine": 88,
        "startChar": 11,
        "endLine": 88,
        "endChar": 48
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a444895_ab4bb8a4",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-26T15:53:45Z",
      "side": 1,
      "message": "Do we want to update jetifier/jetifier/standalone/src/main/kotlin/com/android/tools/build/jetifier/standalone/Main.kt to call createProcessor4?",
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83db9732_39b29905",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-29T13:52:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a444895_ab4bb8a4",
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1446f58_0d80a2c1",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-26T15:14:32Z",
      "side": 1,
      "message": "Hung: The new functionality can be turned on here. I would recommend having a gradle config property for it to turn it off in emergency cases (people can be still using old androidX where navigation and workmanager were not migrated).",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 100,
        "endChar": 60
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c879971_15fc0503",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-26T15:53:45Z",
      "side": 1,
      "message": "Could be cool to keep the ordering of the \"stripSignatures\" and \"skipLibsWithAndroidXReferences\" arguments the same if it\u0027s not too much trouble (it looks like there are some default arguments though)",
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f9d7209_958c05a9",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-04-29T13:34:51Z",
      "side": 1,
      "message": "If they\u0027re using old navigation and workmanager, I thought the better fix would be to upgrade those dependencies instead of disabling the flag?",
      "parentUuid": "c1446f58_0d80a2c1",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 100,
        "endChar": 60
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170a675d_e05d8723",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-29T13:52:02Z",
      "side": 1,
      "message": "I don\u0027t know why. But I started this tradition of dataBinding always going last as I felt like that is the most optional thing ever. So I\u0027m just honoring that standard. Is this what you\u0027ve meant? Is it ok this way?",
      "parentUuid": "7c879971_15fc0503",
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b8deaab_c6c2206d",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-29T13:52:02Z",
      "side": 1,
      "message": "Right, I agree with that. Probably that was a wrong example. But what if there is something else that we missed? I\u0027m honestly not sure if in gazillions of configurations outside something will not play nicely with this detection. I think we should have a safety net here.",
      "parentUuid": "3f9d7209_958c05a9",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 100,
        "endChar": 60
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8313040b_16e0a8a9",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-04-29T14:16:08Z",
      "side": 1,
      "message": "Okay, I\u0027ll add a property in the AGP. I\u0027m thinking the property can be a whitelist, so that it is more general, and can be used as safety net for other cases. (With the blacklist and whitelist, the users have good control over what will be jetified.)",
      "parentUuid": "1b8deaab_c6c2206d",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 100,
        "endChar": 60
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adfcb7fc_a5c450ec",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-26T15:14:32Z",
      "side": 1,
      "message": "Hung: Any idea on better way how AGP could consume that and propagate to user or even Android Studio and offer to turn jetifier off?",
      "range": {
        "startLine": 349,
        "startChar": 12,
        "endLine": 349,
        "endChar": 94
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2a7ca9a_721bf260",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-04-29T13:34:51Z",
      "side": 1,
      "message": "Jetifier can take an empty List\u003cJetifierIssue\u003e from the AGP and fill in any issues that it encounters.\n\nHowever, I think it\u0027s not safe to turn off Jetifier because Jetifier may not be needed in one build but still needed in another build of the same project (e.g., if a different configuration is resolved, it might trigger the need for Jetifier). Currently, the AGP even calls Jetifier once for each library, so suggesting turning off Jetifier based on any one library is not correct.\n\nOn the other hand, leaving Jetifier on does not impact build speed significantly as it is cached.",
      "parentUuid": "adfcb7fc_a5c450ec",
      "range": {
        "startLine": 349,
        "startChar": 12,
        "endLine": 349,
        "endChar": 94
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "323e9c16_56f92582",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-29T13:52:02Z",
      "side": 1,
      "message": "Yes, but I see people introducing their own gradle plugins to check if they can finally turn off jetifier. So I was thinking that having something we providee. Maybe we can\u0027t solve it on this level but it is something we should think about. \n\nIn case you run it per library I guess this warning would be too aggressive. So I just changed it to \"info\" level. You can currently detect it actually if you look at the path path of the returned file. If its path is \u003d\u003d \"given path\" it was not modified.",
      "parentUuid": "d2a7ca9a_721bf260",
      "range": {
        "startLine": 349,
        "startChar": 12,
        "endLine": 349,
        "endChar": 94
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14265546_c413c4e1",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-04-29T14:16:08Z",
      "side": 1,
      "message": "\"Maybe we can\u0027t solve it on this level but it is something we should think about.\" \u003d\u003e Ack, I\u0027ve made a note for myself on this.\n\n\"If its path is \u003d\u003d \"given path\" it was not modified.\" \u003d\u003e Right, that\u0027s why I think this decision should be left to the AGP. Should we remove this message as it is somewhat misleading? (Except when it is run as part of the Jetifier standalone, then having this message is helpful.)",
      "parentUuid": "323e9c16_56f92582",
      "range": {
        "startLine": 349,
        "startChar": 12,
        "endLine": 349,
        "endChar": 94
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bd7c6cf_a3f7049b",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-26T15:53:45Z",
      "side": 1,
      "message": "I guess that means that if Jetifier is asked to jetify an artifact that contains both a Support Library class and also the corresponding AndroidX class, then Jetifier will no longer fail with a duplicate zip entry error. Do we know if anyone was relying on that behavior for the purpose of detecting mistakes?",
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65d1b1af_a0d4666c",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-29T13:52:02Z",
      "side": 1,
      "message": "I don\u0027t know if anyone relied on this. I actually think it might be even incorrect behavior. Because if you have both maybe you want the jar to be usable by both? I think most of the duplicates were happening when devs have both androidx and android.support jars but that will still fail as android.support will not be removed by this detection.",
      "parentUuid": "1bd7c6cf_a3f7049b",
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5aa6f6a_87a2e742",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-26T15:53:45Z",
      "side": 1,
      "message": "Is skipLibsWithAndroidXReferences not supported in reversed mode or intentionally disabled? I\u0027d assume that it would be intentionally disabled. Maybe elaborate this comment to make it something more like:\n\n  // When in reverse mode, process all libraries\n  // Otherwise, when jetifying, skip processing any libs that already contain references to AndroidX (they don\u0027t need to be re-jetified)\n\n?",
      "range": {
        "startLine": 377,
        "startChar": 43,
        "endLine": 377,
        "endChar": 44
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce54cc6e_e0712b61",
        "filename": "jetifier/jetifier/processor/src/main/kotlin/com/android/tools/build/jetifier/processor/Processor.kt",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2019-04-29T13:52:02Z",
      "side": 1,
      "message": "Detecting AndroidX in reversed mode would not work. We would have to look for android.support so I would have to introduce more logic. But in fact we don\u0027t need it. I don\u0027t know about any reversed mode usage that needs this smart skip stuff.\n\nI updated this method and comments. PTAL :) Thanks!",
      "parentUuid": "d5aa6f6a_87a2e742",
      "range": {
        "startLine": 377,
        "startChar": 43,
        "endLine": 377,
        "endChar": 44
      },
      "revId": "7cc5871be37577d1e705f8a7646df0f0e23a449b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}