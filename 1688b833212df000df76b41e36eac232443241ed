{
  "comments": [
    {
      "key": {
        "uuid": "f80f5643_d6ea680c",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 232,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2019-06-27T14:59:23Z",
      "side": 1,
      "message": "It isn\u0027t clear from this name what you\u0027re trying to test. Add a comment above this test to explain it.",
      "range": {
        "startLine": 232,
        "startChar": 8,
        "endLine": 232,
        "endChar": 26
      },
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f32193a_f812e718",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 232,
      "author": {
        "id": 1442279
      },
      "writtenOn": "2019-06-27T17:28:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f80f5643_d6ea680c",
      "range": {
        "startLine": 232,
        "startChar": 8,
        "endLine": 232,
        "endChar": 26
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16527f82_79478545",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 239,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2019-06-27T14:59:23Z",
      "side": 1,
      "message": "This seems wrong. You shouldn\u0027t be able to add an arbitrary view to a FragmentContainerView. You should be getting an error.",
      "range": {
        "startLine": 239,
        "startChar": 30,
        "endLine": 239,
        "endChar": 37
      },
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "795ac5a9_318975f3",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 239,
      "author": {
        "id": 1442279
      },
      "writtenOn": "2019-06-27T17:28:17Z",
      "side": 1,
      "message": "I can find a way around it in test, but I am not sure if it should throw an error. This is how FragmentManagerImpl adds views to the container. Since a Fragment can have any type of view (FragmentContainerView, FrameLayout, sadly LinearLayout, etc), we should support adding any type of view to the container.",
      "parentUuid": "16527f82_79478545",
      "range": {
        "startLine": 239,
        "startChar": 30,
        "endLine": 239,
        "endChar": 37
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc30e1_24cdff16",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 239,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2019-06-27T17:29:43Z",
      "side": 1,
      "message": "Let\u0027s approach whitelisting Fragment managed Views in a follow up CL.",
      "parentUuid": "795ac5a9_318975f3",
      "range": {
        "startLine": 239,
        "startChar": 30,
        "endLine": 239,
        "endChar": 37
      },
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "876af701_2b60c672",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2019-06-27T14:59:23Z",
      "side": 1,
      "message": "This could be a problem if you catch it in the middle of drawing because it could be that frag1View just drew on this frame, but frag2View hasn\u0027t drawn on this frame yet. You can fix that by activityRule.runOnUiThread {} to ensure that you don\u0027t catch mid-draw.\n\nI *think* nanoTime is accurate enough here to catch the difference in draw order.",
      "range": {
        "startLine": 262,
        "startChar": 8,
        "endLine": 262,
        "endChar": 61
      },
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54d44aa2_8b77fb94",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1442279
      },
      "writtenOn": "2019-06-27T17:28:17Z",
      "side": 1,
      "message": "Will the call to arctivityRule.waitForExecution() not ensure that we wait for at least 2 frames just in case frag2View misses on the first?\n\nMilliseconds can catch it sometimes, nano should be good enough for it to be consistent.",
      "parentUuid": "876af701_2b60c672",
      "range": {
        "startLine": 262,
        "startChar": 8,
        "endLine": 262,
        "endChar": 61
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44b179d1_cdbd0e0f",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 273,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2019-06-27T14:59:23Z",
      "side": 1,
      "message": "This class is a little scary. Why would you need to view.invalidate() on removeView()?",
      "range": {
        "startLine": 273,
        "startChar": 4,
        "endLine": 273,
        "endChar": 76
      },
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97573f93_a57e9ac1",
        "filename": "fragment/fragment/src/androidTest/java/androidx/fragment/app/FragmentContainerViewTest.kt",
        "patchSetId": 9
      },
      "lineNbr": 273,
      "author": {
        "id": 1442279
      },
      "writtenOn": "2019-06-27T17:28:17Z",
      "side": 1,
      "message": "Disappearing views are normally not invalidated, and if a view is not invalidated, the draw(Canvas) method is never called so we do not get the onDraw() callback.",
      "parentUuid": "44b179d1_cdbd0e0f",
      "range": {
        "startLine": 273,
        "startChar": 4,
        "endLine": 273,
        "endChar": 76
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1688b833212df000df76b41e36eac232443241ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}