{
  "comments": [
    {
      "key": {
        "uuid": "7584a013_c63c4336",
        "filename": "car/cluster/api/current.txt",
        "patchSetId": 21
      },
      "lineNbr": 7,
      "author": {
        "id": 1014545
      },
      "writtenOn": "2018-08-23T21:15:31Z",
      "side": 1,
      "message": "Match the type for setEta",
      "range": {
        "startLine": 7,
        "startChar": 18,
        "endLine": 7,
        "endChar": 54
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e133aa6_49a0d005",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 122,
      "author": {
        "id": 1272573
      },
      "writtenOn": "2018-08-10T08:06:47Z",
      "side": 1,
      "message": "safe default to OK would be safer if we were to remove this field one day, rather than as written defaulting to not OK.\n\n() -\u003e new ProducerStatus(ProducerStatus.Code.OK, \"\")",
      "range": {
        "startLine": 122,
        "startChar": 48,
        "endLine": 122,
        "endChar": 67
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a102025d_12def56c",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 122,
      "author": {
        "id": 1286929
      },
      "writtenOn": "2018-08-10T20:03:50Z",
      "side": 1,
      "message": "Done, although I wonder if it wouldn\u0027t be safer to just let this be nullable (see comment below about nullability).",
      "parentUuid": "8e133aa6_49a0d005",
      "range": {
        "startLine": 122,
        "startChar": 48,
        "endLine": 122,
        "endChar": 67
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff2ad1eb_fc23d8f3",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 131,
      "author": {
        "id": 1272573
      },
      "writtenOn": "2018-08-10T08:06:47Z",
      "side": 1,
      "message": "good safe default",
      "range": {
        "startLine": 130,
        "startChar": 74,
        "endLine": 131,
        "endChar": 0
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5779f88f_1422c046",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 148,
      "author": {
        "id": 1272573
      },
      "writtenOn": "2018-08-10T08:06:47Z",
      "side": 1,
      "message": "Let\u0027s make this return a safe default non-null segment if we can. A segment with empty string would do the trick, perhaps?\n\nThis is my feedback throughout, that I\u0027m worried about using null to represent bad states, because after one client begins crashing on a null, we won\u0027t be able to ever represent \u0027not present\u0027 without breaking that client.\n\nI\u0027ve got to run, sorry I didn\u0027t give this a more thorough review today, but my broad goal for reviewing this on monday is to try and rework this so that we can signal not-present without using nulls.\n\nMy strawman plan is to basically copy how proto3 does this:\n- offer \u0027boolean hasX\u0027 getters that clients can use to tell if there is or isn\u0027t a segment being currently driven\n- offer \u0027@NonNull Message getX\u0027 getters that, even if the submessage isn\u0027t present, return a \u0027safe default\u0027 that won\u0027t hurt the client to use\n\nand do that throughout. If that sounds good to you, you could get started, otherwise fine to wait",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 148,
        "endChar": 0
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17794755_03644d5b",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 148,
      "author": {
        "id": 1286929
      },
      "writtenOn": "2018-08-10T20:03:50Z",
      "side": 1,
      "message": "Given the latest comments from the API council, I would leave this as is.\n\nOn my personal opinion, asking developers to call \"hasX\" before \"getX\" is as error prone as not checking for nulls. I prefer a fail-fast approach than having instrument clusters showing wrong data just because we are not longer sending something (I can already see a car showing \"1/1/1970\" in the display, or \"in 0 unknown, turn left\").\n\nIn the particular case of \"Segment\", today an empty string would do, but if we want to add more fields in the future we might find ourselves in a position where there are no good defaults (think time, distance, etc.).\n\nLets cover null management with proper testing support.",
      "parentUuid": "5779f88f_1422c046",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 148,
        "endChar": 0
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f8340ba_2ac9d880",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 148,
      "author": {
        "id": 1272573
      },
      "writtenOn": "2018-08-13T08:01:10Z",
      "side": 1,
      "message": "Sure, let\u0027s drop the has calls, and instead return messages with ways to indicate if they\u0027re invalid (reusing the UNKNOWN types we have throughout). Consumers already have to handle the UNKNOWN types by assuming the entire containing message is invalid. I\u0027ll leave individual comments.\n\nI\u0027m all for fail-fast, but I don\u0027t know what \u0027fail-fast\u0027 means for an API where the car might fail months later when we try to stop sending a field a consumer expects. That sounds like failing (to show any data) late, rather than failing fast.\n\nI\u0027d like us to spell out what proper testing means too - where do we test the consumer\u0027s code, and how? Can we enforce testing?\n\nI\u0027m much happier for a car to see 1/1/1970 in one field than the whole car\u0027s navstate (and maybe even other parts of the system, if the OEM bundled them into the same app) to be unusable due to a NPE.",
      "parentUuid": "17794755_03644d5b",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 148,
        "endChar": 0
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6c5470f_ed4e2201",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/NavigationState.java",
        "patchSetId": 21
      },
      "lineNbr": 148,
      "author": {
        "id": 1286929
      },
      "writtenOn": "2018-08-13T17:31:37Z",
      "side": 1,
      "message": "Yes, we can enforce the testing as part of CTS/CDD if the OEM wants to use GAS.\nI would rather exercise all the corner cases and see failures during tests, than having instrument cluster code pass the tests, without realizing that is showing wrong data on the display.\n\nIf you don\u0027t mind, I would rather move this problem to the API-council that deals with this type of situations more often than we do.",
      "parentUuid": "5f8340ba_2ac9d880",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 148,
        "endChar": 0
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ff31c3c_1ddab686",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/Time.java",
        "patchSetId": 21
      },
      "lineNbr": 66,
      "author": {
        "id": 1272573
      },
      "writtenOn": "2018-08-10T08:06:47Z",
      "side": 1,
      "message": "UTC may be a more sensible default than the system\u0027s default if no zone is sent",
      "range": {
        "startLine": 66,
        "startChar": 55,
        "endLine": 66,
        "endChar": 77
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef96892_4f5b8c8f",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/Time.java",
        "patchSetId": 21
      },
      "lineNbr": 66,
      "author": {
        "id": 1272573
      },
      "writtenOn": "2018-08-10T08:06:47Z",
      "side": 1,
      "message": "handle both null and empty here?",
      "range": {
        "startLine": 66,
        "startChar": 16,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac3f0294_c7dfa188",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/Time.java",
        "patchSetId": 21
      },
      "lineNbr": 66,
      "author": {
        "id": 1286929
      },
      "writtenOn": "2018-08-10T20:03:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aef96892_4f5b8c8f",
      "range": {
        "startLine": 66,
        "startChar": 16,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dc29fd8_2117fee8",
        "filename": "car/cluster/src/main/java/androidx/car/cluster/navigation/Time.java",
        "patchSetId": 21
      },
      "lineNbr": 66,
      "author": {
        "id": 1286929
      },
      "writtenOn": "2018-08-10T20:03:50Z",
      "side": 1,
      "message": "Given that we are assuming the OEMs will just take this and display it, I feel that showing time in UTC is not a good default. I would rather use the local timezone of the device (in this case, the car). \n\nTruth is, this is just a defense mechanism in case the message is corrupted. Time will be either be provided in full, or not provided. If we ever change the representation of time, we will need to create a new object \u0026 field.",
      "parentUuid": "9ff31c3c_1ddab686",
      "range": {
        "startLine": 66,
        "startChar": 55,
        "endLine": 66,
        "endChar": 77
      },
      "revId": "89bfb06781712f0f109bd22166f218f2ad008243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}