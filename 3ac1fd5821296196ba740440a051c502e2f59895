{
  "comments": [
    {
      "key": {
        "uuid": "2fd00348_6d3bbb59",
        "filename": "benchmark/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 7,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-21T02:28:40Z",
      "side": 1,
      "message": "This is not a checked exception",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cbbf049_9fafb13e",
        "filename": "benchmark/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 7,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "We want to also document runtime exceptions too. It is a good practice for both Java and Kotlin.",
      "parentUuid": "2fd00348_6d3bbb59",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c15b1ae_1e0c0876",
        "filename": "browser/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-21T02:28:40Z",
      "side": 1,
      "message": "Musing, out of scope: it\u0027d be rather clever if we could detect extras (incorrectly) named this way by looking for other \"Intent-like\" constants like ACTION_, etc.",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a7505a5_985f1c19",
        "filename": "buildSrc/src/main/kotlin/androidx/build/checkapi/ApiLocation.kt",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "Hmm, I kind of liked \"ViolationExclusions\" more than \"Baselines\" since the former indicates that it\u0027s an error to be ignored rather than the latter which sounds like it could refer to just the previous api to compare against ( https://www.google.com/search?q\u003ddefine+baseline defines \"baseline\" as \"a minimum or starting point used for comparisons\")\n\nHowever, Metalava itself seems to define this concept as a baseline too, which I guess is an argument in favor of \"Baselines\".\n\nI\u0027ll just mark this comment as resolved and if anyone has any opinions they can mention them",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95c308a4_07b94eb4",
        "filename": "buildSrc/src/main/kotlin/androidx/build/checkapi/ApiLocation.kt",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "Discussed this with alanv@, he suggested that he prefers to use baseline just so it is more closely aligned to metalava, --baseline someBaseLineFile.",
      "parentUuid": "4a7505a5_985f1c19",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40d79387_fdc5a9c7",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/GenerateApiTask.kt",
        "patchSetId": 11
      },
      "lineNbr": 70,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "recommend either passing an invalid file or putting a comment saying that this api lint baseline file isn\u0027t actually used",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3047b266_426e329b",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/GenerateApiTask.kt",
        "patchSetId": 11
      },
      "lineNbr": 70,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40d79387_fdc5a9c7",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3098af86_1d75e925",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/MetalavaRunner.kt",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "Hmm I wonder if we should move these arguments down by line 119 near \"--api-lint\" to make it extra clear that they\u0027re only triggered by api-lint",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "979400d4_75b375c1",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/MetalavaRunner.kt",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "I would prefer to keep all of the metalava arguments for which checks are enabled and disabled in one place. Do you feel like keeping them next to --api-lint is more important? If so, we\u0027ll need these in a constant as they are used by two different invocations of metalava: generateApi and updateApiLintBaselines.",
      "parentUuid": "3098af86_1d75e925",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ac55f8f_21c6df0a",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/MetalavaRunner.kt",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "I wonder if we want to mention the existence of the updateApiLintBaseline task if this task fails. I guess probably not but just checking if that\u0027s intentional",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb54a5a_0b2e430a",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/MetalavaRunner.kt",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "It is intentional not to mention it as we really don\u0027t want anyone to use it :)",
      "parentUuid": "2ac55f8f_21c6df0a",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff6413fa_76b5cd69",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "Maybe add this as a task description?",
      "range": {
        "startLine": 32,
        "startChar": 3,
        "endLine": 32,
        "endChar": 97
      },
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac821f7_8349bbdc",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff6413fa_76b5cd69",
      "range": {
        "startLine": 32,
        "startChar": 3,
        "endLine": 32,
        "endChar": 97
      },
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "221a7080_6078e677",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:45:40Z",
      "side": 1,
      "message": "Is this safe / idiomatic Gradle? I\u0027ve seen a dependent Copy task used elsewhere for chaining a copy operation with a generation operation.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 78
      },
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dde7e36_b0009378",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "I\u0027ve written some Copy tasks elsewhere because it was a convenient way to do a lazy unzipping of some dependencies - I haven\u0027t heard anything against running multiple pieces of code inside a task",
      "parentUuid": "221a7080_6078e677",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 78
      },
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39385717_e4ebe802",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "Deleted the need for updating of the baseline files.",
      "parentUuid": "9dde7e36_b0009378",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 78
      },
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5e53d9_5314eadc",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-06-24T19:35:51Z",
      "side": 1,
      "message": "I discovered recently that Metalava provides a \"--delete-empty-baselines\" argument too",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8f5afcb_617f4df4",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/UpdateBaselineTasks.kt",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "Started using this. Thanks!",
      "parentUuid": "0a5e53d9_5314eadc",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6afcff8a_980d32d3",
        "filename": "coordinatorlayout/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-21T02:28:40Z",
      "side": 1,
      "message": "This check is pretty questionably useful.  There are 5 of these - I checked and they were all correct as-is, because it\u0027s defined in the superclass and we\u0027re not saving any file descriptors.",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64af6081_ea782f01",
        "filename": "coordinatorlayout/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "I\u0027ll leave it as is for now. If we hit more issues with it then we can file a bug and improve it.",
      "parentUuid": "6afcff8a_980d32d3",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6a03170_f3854a28",
        "filename": "core/core/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 163,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-21T02:28:40Z",
      "side": 1,
      "message": "Minor: this is correct, should probably check if the class is non-final, because this is clearly not a listener interface.",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38847542_54a69703",
        "filename": "core/core/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 163,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "I\u0027ll just keep the check as is. We can improve if we hit more instances of this. I suspect it will be quite rare.",
      "parentUuid": "e6a03170_f3854a28",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bc0c47e_e290126d",
        "filename": "core/core/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 173,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-21T02:28:40Z",
      "side": 1,
      "message": "Super minor: this is correct, should probably check if the methods in question have at least one parameter",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3a6ddc9_4a8f7a10",
        "filename": "core/core/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 173,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "I\u0027ll just keep the check as is. We can improve if we hit more instances of this. I suspect it will be quite rare.",
      "parentUuid": "3bc0c47e_e290126d",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be0060ce_f91b21bc",
        "filename": "customview/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-21T02:28:40Z",
      "side": 1,
      "message": "lol...",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbd128b0_35ced05e",
        "filename": "customview/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-06-25T18:24:45Z",
      "side": 1,
      "message": "In general, this is a valid check, so I think it makes sense to keep it.",
      "parentUuid": "be0060ce_f91b21bc",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5b340c6_89c27f9e",
        "filename": "customview/api/api_lint.ignore",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-06-26T01:29:37Z",
      "side": 1,
      "message": "Yeah, agreed, I just found it amusing",
      "parentUuid": "fbd128b0_35ced05e",
      "revId": "3ac1fd5821296196ba740440a051c502e2f59895",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}