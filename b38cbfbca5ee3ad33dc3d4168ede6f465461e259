{
  "comments": [
    {
      "key": {
        "uuid": "2141a988_1ef2f855",
        "filename": "lifecycle/runtime/eap/src/main/java/androidx/lifecycle/PausingDispatcher.kt",
        "patchSetId": 16
      },
      "lineNbr": 137,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-27T00:21:01Z",
      "side": 1,
      "message": "this is a possible solution but I\u0027m not sure it is the right thing to recommend because `!isActive` does not mean the lifecycle is destroyed, it might just mean some sub coroutine call cancelled our coroutine job.\nalso, this check could be `lifecycle.state \u003e\u003d STARTED` (no coroutine) and it would be more clear.\n\ni really like this dispatcher API for the happy paths but for handling errors etc, not sure how i feel about it ðŸ˜•",
      "range": {
        "startLine": 127,
        "startChar": 12,
        "endLine": 137,
        "endChar": 12
      },
      "revId": "b38cbfbca5ee3ad33dc3d4168ede6f465461e259",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe26243_57d14759",
        "filename": "lifecycle/runtime/eap/src/main/java/androidx/lifecycle/PausingDispatcher.kt",
        "patchSetId": 16
      },
      "lineNbr": 137,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-03-04T18:55:25Z",
      "side": 1,
      "message": "I talked with Tor, he mentioned that it will be easy to provide a lint check.\nSo i think that can more or less fix this concern.\n\n@Roman, do you think if there should be a more generic link check which flags catching Cancellation exception implicitly inside coroutines ? \n\nFor this use case, This is the rule i\u0027m thinking about:\n\nLook for catch statements inside the whenStarted\u0027s argument block. If they catch any cancelation exception, look for `if(lifecycle.currentState \u003e\u003d STARTED)` or `isActive` checks for UI/navigation access.\nSame for finally blocks.",
      "parentUuid": "2141a988_1ef2f855",
      "range": {
        "startLine": 127,
        "startChar": 12,
        "endLine": 137,
        "endChar": 12
      },
      "revId": "b38cbfbca5ee3ad33dc3d4168ede6f465461e259",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "407dd103_fcf2ade6",
        "filename": "lifecycle/runtime/eap/src/main/java/androidx/lifecycle/PausingDispatcher.kt",
        "patchSetId": 16
      },
      "lineNbr": 137,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-03-05T18:05:20Z",
      "side": 1,
      "message": "sergey: maybe recommend catching CanelablelException first and throw it (and also auto-fix?)",
      "parentUuid": "ffe26243_57d14759",
      "range": {
        "startLine": 127,
        "startChar": 12,
        "endLine": 137,
        "endChar": 12
      },
      "revId": "b38cbfbca5ee3ad33dc3d4168ede6f465461e259",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc27f846_d964b0e7",
        "filename": "lifecycle/runtime/eap/src/main/java/androidx/lifecycle/PausingDispatcher.kt",
        "patchSetId": 16
      },
      "lineNbr": 137,
      "author": {
        "id": 1445442
      },
      "writtenOn": "2019-03-06T09:48:00Z",
      "side": 1,
      "message": "Exception handling with coroutines is a tricky business and we do plan additional inspections. See this one, for example: https://youtrack.jetbrains.com/issue/KT-30294 However, the problem we are running in this particular case seems to be very Android-specific. Notice, that it is not related to catch(e: CancellationException). It also bites on try { ... } finally { ... } and I do expect that people would want to write this kind of code to reset their views at the end of their asynchronous action. The Android-specific issue is that you can only touch UI in certain states, so there has to be an Android-specific lint that in your `finally { ... }` block you can touch UI only if you have checked for lifecycle state.",
      "parentUuid": "407dd103_fcf2ade6",
      "range": {
        "startLine": 127,
        "startChar": 12,
        "endLine": 137,
        "endChar": 12
      },
      "revId": "b38cbfbca5ee3ad33dc3d4168ede6f465461e259",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}