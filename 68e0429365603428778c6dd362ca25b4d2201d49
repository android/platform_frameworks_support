{
  "comments": [
    {
      "key": {
        "uuid": "215fa96c_32c525d2",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-25T16:12:12Z",
      "side": 1,
      "message": "This resolves the SDK at configuration time, ideally don\u0027t do this until you need it for the task (e.g. either in the task implementation, which is fine if your task runs all the time, or as a task input if that\u0027s what you need)",
      "range": {
        "startLine": 37,
        "startChar": 43,
        "endLine": 37,
        "endChar": 56
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2cd7548_8b2b4ae4",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-25T16:12:12Z",
      "side": 1,
      "message": "We don\u0027t consider anything on the plugin class API - use the extension as before if possible.",
      "range": {
        "startLine": 37,
        "startChar": 33,
        "endLine": 37,
        "endChar": 42
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fd8be15_45eb93c6",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-04-25T22:08:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2cd7548_8b2b4ae4",
      "range": {
        "startLine": 37,
        "startChar": 33,
        "endLine": 37,
        "endChar": 42
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f75ea966_aa97d949",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-25T16:12:12Z",
      "side": 1,
      "message": "This idiom can be useful to avoid the plugin needing to be applied in a certain order.\n   //noinspection UnstableApiUsage\n        project.getPluginManager()\n                .withPlugin(\"com.android.application\",\n                        androidPlugin -\u003e {\n                            foundAppPlugin \u003d true;\n                            registerTasks(project);\n                        });\n        // Only used to verify that the android app plugin has been applied.\n        project.afterEvaluate(\n                project2 -\u003e {\n                    if (!foundAppPlugin) {\n                        throw new IllegalStateException(\n                                \"Need to apply the com.android.application plugin with this plugin\");\n                    }\n                });",
      "range": {
        "startLine": 43,
        "startChar": 18,
        "endLine": 43,
        "endChar": 40
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c078e4f_6b974a67",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-04-25T22:08:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f75ea966_aa97d949",
      "range": {
        "startLine": 43,
        "startChar": 18,
        "endLine": 43,
        "endChar": 40
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55a33677_59b29c63",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 83,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-25T16:12:12Z",
      "side": 1,
      "message": "What about using the variant API to only look at the configurations that matter.\n(using allDependencies is OK at configuration time, as it doesn\u0027t resolve the gradle configuration, but you could check the resolved configuration in the task if that helps)",
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1afd71e4_e7e0a086",
        "filename": "benchmark/gradle-plugin/src/main/kotlin/androidx/benchmark/gradle/BenchmarkPlugin.kt",
        "patchSetId": 13
      },
      "lineNbr": 83,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-04-25T22:08:35Z",
      "side": 1,
      "message": "Done - I added a matching filter here? Let me know if it can be more specific.",
      "parentUuid": "55a33677_59b29c63",
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5e4bf26_ab24cc97",
        "filename": "benchmark/gradle-plugin/src/test/kotlin/androidx/benchmark/gradle/BenchmarkPluginTest.kt",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-25T16:12:12Z",
      "side": 1,
      "message": "Gradle doesn\u0027t expect you to implement this interface",
      "range": {
        "startLine": 43,
        "startChar": 47,
        "endLine": 43,
        "endChar": 57
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd064ac3_6deda33b",
        "filename": "benchmark/gradle-plugin/src/test/kotlin/androidx/benchmark/gradle/BenchmarkPluginTest.kt",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-04-25T17:21:51Z",
      "side": 1,
      "message": "What\u0027s the right way to mock out the dependency in the test project without setting up a fake project and using the other GradleRunner testkit api which is probably overkill for this small test suite?",
      "parentUuid": "b5e4bf26_ab24cc97",
      "range": {
        "startLine": 43,
        "startChar": 47,
        "endLine": 43,
        "endChar": 57
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e909f1a9_5cfe8f8a",
        "filename": "benchmark/gradle-plugin/src/test/kotlin/androidx/benchmark/gradle/BenchmarkPluginTest.kt",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-04-26T02:47:21Z",
      "side": 1,
      "message": "Done - I ended up switching to the other testkit api",
      "parentUuid": "bd064ac3_6deda33b",
      "range": {
        "startLine": 43,
        "startChar": 47,
        "endLine": 43,
        "endChar": 57
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ecc62d6_8b32ec04",
        "filename": "benchmark/gradle-plugin/src/test/kotlin/androidx/benchmark/gradle/BenchmarkPluginTest.kt",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-26T13:32:26Z",
      "side": 1,
      "message": "Makes sense, I don\u0027t think there\u0027s an easy way to write tests with a mocked out dependency, it makes sense to use the integration test framework.",
      "parentUuid": "e909f1a9_5cfe8f8a",
      "range": {
        "startLine": 43,
        "startChar": 47,
        "endLine": 43,
        "endChar": 57
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18d7742b_9a436566",
        "filename": "benchmark/gradle-plugin/src/test/kotlin/androidx/benchmark/gradle/BenchmarkPluginTest.kt",
        "patchSetId": 13
      },
      "lineNbr": 104,
      "author": {
        "id": 1056183
      },
      "writtenOn": "2019-04-25T16:12:12Z",
      "side": 1,
      "message": "nit: consider kotlin.test assertFailsWith to assert the exception isn\u0027t some other failure.",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 47
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd36a7f2_94dc92c7",
        "filename": "benchmark/gradle-plugin/src/test/kotlin/androidx/benchmark/gradle/BenchmarkPluginTest.kt",
        "patchSetId": 13
      },
      "lineNbr": 104,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-04-25T22:08:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18d7742b_9a436566",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 47
      },
      "revId": "68e0429365603428778c6dd362ca25b4d2201d49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}