{
  "comments": [
    {
      "key": {
        "uuid": "377256dc_4e67f3bf",
        "filename": "buildSrc/src/main/kotlin/androidx/build/AndroidXPlugin.kt",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-01-07T21:05:03Z",
      "side": 1,
      "message": "can we extend existing instance of AffectedModuleDetector to account for this instead of calling it in another place ? (which will make it do the work twice).\nalso, changedProjects list does contain all dependants so you shouldn\u0027t need to check for dependants manually (though maybe you need it for prebuilt vs project mapping though that mapping is better done inside AffectedModuleDetector).",
      "revId": "c69fe2a388f111497bd2bb3c119a2f3a1b7071db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b4dccac_3fa5551e",
        "filename": "buildSrc/src/main/kotlin/androidx/build/AndroidXPlugin.kt",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1354330
      },
      "writtenOn": "2019-01-07T21:55:32Z",
      "side": 1,
      "message": "Okay, I\u0027ll do that, that should also help with tests in general",
      "parentUuid": "377256dc_4e67f3bf",
      "revId": "c69fe2a388f111497bd2bb3c119a2f3a1b7071db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "834d8417_21e87b9e",
        "filename": "buildSrc/src/main/kotlin/androidx/build/AndroidXPlugin.kt",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-01-07T19:40:19Z",
      "side": 1,
      "message": "think we already have this logic in AffectedModuleDetector, can we re-use it instead? (or modify it to work for this)",
      "revId": "c69fe2a388f111497bd2bb3c119a2f3a1b7071db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13841154_6e6adcca",
        "filename": "buildSrc/src/main/kotlin/androidx/build/AndroidXPlugin.kt",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1354330
      },
      "writtenOn": "2019-01-07T21:09:52Z",
      "side": 1,
      "message": "This is meant as an on demand function that will find dependents on a specific dependency whether it is a local or external project. AffectedModuleDetector pre-computes dependents on every single project and does not account for external modules. If it worked for external modules I would have used it, but the idea of pre-computing dependencies on  individual modules as well seems too messy to just add there (not to mention it would be limited to androidx modules, which is fine following a YAGNI philosophy), although it\u0027s possible to do that in anticipation and modify the function a ton.",
      "parentUuid": "834d8417_21e87b9e",
      "revId": "c69fe2a388f111497bd2bb3c119a2f3a1b7071db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2c3ec0e_a8b0f0ba",
        "filename": "buildSrc/src/main/kotlin/androidx/build/AndroidXPlugin.kt",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-01-07T23:07:26Z",
      "side": 1,
      "message": "Yes it does not account for external, we should add.\n\nBut on demand part is not correct. We Don\u0027t use DependencyTracker unless we are building on the server (see initialization of AffectedModuleDetector). So it does not cost anything locally and does not cost anything extra on the server since we need the information.\n\nAlso, it is not a good practice to duplicate functionality for a little change so even if pre vs on demand compute was important, it would be still better to consolidate this inside DependencyTracker.",
      "parentUuid": "13841154_6e6adcca",
      "revId": "c69fe2a388f111497bd2bb3c119a2f3a1b7071db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}