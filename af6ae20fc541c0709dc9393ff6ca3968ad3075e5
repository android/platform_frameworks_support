{
  "comments": [
    {
      "key": {
        "uuid": "59077fe5_0c6d949d",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2019-01-23T21:14:01Z",
      "side": 1,
      "message": "This is non-null, not sure how this could possibly be an !",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c718f7d_e0a55b59",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2019-01-24T00:42:19Z",
      "side": 1,
      "message": "That\u0027s weird. I tried to reproduce this as a unit test in lint and it passes there; I\u0027m not sure what\u0027s different...\n\nhttps://android-review.googlesource.com/c/platform/tools/metalava/+/883673/1/src/test/java/com/android/tools/metalava/ApiFileTest.kt",
      "parentUuid": "59077fe5_0c6d949d",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a09fd6_a87649d0",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2019-01-24T00:42:53Z",
      "side": 1,
      "message": "(I said \"in lint\" and I meant \"in metalava\")",
      "parentUuid": "5c718f7d_e0a55b59",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5845bf2d_442f1155",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-01-24T18:26:08Z",
      "side": 1,
      "message": "Hmm that\u0027s interesting.\n\n\nI can reproduce the \"!\" if I run:\n\n  mkdir -p /tmp/test\n  \u0026\u0026 echo -e \"class SampleClass1 { }\\nclass SampleClass2 { }\\nclass SampleClass3 { }\\ninline fun \u003creified Args : SampleClass1\u003e SampleClass2.sampleFunc() \u003d SampleClass3() { }\" \u003e /tmp/test/test.kt\n  \u0026\u0026 java -jar metalava-1.2.5-SNAPSHOT-shadow.jar --no-banner --source-path /tmp/test --api /tmp/current.txt --format\u003dv3\n  \u0026\u0026 grep \"!\" /tmp/current.txt\n\nwhich outputs\n\n  method public static inline \u003creified Args extends SampleClass1\u003e SampleClass3! sampleFunc(SampleClass2);\n\nbut I\u0027m not yet sure what\u0027s different between that and the unit test.",
      "parentUuid": "36a09fd6_a87649d0",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22de1a60_866fbaf9",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2019-01-24T19:29:35Z",
      "side": 1,
      "message": "I\u0027m not sure either, but I do know that the conversion from type signatures involving type use annotations to strings to Kotlin-style syntax is inexact; I have a branch where I\u0027m working on full type use support where I do much more accurate modeling of types which should do a better job here; maybe I\u0027ll go and merge that part (the type pretty printer) now. It was blocked on UAST 1.3 support but I integrated that the other day.",
      "parentUuid": "5845bf2d_442f1155",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1ee8e87_0e24d0e4",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-01-25T20:00:53Z",
      "side": 1,
      "message": "Ian: I\u0027ve now opened b/123415058 for this. Do you think it\u0027s reasonable to submit this change before addressing this bug?\n\nTor: let me know if you think it makes sense for me to look closer into it.",
      "parentUuid": "22de1a60_866fbaf9",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0245d731_f80f5bf4",
        "filename": "navigation/fragment/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2019-01-25T20:11:45Z",
      "side": 1,
      "message": "No, I\u0027m dusting off the proper type printing code now (I\u0027m just adding some additional unit tests) which I\u0027ll check in. That will hopefully fix this; if not, I\u0027ll try to repro in the androidx context.\n\nRe: checking in first: probably a good idea; the older version of metalava didn\u0027t include reified methods at all, so I think it\u0027s better to get it in even with an error in the type signature than to have the method fully missing :-)",
      "parentUuid": "a1ee8e87_0e24d0e4",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc8be5a_95940f70",
        "filename": "navigation/runtime/ktx/api/1.0.0-alpha10.txt",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2019-01-23T21:14:01Z",
      "side": 1,
      "message": "Same thing here - this is a Kotlin method returning an instance of a class. It should be non-null.",
      "range": {
        "startLine": 11,
        "startChar": 132,
        "endLine": 11,
        "endChar": 133
      },
      "revId": "af6ae20fc541c0709dc9393ff6ca3968ad3075e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}