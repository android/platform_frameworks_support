{
  "comments": [
    {
      "key": {
        "uuid": "c4d9905e_fabdb6fb",
        "filename": "room/compiler/src/main/kotlin/androidx/room/RoomProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-13T10:59:09Z",
      "side": 1,
      "message": "Once your CL https://android-review.googlesource.com/c/platform/frameworks/support/+/960214 is merged, we can make Room an isolating AP here.",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3b49d19_02b89586",
        "filename": "room/compiler/src/main/kotlin/androidx/room/RoomProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-21T15:47:26Z",
      "side": 1,
      "message": "FYI the CL has been merged. I\u0027m working on creating an RC branch for 2.1 and move HEAD to 2.2 to start merging IAP CLs.",
      "parentUuid": "c4d9905e_fabdb6fb",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ea75fc1_f626cacd",
        "filename": "room/compiler/src/main/kotlin/androidx/room/RoomProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-23T14:09:02Z",
      "side": 1,
      "message": "Cool! (Also, as discussed, Room is not ready to be an isolating AP yet.)",
      "parentUuid": "e3b49d19_02b89586",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f3af9b3_ddb52ffa",
        "filename": "room/compiler/src/main/kotlin/androidx/room/RoomProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-23T20:24:58Z",
      "side": 1,
      "message": "Are you sure we can\u0027t make this isolating now?\n\nBased on the Gradle IAP docs both aggregating and isolating must use the Filer API, what makes aggregating a better fit for the lack of usage of the Filer API vs isolating? Note that I understand we still need to solve the Filer API issue overall for Room to be correctly IAP, I\u0027m just trying to understand why can\u0027t we make this isolating now and add the Database class as the originating element.",
      "parentUuid": "6ea75fc1_f626cacd",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8695e78c_00a6aa6f",
        "filename": "room/compiler/src/main/kotlin/androidx/room/RoomProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-28T11:30:14Z",
      "side": 1,
      "message": "Aggregating APs do not have to use the Filer API. Gradle did not mention this in their current doc because this is a fairly recent development: https://github.com/gradle/gradle/issues/9401#issuecomment-492590130\n\nIsolating APs require the Filer API because it allows setting the originating element of a resource, Gradle needs that for proper output cleanup.\n\nTake this example: With user class A, Room generates source file S and resource file R. With user class A\u0027, Room generates S\u0027 and R\u0027. Setting the originating element allows Gradle to see (A, S, R) as one group and (A\u0027, S\u0027, R\u0027) as another group, and any change in one group affects that group only and not the other group. This tracking wouldn\u0027t be possible without using Filer.\n\nI\u0027m planning to create several tests to demonstrate these subtleties (once https://android-review.googlesource.com/c/platform/frameworks/support/+/941741 is merged).\n\n-----------------------\n\nThat said, we could still make Room isolating if we understand and *accept* the scenarios where Room/Gradle wouldn\u0027t behave as expected (e.g., skipping the deletion of the schema files). Then, we\u0027ll probably need to document these scenarios to set the expectations for users.\n\nThis topic may be easier to discuss once we have the test that I\u0027ll be creating.",
      "parentUuid": "6f3af9b3_ddb52ffa",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a20ac833_5d851519",
        "filename": "room/compiler/src/main/kotlin/androidx/room/RoomProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-28T21:15:57Z",
      "side": 1,
      "message": "I see - We do accept the scenarios where the Schema won\u0027t behave as expected (won\u0027t get deleted or won\u0027t get generated if deleted and the task is UP-TO-DATE). Me and Yigit chatted with Jerome to try to explain our use-case of the schema files and we don\u0027t treat them as equal output as the generated source files, that is, we are really OK with the odd behavior due to not using the Filer API, of course this is something we\u0027ll document along with the incremental feature flag. With that in mind, can we make Room isolating?",
      "parentUuid": "8695e78c_00a6aa6f",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6deec267_908d50e9",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/Context.kt",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-10T18:38:35Z",
      "side": 1,
      "message": "Can use infix operator:\n\nProcessorOptions.values().map { it.argName } + \n    BooleanProcessorOptions.values().map { it.argName }",
      "range": {
        "startLine": 53,
        "startChar": 57,
        "endLine": 53,
        "endChar": 61
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf83e35a_2285ebea",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/Context.kt",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-13T10:59:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6deec267_908d50e9",
      "range": {
        "startLine": 53,
        "startChar": 57,
        "endLine": 53,
        "endChar": 61
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "431168d8_cbe05451",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/Context.kt",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-10T18:38:35Z",
      "side": 1,
      "message": "Should be argName and not INCREMENTAL.argName, otherwise adding another Bool option would try to read from wrong arg name.",
      "range": {
        "startLine": 132,
        "startChar": 46,
        "endLine": 132,
        "endChar": 97
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e19ea148_22e7d277",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/Context.kt",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-13T10:59:09Z",
      "side": 1,
      "message": "Oops - this was copy-paste error! - Fixed",
      "parentUuid": "431168d8_cbe05451",
      "range": {
        "startLine": 132,
        "startChar": 46,
        "endLine": 132,
        "endChar": 97
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d76cca6_77a8f7ff",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/Context.kt",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-10T18:38:35Z",
      "side": 1,
      "message": "Lift return value to if:\n\nreturn if () {\n  defaultValue\n} else {\n  value\n}",
      "range": {
        "startLine": 133,
        "startChar": 12,
        "endLine": 133,
        "endChar": 14
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5134cb0d_beabbb26",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/Context.kt",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-13T10:59:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d76cca6_77a8f7ff",
      "range": {
        "startLine": 133,
        "startChar": 12,
        "endLine": 133,
        "endChar": 14
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1a6d32e_fabd20a0",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/ProcessorErrors.kt",
        "patchSetId": 2
      },
      "lineNbr": 646,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-10T18:38:35Z",
      "side": 1,
      "message": "fun has no param, use constant val:\n\nval CURRENT_JDK_VERSION_HAS_BUG \u003d \"...\"",
      "range": {
        "startLine": 646,
        "startChar": 4,
        "endLine": 646,
        "endChar": 33
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d64240b_491026a7",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/ProcessorErrors.kt",
        "patchSetId": 2
      },
      "lineNbr": 646,
      "author": {
        "id": 1101693
      },
      "writtenOn": "2019-05-13T10:59:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1a6d32e_fabd20a0",
      "range": {
        "startLine": 646,
        "startChar": 4,
        "endLine": 646,
        "endChar": 33
      },
      "revId": "1075183e45660c7f2011d70687373e3d66b2bf58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}