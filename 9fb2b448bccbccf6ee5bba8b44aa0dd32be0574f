{
  "comments": [
    {
      "key": {
        "uuid": "8df27be0_58dc5d1a",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 5
      },
      "lineNbr": 514,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-25T01:52:14Z",
      "side": 1,
      "message": "Previously there could be a 2nd image capture in flight while the 1st image is being processed for I/O.\n\nWith this change it makes it so that ImageCapture waits until the I/O (or whatever is processing is complete) before issuing the next request. Is that intentional?",
      "revId": "9fb2b448bccbccf6ee5bba8b44aa0dd32be0574f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34c8a249_9b788645",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 5
      },
      "lineNbr": 514,
      "author": {
        "id": 1481635
      },
      "writtenOn": "2019-06-25T03:01:03Z",
      "side": 1,
      "message": "Yes, it is. It has to wait image to be closed whatever the task is I/O or any image processing.\nIt can be enhanced to capture MAX_IMAGES at the same time but might need structure design to manage the image request queue (to record the dispatched images and track their onImageClose). can do it in the later CL. For now I think it should not have significant improvement if the bottleneck is IO processing and MAX_IMAGES is 2.",
      "parentUuid": "8df27be0_58dc5d1a",
      "revId": "9fb2b448bccbccf6ee5bba8b44aa0dd32be0574f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80580d1c_e5112faa",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 5
      },
      "lineNbr": 514,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-25T18:25:16Z",
      "side": 1,
      "message": "Ok sounds good.",
      "parentUuid": "34c8a249_9b788645",
      "revId": "9fb2b448bccbccf6ee5bba8b44aa0dd32be0574f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "982b0c7e_0895dc89",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 5
      },
      "lineNbr": 658,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-25T01:52:14Z",
      "side": 1,
      "message": "It would probably be best not to make ImageCapture implement OnImageCloseListener, because this would be exposing it at an interface level.\n\nIt would make more sense to define an internal class or instance that implements the OnImageCloseListener. Because this really is an implementation details that shouldn\u0027t be exposed.",
      "revId": "9fb2b448bccbccf6ee5bba8b44aa0dd32be0574f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b1885f6_c73226a5",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 5
      },
      "lineNbr": 658,
      "author": {
        "id": 1481635
      },
      "writtenOn": "2019-06-25T03:01:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "982b0c7e_0895dc89",
      "revId": "9fb2b448bccbccf6ee5bba8b44aa0dd32be0574f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}