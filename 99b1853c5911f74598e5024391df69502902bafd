{
  "comments": [
    {
      "key": {
        "uuid": "0223ff52_f4447eb9",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 539,
      "author": {
        "id": 1481635
      },
      "writtenOn": "2019-06-26T03:35:26Z",
      "side": 1,
      "message": "It may need a generic exception (or other design) to indicate (or know) the capture request is issued or not. Once the request is issued then it should not file next image capture request in onFailure() callback because next request will be issued after onImageAvailable().\nFor example, if failure happen on \"preTakePicture()\", then it needs to file next request.\nif failure happen on \"postTakePicture\", then it shouldn\u0027t file next request. It depends on capture request issued or not.\nOne thought is to define a flag in TakePictureState and set the flag after capture request issued. Then it can depend on the flag to issue next request or not.",
      "range": {
        "startLine": 539,
        "startChar": 32,
        "endLine": 539,
        "endChar": 80
      },
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f37753d_7c652f55",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 539,
      "author": {
        "id": 1475857
      },
      "writtenOn": "2019-06-26T07:50:08Z",
      "side": 1,
      "message": "Ya, will will be good to handle all the exceptions before submit the request to camera control.\nAnd we can ignore the error in postTakePicture() just like previous did.\n\nThere is a new flag in TakePicutreState.mIsTakePictureRequestSubmitted and the flag will update after the request was submitted. The onFailure callback can redirect the exceptions when mIsTakePictureRequestSubmitted \u003d\u003d false.",
      "parentUuid": "0223ff52_f4447eb9",
      "range": {
        "startLine": 539,
        "startChar": 32,
        "endLine": 539,
        "endChar": 80
      },
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "606a4302_13d8fc6b",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 539,
      "author": {
        "id": 1475857
      },
      "writtenOn": "2019-06-26T14:35:26Z",
      "side": 1,
      "message": "Update the code and comment again,\nI have updated the code again, the flag is changed to TakePicutreState.mCaptureSuccess.\nAnd I will set the mCaptureSuccess \u003d true after the capture was success, that is, the error in postTakePicture() will be ignored, but the capture failed result will redirect to OnImageCapturedListener.onError().\n\nAnd we still have a working item left: to handle the \"capture failed\" when it have CaptureProcessor. When the CaptureProcessor exists, we will need to clear the SettableImageProxyBundle in ProcessingImageReader or it might keep waiting for all the images (in CaptureBundle) is available.",
      "parentUuid": "3f37753d_7c652f55",
      "range": {
        "startLine": 539,
        "startChar": 32,
        "endLine": 539,
        "endChar": 80
      },
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e2bcc41_972a5a40",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 544,
      "author": {
        "id": 1481635
      },
      "writtenOn": "2019-06-26T03:35:26Z",
      "side": 1,
      "message": "It should reference to dispatchImage() and post runnable to caller\u0027s given handler. Suggest to add a callbackError() in ImageCaptureRequest and then we can reuse it. Here is a sample code (https://android-review.googlesource.com/c/platform/frameworks/support/+/985886/8/camera/core/src/main/java/androidx/camera/core/ImageCapture.java), feel free to use it.\nAlthough \"request\" should not be null at this moment, it is still safe to check null. So does \"t\"?",
      "range": {
        "startLine": 543,
        "startChar": 36,
        "endLine": 544,
        "endChar": 63
      },
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7127b7_65487dc4",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 544,
      "author": {
        "id": 1475857
      },
      "writtenOn": "2019-06-26T07:50:08Z",
      "side": 1,
      "message": "Got it, reference the code in the above review and post the error callback to the handler.",
      "parentUuid": "3e2bcc41_972a5a40",
      "range": {
        "startLine": 543,
        "startChar": 36,
        "endLine": 544,
        "endChar": 63
      },
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11e2681d_27857b14",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 1274,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-25T20:54:37Z",
      "side": 1,
      "message": "Is this generic for CaptureStage or is this meant just for ImageCapture?\n\nIf its meant to be used generically it should be moved into CaptureStage.\n\nAlso you should have a javadoc for this. Since it isn\u0027t clear under what conditions an IllegalCaptureStageException should be thrown. Because the exception is thrown on a CaptureBundle which is defined incorrectly rather than the CaptureStage itself.",
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e91e66_13577b86",
        "filename": "camera/core/src/main/java/androidx/camera/core/ImageCapture.java",
        "patchSetId": 1
      },
      "lineNbr": 1274,
      "author": {
        "id": 1475857
      },
      "writtenOn": "2019-06-26T07:50:08Z",
      "side": 1,
      "message": "Thanks Franklin, the exception is for ImageCapture internal used, \nI tried to used the internal defined exception type to distinguish if the error need to be throw in onFailure or not.\nBut from Leo\u0027s comment, I just realized that all the error before we submit the request to camera control can be redirect to OnImageCapturedListener.onError() directly. So I have removed this exception and add an new flag in TakePictureState to handle the callback onError() timing.",
      "parentUuid": "11e2681d_27857b14",
      "revId": "99b1853c5911f74598e5024391df69502902bafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}