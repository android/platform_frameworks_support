{
  "comments": [
    {
      "key": {
        "uuid": "532fd41b_4cb8e509",
        "filename": "fragment/src/main/java/androidx/fragment/app/FragmentFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1274960
      },
      "writtenOn": "2018-09-07T19:56:07Z",
      "side": 1,
      "message": "I\u0027m not sure I can see when I\u0027d use this method.\n\nWouldn\u0027t the factory have to introspect on the type or label of the input parent Fragment and sort of replicate the Navigation structure in order for this to do anything interesting in an override?\n\nIt seems like the FragmentManager for any given Fragment ought to override the Factory getter method if it\u0027d like for a different one to be used.\n\nI\u0027m a bit confused.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 82
      },
      "revId": "db2e97f047996fd28e9b12f954f0c3d09f66ee2f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "009e69dc_e1f7b899",
        "filename": "fragment/src/main/java/androidx/fragment/app/FragmentFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2018-09-07T20:54:07Z",
      "side": 1,
      "message": "I suspect most of the logic will still be in instantiate(). The problem is if instantiate() needs to know the parent Fragment.\n\nIf you want to build a FragmentFactory class that is aware of what the parent Fragment is, there\u0027s two ways to do that:\n1) Have every Fragment you create set its childFragmentManager.fragmentFactory to your custom ScopedFragmentFactory(this).\n2) Use this method to return ScopedFragmentFactory(parent) directly, no need to have code in every Fragment.\n\nThis assumes that having the parent Fragment available for your instantiate() calls is helpful, which is certainly not always the case, hence the default implementation here to not care about the parent Fragment.",
      "parentUuid": "532fd41b_4cb8e509",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 82
      },
      "revId": "db2e97f047996fd28e9b12f954f0c3d09f66ee2f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "746c4ac3_12597ce8",
        "filename": "fragment/src/main/java/androidx/fragment/app/FragmentFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2018-09-10T14:03:57Z",
      "side": 1,
      "message": "Isn\u0027t the logical conclusion that the parent fragment be passed to the instantiate() method?",
      "parentUuid": "009e69dc_e1f7b899",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 82
      },
      "revId": "db2e97f047996fd28e9b12f954f0c3d09f66ee2f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2b7c30_722162b5",
        "filename": "fragment/src/main/java/androidx/fragment/app/FragmentFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1274960
      },
      "writtenOn": "2018-09-10T18:26:34Z",
      "side": 1,
      "message": "On the face of it, that seems like it\u0027d be easier to follow? It\u0027s not clear what the end-state of the Factory/Manager extension points should be. It\u0027s tough to understand what the architecture is without an overview, given the legacy.",
      "parentUuid": "746c4ac3_12597ce8",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 82
      },
      "revId": "db2e97f047996fd28e9b12f954f0c3d09f66ee2f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}