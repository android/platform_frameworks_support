{
  "comments": [
    {
      "key": {
        "uuid": "653d1628_035cca6b",
        "filename": "benchmark/api/1.0.0-alpha01.txt",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-07T20:34:46Z",
      "side": 1,
      "message": "I assume \u0027property public final\u0027 is what we expect for a getter from kotlin?",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abe9bede_b8bc5871",
        "filename": "benchmark/api/1.0.0-alpha01.txt",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-03-07T21:05:56Z",
      "side": 1,
      "message": "Yeah, it seems that is what they look like (e.g. navigation/common/ktx/api/current.txt has some)",
      "parentUuid": "653d1628_035cca6b",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae8dec11_3f196ed2",
        "filename": "benchmark/api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-03-07T21:05:56Z",
      "side": 1,
      "message": "Why does it think that T is not annotated @Nullable or @NonNull?",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1225eebd_9ea6d82d",
        "filename": "benchmark/api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-07T21:53:05Z",
      "side": 1,
      "message": "It looks like T! means that it infers the nullability of the type. See below, it can be nullable or non-null, and it returns as you\u0027d expect:\n\n            val output1: String? \u003d runWithTimingDisabled {\n                var optional: String? \u003d null\n                optional\n            }\n\n\n\n            val output2: String \u003d runWithTimingDisabled {\n                var optional: String \u003d \"\"\n                optional\n            }",
      "parentUuid": "ae8dec11_3f196ed2",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 31
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ecec0a1_bbd6a288",
        "filename": "benchmark/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-03-07T21:12:00Z",
      "side": 1,
      "message": "Did you intend to switch this to true? I guess it makes sense (?) Just wondering if it was intentional.",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cf971cf_9fcf1638",
        "filename": "benchmark/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-07T21:53:05Z",
      "side": 1,
      "message": "I thought it was necessary to build API files, but double checked, and looks like not - reverted.",
      "parentUuid": "7ecec0a1_bbd6a288",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76ac60ad_1853ce74",
        "filename": "benchmark/src/main/java/androidx/benchmark/BenchmarkRule.kt",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1458882
      },
      "writtenOn": "2019-03-07T21:12:00Z",
      "side": 1,
      "message": "A more succinct way to write this might be:\n\n invokeMethodName.substring(index, invokeMethodName.length - 1).any { Character.isDigit(it) }\n\n...but I\u0027m not sure if that might cause extra allocations we\u0027re uncomfortable with.",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a565a80f_b83722ae",
        "filename": "benchmark/src/main/java/androidx/benchmark/BenchmarkRule.kt",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-07T21:53:05Z",
      "side": 1,
      "message": "Done, good catch\n\nAllocations aren\u0027t a concern outside the tight loop, it\u0027s justh that I just didn\u0027t look carefully at the auto-kotlinization :P",
      "parentUuid": "76ac60ad_1853ce74",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "6025c758599f779181dc4fb2f217568e96c307ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}