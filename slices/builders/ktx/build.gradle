/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryVersions
import androidx.build.LibraryGroups

plugins {
    id("SupportAndroidLibraryPlugin")
    id("org.jetbrains.kotlin.android")
}

android {
    defaultConfig {
        minSdkVersion 19
    }

    buildTypes {
        debug {
            testCoverageEnabled = false // Breaks Kotlin compiler.
        }
    }
}

dependencies {
    implementation(project(":slice-core"))
    implementation "androidx.annotation:annotation:1.1.0"
    implementation(project(":core:core"))
    api(project(":slice-builders"))
    api(KOTLIN_STDLIB)

    androidTestImplementation(JUNIT)
<<<<<<< HEAD   (9d364e Merge "Merge empty history for sparse-5611434-L1110000032658)
    androidTestImplementation(TEST_EXT_JUNIT)
    androidTestImplementation(TEST_CORE)
    androidTestImplementation(TEST_RUNNER)
    androidTestImplementation(TEST_RULES)
    implementation project(":annotation")
    implementation project(path: ':core')
=======
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(ANDROIDX_TEST_CORE)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ANDROIDX_TEST_RULES)
>>>>>>> BRANCH (8875d3 Merge "Merge cherrypicks of [982717, 982718] into sparse-564)
}

supportLibrary {
    name = "Slice builders KTX"
    publish = true
    mavenVersion = LibraryVersions.SLICE_BUILDERS_KTX
    mavenGroup = LibraryGroups.SLICE
    inceptionYear = "2018"
    description = "A set of Kotlin extension methods built on top of slice-builders APIs."
    failOnUncheckedWarnings = false
    failOnDeprecationWarnings = false
    useMetalava = true
}
