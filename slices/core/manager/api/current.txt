// Signature format: 2.0
package androidx.slice {

  @RequiresApi(19) public final class Slice extends androidx.versionedparcelable.CustomVersionedParcelable implements androidx.versionedparcelable.VersionedParcelable {
    method public java.util.List<java.lang.String>! getHints();
    method public java.util.List<androidx.slice.SliceItem>! getItems();
    method public android.net.Uri! getUri();
  }

  @RequiresApi(28) public class SliceConvert {
    method public static android.app.slice.Slice! unwrap(androidx.slice.Slice!);
    method public static androidx.slice.Slice! wrap(android.app.slice.Slice!, android.content.Context!);
  }

  @RequiresApi(19) public final class SliceItem extends androidx.versionedparcelable.CustomVersionedParcelable {
    method public void fireAction(android.content.Context?, android.content.Intent?) throws android.app.PendingIntent.CanceledException;
    method public android.app.PendingIntent! getAction();
    method public String! getFormat();
    method public java.util.List<java.lang.String> getHints();
    method public androidx.core.graphics.drawable.IconCompat! getIcon();
    method public int getInt();
    method public long getLong();
    method public androidx.slice.Slice! getSlice();
    method public String! getSubType();
    method public CharSequence! getText();
    method public boolean hasHint(String!);
  }

  @RequiresApi(19) public abstract class SliceManager {
    method public abstract int checkSlicePermission(android.net.Uri, int, int);
    method public static androidx.slice.SliceManager getInstance(android.content.Context);
    method public abstract java.util.List<android.net.Uri> getPinnedSlices();
    method public abstract void grantSlicePermission(String, android.net.Uri);
    method public abstract void revokeSlicePermission(String, android.net.Uri);
  }

}

package androidx.slice.core {

  @RequiresApi(19) public interface SliceAction {
    method public android.app.PendingIntent getAction();
    method public CharSequence? getContentDescription();
    method public androidx.core.graphics.drawable.IconCompat? getIcon();
    method public int getImageMode();
    method public int getPriority();
    method public CharSequence getTitle();
    method public boolean isActivity();
    method public boolean isChecked();
    method public boolean isDefaultToggle();
    method public boolean isToggle();
    method public androidx.slice.core.SliceAction! setChecked(boolean);
    method public androidx.slice.core.SliceAction? setContentDescription(CharSequence);
    method public androidx.slice.core.SliceAction! setPriority(@IntRange(from=0) int);
  }

}

