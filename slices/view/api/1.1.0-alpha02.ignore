// Baseline format: 1.0
BannedThrow: androidx.slice.SliceUtils#serializeSlice(androidx.slice.Slice, android.content.Context, java.io.OutputStream, androidx.slice.SliceUtils.SerializeOptions):
    Methods must not mention RuntimeException subclasses in throws clauses (was `java.lang.IllegalArgumentException`)


ContextFirst: androidx.slice.SliceUtils#serializeSlice(androidx.slice.Slice, android.content.Context, java.io.OutputStream, androidx.slice.SliceUtils.SerializeOptions) parameter #1:
    Context is distinct, so it must be the first argument (method `serializeSlice`)
ContextFirst: androidx.slice.SliceUtils.SliceActionListener#onSliceAction(android.net.Uri, android.content.Context, android.content.Intent) parameter #1:
    Context is distinct, so it must be the first argument (method `onSliceAction`)


ManagerLookup: androidx.slice.SliceViewManager#getInstance(android.content.Context):
    Managers must always be obtained from Context (`getInstance`)


ProtectedMember: androidx.slice.widget.SliceLiveData.CachedSliceLiveData#onActive():
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceLiveData.CachedSliceLiveData.onActive()}
ProtectedMember: androidx.slice.widget.SliceLiveData.CachedSliceLiveData#onInactive():
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceLiveData.CachedSliceLiveData.onInactive()}
ProtectedMember: androidx.slice.widget.SliceView#onAttachedToWindow():
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceView.onAttachedToWindow()}
ProtectedMember: androidx.slice.widget.SliceView#onDetachedFromWindow():
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceView.onDetachedFromWindow()}
ProtectedMember: androidx.slice.widget.SliceView#onLayout(boolean, int, int, int, int):
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceView.onLayout(boolean,int,int,int,int)}
ProtectedMember: androidx.slice.widget.SliceView#onMeasure(int, int):
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceView.onMeasure(int,int)}
ProtectedMember: androidx.slice.widget.SliceView#onVisibilityChanged(android.view.View, int):
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceView.onVisibilityChanged(android.view.View,int)}
ProtectedMember: androidx.slice.widget.SliceView#onWindowVisibilityChanged(int):
    Protected methods not allowed; must be public: method androidx.slice.widget.SliceView.onWindowVisibilityChanged(int)}
