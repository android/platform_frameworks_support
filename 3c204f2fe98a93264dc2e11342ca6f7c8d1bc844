{
  "comments": [
    {
      "key": {
        "uuid": "af2bea3a_b5a6d83b",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1493285
      },
      "writtenOn": "2019-05-29T00:07:24Z",
      "side": 1,
      "message": "have we decided that it\u0027s important for us to make this parameter nullable? It feels like something where providing null to it is always the wrong thing?",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1484e880_89d813f6",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1416041
      },
      "writtenOn": "2019-05-29T00:28:07Z",
      "side": 1,
      "message": "We still have to make decision around it. For now it nullable because null represents \"disabled\" state, like in Flutter. In general, there\u0027re two possibilities:\n\n1. Make it non-null and add `enabled: Boolean \u003d true` param. But they you have to pass something for onCheckedChange even when component is disabled (and you don\u0027t have this lambda sometimes), which sometimes can be inconvenient. We can add `val DefaultOnClickDisable \u003d {}` somewhere, but I\u0027m not sure if this is the right kotlin-y way.\n\n2. Make nullability represents enabled/disabled state of this component. This way you will always pass something non-null otherwise it\u0027s disabled. \n\nPersonally I like 1., because it seems inconvenient to type `onCheckedChange \u003d if (user.nonEmpty) doStuff() else null` in some cases, rather than typing `{}` rarely.\n\nHappy to chat more about it :)",
      "parentUuid": "af2bea3a_b5a6d83b",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38db9e0a_c81a6c15",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1493285
      },
      "writtenOn": "2019-05-29T02:06:20Z",
      "side": 1,
      "message": "I agree, I much prefer (1). I think having disabled state be the nullability of the lambda feels convoluted and will complicate the logic. It is also much less discoverable IMO.",
      "parentUuid": "1484e880_89d813f6",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d07134c6_099c2737",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1416041
      },
      "writtenOn": "2019-05-29T02:41:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "38db9e0a_c81a6c15",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56d8f8c8_769d6dae",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-29T18:32:09Z",
      "side": 1,
      "message": "It also means that you could potentially allow for, say, detecting clicks on a visually-disabled control to, for instance, show a dialog explaining why it\u0027s disabled.",
      "parentUuid": "d07134c6_099c2737",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e3ebd7e_0d8ab7ad",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1493285
      },
      "writtenOn": "2019-05-29T00:24:39Z",
      "side": 1,
      "message": "should `onToggle` here just be `onCheckedChange`?  I feel like `Toggleable` is the thing that should be doing the negation of `value` and then passing that back up",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fd24d15_f2eba136",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1416041
      },
      "writtenOn": "2019-05-29T00:48:34Z",
      "side": 1,
      "message": "Overall the answer is \"yes\", it should be onCheckedChange and it should require \"checked\" instead of \"value\", and be pretty much the same as new Switch API. For now it requires ToggleableState and it\u0027s a little bit harder to do. \n\nI will address all of the above on the follow-up CL when we will have our decision about this (Switch\u0027s) API, so I will be able to move forward",
      "parentUuid": "3e3ebd7e_0d8ab7ad",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb6e825_8e7edf5b",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1493285
      },
      "writtenOn": "2019-05-29T02:06:20Z",
      "side": 1,
      "message": "OK. As long as we are planning on changing it, that seems good to me. It seems like it might be easier to just change it all at the same time though, but I\u0027ll leave that call up to you folks!",
      "parentUuid": "3fd24d15_f2eba136",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08e06733_29a4925b",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1416041
      },
      "writtenOn": "2019-05-29T02:41:58Z",
      "side": 1,
      "message": "Agree, altogether will be better. I still need to ask a11y team about this indeterminate state support before moving towards removing it from Toggleable, it takes some time, so I\u0027ve decided to publish this CL first while waiting :)",
      "parentUuid": "0cb6e825_8e7edf5b",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "527949ed_6a79ed38",
        "filename": "ui/material/src/main/java/androidx/ui/material/Switch.kt",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-29T18:32:09Z",
      "side": 1,
      "message": "This is on my list of standing questions for the a11y team, especially as we\u0027re starting to discuss a11y state approaches.  We should sync up if you have thoughts on this.",
      "parentUuid": "08e06733_29a4925b",
      "revId": "3c204f2fe98a93264dc2e11342ca6f7c8d1bc844",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}