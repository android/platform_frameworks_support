{
  "comments": [
    {
      "key": {
        "uuid": "5fae6f92_afca9046",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/CheckApiEquivalenceTask.kt",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-05-15T20:07:28Z",
      "side": 1,
      "message": "This is not a file. Should it be @get:Input?",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 19
      },
      "revId": "ff5fc197e4058e115faf5e197519ca02659c5825",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e039abb_6a8afc77",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/CheckApiEquivalenceTask.kt",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1470382
      },
      "writtenOn": "2019-05-15T21:04:58Z",
      "side": 1,
      "message": "True, and actually Property type cannot be @InputFile or @OutputFile.\n\nThe following error results:\nExecution failed for task \u0027:annotation:checkApi\u0027.\n\u003e Cannot convert the provided notation to a File or URI: ApiLocation(publicApiFile\u003d/usr/local/google/home/asfalcone/androidx-master-dev/out/support/annotation/build/docs/release/annotation/current.txt, restrictedApiFile\u003d/usr/local/google/home/asfalcone/androidx-master-dev/out/support/annotation/build/docs/release/annotation/restricted_current.txt, resourceFile\u003d/usr/local/google/home/asfalcone/androidx-master-dev/out/support/annotation/build/docs/release/annotation/res-current.txt).\n  The following types/formats are supported:\n    - A String or CharSequence path, for example \u0027src/main/java\u0027 or \u0027/usr/include\u0027.\n    - A String or CharSequence URI, for example \u0027file:/usr/include\u0027.\n    - A File instance.\n    - A Path instance.\n    - A Directory instance.\n    - A RegularFile instance.\n    - A URI or URL instance.\n\nSo we\u0027ll need to remove OutputFile here and there might be an impact on incrementalness of this task.\n\nAdditionally, ApiLocation needs implement \u0027Serializable\u0027 because of\n\nExecution failed for task \u0027:annotation:checkApiRelease\u0027.\n\u003e Unable to store input properties for task \u0027:annotation:checkApiRelease\u0027. Property \u0027referenceApi\u0027 with value \u0027ApiLocation(publicApiFile\u003d/usr/local/google/home/asfalcone/androidx-master-dev/frameworks/support/annotations/api/1.1.0-rc01.txt, restrictedApiFile\u003d/usr/local/google/home/asfalcone/androidx-master-dev/frameworks/support/annotations/api/restricted_1.1.0-rc01.txt, resourceFile\u003d/usr/local/google/home/asfalcone/androidx-master-dev/frameworks/support/annotations/api/res-1.1.0-rc01.txt)\u0027 cannot be serialized.\n\nSerialiable requires kotlin-stdlib which we don\u0027t currently depend on. We can remove the @Input notation though. Thoughts on that?",
      "parentUuid": "5fae6f92_afca9046",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 19
      },
      "revId": "ff5fc197e4058e115faf5e197519ca02659c5825",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "364cdc29_324a18e7",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/CheckApiEquivalenceTask.kt",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-05-15T21:19:17Z",
      "side": 1,
      "message": "We can remove the @get:InputFiles annotation. Lines 48-54 tell Gradle what the inputs are. I don\u0027t see a corresponding method for OutputFiles though.\n\nAlternatively making ApiLocation implement serializeable seems reasonable to me. If we do that then we\u0027d also have to make checkRestrictedAPIs be an input property too.",
      "parentUuid": "4e039abb_6a8afc77",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 19
      },
      "revId": "ff5fc197e4058e115faf5e197519ca02659c5825",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64f9f29e_397aad6e",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/CheckApiEquivalenceTask.kt",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2019-05-15T21:21:45Z",
      "side": 1,
      "message": "Feel free to add stdlib dependency.",
      "parentUuid": "364cdc29_324a18e7",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 19
      },
      "revId": "ff5fc197e4058e115faf5e197519ca02659c5825",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50167f13_9ddd89de",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/Metalava.kt",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-05-15T20:08:05Z",
      "side": 1,
      "message": "Does this eagerly evaluate libraryVersionApi.publicApiFile.path.equals ?",
      "range": {
        "startLine": 114,
        "startChar": 16,
        "endLine": 114,
        "endChar": 59
      },
      "revId": "ff5fc197e4058e115faf5e197519ca02659c5825",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3d593e3_f4c853bb",
        "filename": "buildSrc/src/main/kotlin/androidx/build/metalava/Metalava.kt",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-05-15T20:27:25Z",
      "side": 1,
      "message": "I think it would be cleaner if there were one invocation of the listProperty method that was passed a different argument based on which files we want to include",
      "revId": "ff5fc197e4058e115faf5e197519ca02659c5825",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}