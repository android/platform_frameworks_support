{
  "comments": [
    {
      "key": {
        "uuid": "678b72fd_ca37cbe6",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "Add, \"This should only be used used transiently and should not be used to retain any state over time.\" :)",
      "range": {
        "startLine": 148,
        "startChar": 7,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a288053_f27482d9",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "678b72fd_ca37cbe6",
      "range": {
        "startLine": 148,
        "startChar": 7,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82d6d5a9_37f0ddcc",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "{@link LinearLayoutManager}",
      "range": {
        "startLine": 452,
        "startChar": 71,
        "endLine": 452,
        "endChar": 84
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1eecc7a_31f374d7",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82d6d5a9_37f0ddcc",
      "range": {
        "startLine": 452,
        "startChar": 71,
        "endLine": 452,
        "endChar": 84
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc3ac638_bf2096eb",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "Change to \"your own custom scrolling pre-cache logic.\"",
      "range": {
        "startLine": 456,
        "startChar": 60,
        "endLine": 456,
        "endChar": 94
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c689b39_be6f36c3",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc3ac638_bf2096eb",
      "range": {
        "startLine": 456,
        "startChar": 60,
        "endLine": 456,
        "endChar": 94
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55783959_d0c99649",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "-\u003e \". T\"",
      "range": {
        "startLine": 460,
        "startChar": 20,
        "endLine": 460,
        "endChar": 23
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a26774d0_8493975b",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55783959_d0c99649",
      "range": {
        "startLine": 460,
        "startChar": 20,
        "endLine": 460,
        "endChar": 23
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17324a9d_19a354cb",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 473,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "{@link RecyclerView.State State} (if that is the right way of doing it).",
      "range": {
        "startLine": 473,
        "startChar": 28,
        "endLine": 473,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d795ec6_f8fc6e41",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 473,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17324a9d_19a354cb",
      "range": {
        "startLine": 473,
        "startChar": 28,
        "endLine": 473,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c93bdbf7_06aeb292",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "(in the orientation of the LinearLayoutManager).",
      "range": {
        "startLine": 482,
        "startChar": 22,
        "endLine": 482,
        "endChar": 23
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f790b8b1_00824206",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c93bdbf7_06aeb292",
      "range": {
        "startLine": 482,
        "startChar": 22,
        "endLine": 482,
        "endChar": 23
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ff8c01f_f3ef5d08",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 496,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "Same as above.",
      "range": {
        "startLine": 496,
        "startChar": 28,
        "endLine": 496,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e647839_f49332a1",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 496,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ff8c01f_f3ef5d08",
      "range": {
        "startLine": 496,
        "startChar": 28,
        "endLine": 496,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50dca572_b2d16b4f",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "\"Around\" feels a bit of a funny way to say it.  But I can\u0027t think of anything else off the top of my head...",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e037777a_5a218af8",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-03-20T03:31:24Z",
      "side": 1,
      "message": "i think it would be better if this method passed down the int[] and expected start and end being written into it. that way, developer can return custom values for both directions.",
      "parentUuid": "50dca572_b2d16b4f",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f64b0e3b_1fc7898f",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "I\u0027m not opposed to `void getExtraLayoutSpace(RecyclerView.State state, int scrollDirection, int[] extraLayoutSpace)`, but there has been a lot of discussion on this topic already. The latest status is that we decided that having one method means it is easy for developers to accidentally get rid of the extra layout space in the scroll direction, and that we therefore wanted have two methods.\n\nIf think we can probably get to a decision with a 15 minute GVC with the three of us. Sounds acceptable?",
      "parentUuid": "e037777a_5a218af8",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c56c49c_0f98b085",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-21T20:05:54Z",
      "side": 1,
      "message": "I\u0027ll try to chat with Yigit today about this.  FYI, I\u0027m OOO tomorrow and Monday.\n\nAs for the name, what about getAdditionalLayoutSpace and getExtraLayoutSpaceForScrolling.  Sure, one uses additional and the other extra... but I don\u0027t think it\u0027s a big deal.",
      "parentUuid": "f64b0e3b_1fc7898f",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a33b050_502451a1",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-21T22:33:13Z",
      "side": 1,
      "message": "... Yigit and I had a long discussion about this, and... he convinced me that ultimately, a cleaner API in these cases is to just have one method that makes these decisions that does the right thing by default, or allows the developer to step in and do what they want.  Having two methods could arguably turn into 3, and how these methods interact behind the scenes is confusing.\n\nSo... this isn\u0027t fun... but, I think we need to end up with:\n\nprotected void calculateExtraLayoutSpace(RecyclerView.State state, int[] extraLayoutSpace) {\n  if (state.hasTargetScrollPosition()) {\n    PointF direction \u003d computeScrollVectorForPosition(state.getTargetScrollPosition());\n\n    int direction \u003d direction.x;\n    if (direction \u003d\u003d 0) direction \u003d direction.y;\n    if (direction \u003d\u003d 0) return;\n\n    if (direction \u003d\u003d -1) {\n      extraLayoutSpace[0] \u003d getExtraLayotSpace(state);\n      extraLayoutSpace[1] \u003d 0;\n    } else {\n      extraLayoutSpace[0] \u003d 0;\n      extraLayoutSpace[1] \u003d getExtraLayotSpace(state);\n    }\n  }\n}\n\n(I may have the directions wrong here... and there may be a deeper level of resolution required)\n\nBasically, state does actually have all of the info that is needed to determine which direction the extra layout space should be in, and if a developer (like you guys for ViewPager2) wants to change the behavior they should override the method and do so.  In your case, you can pretty much do what your existing calculateExtraLayoutSpace does (below) and you can just call super to access the method implemented in this comment.\n\nI hope that is clear enough.  Talk with Yigit if it is not.  \n\nSorry for the thrashing.",
      "parentUuid": "5c56c49c_0f98b085",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e3f2aa7_8470ffff",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-03-21T22:42:19Z",
      "side": 1,
      "message": "What shep said.\nIt is good that we have a default behavior but if developer override sthe method, they should make the full decision and we should respect that.\n\nIn the default impl, we shouldn\u0027t call `computeScrollVectorForPosition` because it makes another object. it is probably better to just inline that logic (or create a version of `computeScrollVectorForPosition` that does not return a point and simply just answers which way is the child).\n\nJelle, previously you\u0027ve wanted to add scroll direction to that API but state already has the target scroll position, which is enough to decide the direction for LLM. Thats why we don\u0027t need another parameter. FYI extra layout is only added for smoothScrollToPosition calls hence dragging does not affect it.",
      "parentUuid": "2a33b050_502451a1",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49e2688e_cb5e67ca",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-22T12:57:44Z",
      "side": 1,
      "message": "(defining some terminology for clarity)\nDynamic \u003d during a smooth scroll, defined as having a target scroll position\nStatic \u003d any other time\n\nOur current implementation of getExtraLayoutSpace(state) indeed only adds extra layout in dynamic situations. However, the method is called in both dynamic _and_ static situations, so other peoples\u0027 implementations may decide to add extra layout for static situations as well. Apps that currently rely on that could suffer if we suddenly stop calling the method in static situations. So, given that I think the method should be called for static situations as well, our implementation of calculateExtraLayoutSpace will need to know on which side (start or end) to add the extra layout space from getExtraLayoutSpace(state) to keep the same behavior as before.\n\nOne way is to add a direction parameter to calculateExtraLayoutSpace, because the callers do know on which side the extra layout space was originally added (in static situations). They used the last known scroll delta (which is in LayoutState, not in RecyclerView.State), which is not a great choice, but it is how things are working now.\n\nAnother way is to change the semantics of the int[]: instead of assigning the meaning \"start\" and \"end\" to respectively item 0 and item 1, we can assign the meaning \"in scroll direction\" and \"in opposite direction\" to item 0 and item 1, respectively. That way, the implementer of calculateExtraLayoutSpace doesn\u0027t need to know if the scroll direction is start or end, it will always be [0]. The downside is that if a dev actually cares about start or end, they won\u0027t be able to find out in static situations.\n\nI prefer the extra parameter, because I think changing the meaning of the int[] is too confusing, and because it gives devs complete control over the behavior in both static and dynamic situations.\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nOn a higher level, I think this API is kind of a niche market, so if we decide to not care for full backwards compatibility then that\u0027s OK to me, but I\u0027d like us to be on the same page as to what we are or aren\u0027t breaking with.",
      "parentUuid": "5e3f2aa7_8470ffff",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cc038af_03d9bb65",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-22T15:47:32Z",
      "side": 1,
      "message": "As discussed over chat, Yigit explained to me that our default implementation can use mLayoutState.mLastScrollDelta to get the scroll direction as it is done currently. That means we don\u0027t need the scroll direction after all.",
      "parentUuid": "49e2688e_cb5e67ca",
      "range": {
        "startLine": 500,
        "startChar": 18,
        "endLine": 500,
        "endChar": 43
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c09f4602_c668cabe",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "scrollDirection seems to always be either LAYOUT_START or LAYOUT_END, so this check doesn\u0027t seem to do anything.  I think its correct to just eliminate it.",
      "range": {
        "startLine": 509,
        "startChar": 8,
        "endLine": 510,
        "endChar": 63
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5090484_7784bb91",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "I left it here in case we decide to call this method without a scroll direction: scrollDirection\u003d0. But we can always add that logic later, you\u0027re right that it doesn\u0027t make sense to keep this while we\u0027re not using it (and don\u0027t plan to use it)",
      "parentUuid": "c09f4602_c668cabe",
      "range": {
        "startLine": 509,
        "startChar": 8,
        "endLine": 510,
        "endChar": 63
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd342bfc_c3925043",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1514,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "It would be nice to change this variable name.  I struggled to even be able to think about what it was.  In fact, the variable passed to it is always layoutState.mScrollingOffset... maybe we just call it scrollingOffset and we try to update the doc accordingly?  \n\nMy brain needs a break, tell me if you think we can clean this up a bit...",
      "range": {
        "startLine": 1514,
        "startChar": 73,
        "endLine": 1514,
        "endChar": 75
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0956a95f_1978a90c",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1514,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Yeah, the name of this variable puzzled me a lot, too. I totally agree to rename this!",
      "parentUuid": "bd342bfc_c3925043",
      "range": {
        "startLine": 1514,
        "startChar": 73,
        "endLine": 1514,
        "endChar": 75
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d71d3f6_705ccf10",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1560,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "Not for you to do, but something for us to be very careful about as we make changes here.\n\nThis sets up for some really confusing reading of the code.  This seems to be false for onLayoutChildren but true for scrolling.  It also turns out (either planned or by being lucky) that mExtra2 is only set for scrolling and not set for onLayoutChildren.  This certainly sets up for some hard to trace code.",
      "range": {
        "startLine": 1560,
        "startChar": 13,
        "endLine": 1560,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6916bc9e_5203041c",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1560,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "Planned. I traced all code paths to see when mExtra2 was needed, but I based it on the guards around the invocations of recycleByLayoutState, `layoutState.mScrollingOffset !\u003d LayoutState.SCROLLING_OFFSET_NaN`, and discovered that mScrollingOffset is always set to SCROLLING_OFFSET_NaN in onLayoutChildren.\n\nI definitely agree that it\u0027s hard to follow. I\u0027ll add an explanation to the mExtra2 documentation, and reset the variable to 0 in onLayoutChildren (with comment that it won\u0027t be used). Won\u0027t make the code easier to trace, but with a bit of luck you won\u0027t have to anymore with the new documentation.\n\nMaybe I could also add a check for LayoutState.SCROLLING_OFFSET_NaN in this if condition? It feels like an offset of Integer.MIN_VALUE shouldn\u0027t be processed, especially with the introduction of mExtra2 that should be used for \"extra layout space\".",
      "parentUuid": "8d71d3f6_705ccf10",
      "range": {
        "startLine": 1560,
        "startChar": 13,
        "endLine": 1560,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81a4d006_1cf13bb5",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1560,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-21T20:05:54Z",
      "side": 1,
      "message": "Extra documentation would be nice, but I wouldn\u0027t worry about adding more checks.  I think extra checks will just feel extra redundancies that will make the code even harder to think about.  \n\nNot for you to do, but I think that minimizing the call sites to higher level state in lower level scopes is very helpful in simplifying the mental model.  Basically decrease the number of possible code paths so that the actual code paths that execute are easier to decipher.  I don\u0027t know if that makes sense.\n\nI\u0027ve done some work in this regard in the past... CLs that don\u0027t change functionality but just try to increase clarity... :)",
      "parentUuid": "6916bc9e_5203041c",
      "range": {
        "startLine": 1560,
        "startChar": 13,
        "endLine": 1560,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf312a1b_d3ccfbdd",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1560,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-22T12:57:44Z",
      "side": 1,
      "message": "Ack. I\u0027ll stick with the clarifying comments and docs then.",
      "parentUuid": "81a4d006_1cf13bb5",
      "range": {
        "startLine": 1560,
        "startChar": 13,
        "endLine": 1560,
        "endChar": 33
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa27e9c4_dabc6fd7",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 2270,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-19T22:48:30Z",
      "side": 1,
      "message": "I didn\u0027t actually mean to suggest we name this something as broad as mExtra2.  That was just me being lazy... sorry.",
      "range": {
        "startLine": 2270,
        "startChar": 12,
        "endLine": 2270,
        "endChar": 19
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d6f52d4_cdd44e7c",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 2270,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-03-20T03:32:24Z",
      "side": 1,
      "message": "+1. we should probably name these mExtraStart and mExtraEnd where extra start is scrolling towards 0 and end is scrolling towards infnity.",
      "parentUuid": "fa27e9c4_dabc6fd7",
      "range": {
        "startLine": 2270,
        "startChar": 12,
        "endLine": 2270,
        "endChar": 19
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3c2d4dd_4134bdca",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 2270,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-20T14:41:38Z",
      "side": 1,
      "message": "My apologies, my inspiration was a bit drained, and I have forgotten to revisit the naming question.\n\nWhat about `mExtraScrollHead` and `mExtraScrollTail`?\n\nCurrently, `mExtra` is the extra space in the scroll direction. Changing the semantics to extra space in a fixed direction requires substantial refactoring in onLayoutChildren(), which I think is risky.",
      "parentUuid": "9d6f52d4_cdd44e7c",
      "range": {
        "startLine": 2270,
        "startChar": 12,
        "endLine": 2270,
        "endChar": 19
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3c7fbc4_a62a9f0f",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 2270,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2019-03-21T20:05:54Z",
      "side": 1,
      "message": "Discussed offline and Jelle and I agreed on: mExtra -\u003e mExtraFillSpace, mExtra2 -\u003e mNoRecycleSpace.\n\nmExtra was only read in \"fill\" and mExtra2 is only used to prevent recycling.",
      "parentUuid": "c3c2d4dd_4134bdca",
      "range": {
        "startLine": 2270,
        "startChar": 12,
        "endLine": 2270,
        "endChar": 19
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ce5df1c_6f75936a",
        "filename": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java",
        "patchSetId": 1
      },
      "lineNbr": 2270,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2019-03-22T12:57:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3c7fbc4_a62a9f0f",
      "range": {
        "startLine": 2270,
        "startChar": 12,
        "endLine": 2270,
        "endChar": 19
      },
      "revId": "228b2e413ad59bc252c8a4b41fe4193e1c2df924",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}