{
  "comments": [
    {
      "key": {
        "uuid": "1389e2e5_c57bdeb2",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T18:21:00Z",
      "side": 1,
      "message": "Nit: Sure you want to go the inheritance route instead of composition?  When reading through the base classes, it feels a bit confusing trying to understand where certain properties and methods are being defined because they come from a super class.",
      "range": {
        "startLine": 53,
        "startChar": 11,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1888ff0_db534e39",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T22:38:38Z",
      "side": 1,
      "message": "As discussed, keep for now.",
      "parentUuid": "1389e2e5_c57bdeb2",
      "range": {
        "startLine": 53,
        "startChar": 11,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8962e8c3_6fc894da",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T18:21:00Z",
      "side": 1,
      "message": "It\u0027s a little disconcerting to me that you are relying on part of your own implementation in a class that is assumidly used to run various other tests, some of which might test for the correctness of IDLE.\n\nThoughts?",
      "range": {
        "startLine": 133,
        "startChar": 39,
        "endLine": 133,
        "endChar": 52
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1067334_83b7baaf",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T22:38:38Z",
      "side": 1,
      "message": "As discussed, you are going to add a comment to speak to the validity of this approach.  Once you do so, please go ahead and resolves this item.",
      "parentUuid": "8962e8c3_6fc894da",
      "range": {
        "startLine": 133,
        "startChar": 39,
        "endLine": 133,
        "endChar": 52
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d460fb7_ae13321e",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Thought some more on this.\n\n1) There is already comment:\n     * Note: returned latch relies on the tested API, so it\u0027s critical to check that the final\n     * visible page is correct using [assertBasicState].\n\n2) If there were more than one page visible, there would be more than one TextView with id\u003d\"text_view\", so Swiping would start failing because of an ambiguous match.\n\n3) So, in summary, it\u0027s not ideal, but it\u0027s fine. :)",
      "parentUuid": "c1067334_83b7baaf",
      "range": {
        "startLine": 133,
        "startChar": 39,
        "endLine": 133,
        "endChar": 52
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc1de41a_d9636873",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 498,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2018-08-02T13:41:39Z",
      "side": 1,
      "message": "Consider mapNotNull:\n\n events.mapNotNull { it as? OnPageScrolledEvent }\n\n(same for next two occurrences of filter{is X}.map{as X})",
      "range": {
        "startLine": 497,
        "startChar": 33,
        "endLine": 498,
        "endChar": 39
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff024fa7_674dd44c",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 498,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc1de41a_d9636873",
      "range": {
        "startLine": 497,
        "startChar": 33,
        "endLine": 498,
        "endChar": 39
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d84e6676_e1483105",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2018-08-02T13:41:39Z",
      "side": 1,
      "message": "Consider\n\n last().apply {\n     assertThat(position, equalTo(targetPage))\n     assertThat(positionOffsetPixels, equalTo(0))\n }",
      "range": {
        "startLine": 539,
        "startChar": 8,
        "endLine": 542,
        "endChar": 9
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ace8ebd5_e3607a85",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d84e6676_e1483105",
      "range": {
        "startLine": 539,
        "startChar": 8,
        "endLine": 542,
        "endChar": 9
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "806aa4a0_fe2a9f06",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 554,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2018-08-02T13:41:39Z",
      "side": 1,
      "message": "Consider reversing the calculation, i.e., instead of calculating offset from offsetPixels, calculate offsetPixels from offset. That should be an exact match with the actual offsetPixels.\n\n assertThat((it.positionOffset * pageSize).roundToInt(), equalTo(it.positionOffsetPixels))",
      "range": {
        "startLine": 553,
        "startChar": 8,
        "endLine": 554,
        "endChar": 86
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebf28b95_5dc62cd6",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 554,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "806aa4a0_fe2a9f06",
      "range": {
        "startLine": 553,
        "startChar": 8,
        "endLine": 554,
        "endChar": 86
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be3d8549_7bf7bea9",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T18:21:00Z",
      "side": 1,
      "message": "Nit: This feels convoluted, but after I understood what you were doing, I see how it makes sense.  It just feels like an awful lot of hoops are being jumped through to build the combinations that otherwise could just be built with nested loops.  Consider simplifying somehow?  No big deal if you can\u0027t / don\u0027t want to.",
      "range": {
        "startLine": 94,
        "startChar": 12,
        "endLine": 94,
        "endChar": 25
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce86c8b4_e4216f5c",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T22:38:38Z",
      "side": 1,
      "message": "As discussed, you are going to take a quick stab at simplifying the code that builds your TestConfigs.\n\nIn fact, I bet you can build all of your TestConfigs with nothing but chained extension functions.  Basically like nested loops, but functional?  Right?",
      "parentUuid": "be3d8549_7bf7bea9",
      "range": {
        "startLine": 94,
        "startChar": 12,
        "endLine": 94,
        "endChar": 25
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3494230_40fa5613",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce86c8b4_e4216f5c",
      "range": {
        "startLine": 94,
        "startChar": 12,
        "endLine": 94,
        "endChar": 25
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39c747a3_f7a51fc7",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T18:21:00Z",
      "side": 1,
      "message": "Could be missing something, but, isn\u0027t this comparing the class of the Activity to FragmentStatePagerAdapter.class?",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 176,
        "endChar": 72
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22f79f91_9a3668f6",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-08-01T22:38:38Z",
      "side": 1,
      "message": "As discussed, this is a bug, so you will fix.",
      "parentUuid": "39c747a3_f7a51fc7",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 176,
        "endChar": 72
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b91ad94_742655f9",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2018-08-02T13:41:39Z",
      "side": 1,
      "message": "Maybe\n\n return this is FragmentStatePagerAdapter",
      "parentUuid": "22f79f91_9a3668f6",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 176,
        "endChar": 72
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7cde5bd_54337510",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Didn\u0027t work. Need to read-up on this in Kotlin. Still, fixed the bug.",
      "parentUuid": "4b91ad94_742655f9",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 176,
        "endChar": 72
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96221341_55a2a56f",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1347655
      },
      "writtenOn": "2018-08-02T13:41:39Z",
      "side": 1,
      "message": "Maybe derive the test name from the seed of random, so we can reproduce the test if it fails (provided that the test name is printed somewhere when the test fails)",
      "range": {
        "startLine": 270,
        "startChar": 20,
        "endLine": 270,
        "endChar": 40
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "824d8d18_47c8860e",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/SwipeTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-08-02T18:12:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96221341_55a2a56f",
      "range": {
        "startLine": 270,
        "startChar": 20,
        "endLine": 270,
        "endChar": 40
      },
      "revId": "0f2091e1c4a79bcbd3c20f977d5b105ac3d92ab1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}