{
  "comments": [
    {
      "key": {
        "uuid": "0b7f32f3_f1fd9b7e",
        "filename": "room/common/src/main/java/androidx/room/JoinEntity.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-31T00:11:17Z",
      "side": 1,
      "message": "skipping since this lang needs to be updated.",
      "range": {
        "startLine": 24,
        "startChar": 12,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76c3b7f6_69623e32",
        "filename": "room/common/src/main/java/androidx/room/JoinEntity.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-31T00:11:17Z",
      "side": 1,
      "message": "i would recommend having the full example here so that we can make the PlaylistSongXRef small (no FKeys). We can just document taht FKeys are inferred if available",
      "range": {
        "startLine": 52,
        "startChar": 18,
        "endLine": 57,
        "endChar": 32
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb7418b3_aca3db01",
        "filename": "room/common/src/main/java/androidx/room/JoinEntity.java",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-31T00:11:17Z",
      "side": 1,
      "message": "matching as in? should we enforce fkeys? (i think probably ?)",
      "range": {
        "startLine": 85,
        "startChar": 64,
        "endLine": 85,
        "endChar": 72
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e77dccf8_5df146e2",
        "filename": "room/common/src/main/java/androidx/room/Relation.java",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-05-31T20:45:11Z",
      "side": 1,
      "message": "That synonyms dictionary style looks weird for me",
      "range": {
        "startLine": 97,
        "startChar": 57,
        "endLine": 98,
        "endChar": 25
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cad85427_9e828d48",
        "filename": "room/compiler/src/main/kotlin/androidx/room/vo/Relation.kt",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-31T00:11:17Z",
      "side": 1,
      "message": "i feel like we might be better off by renaming these tables in these SQLs to avoid conflicts.",
      "range": {
        "startLine": 50,
        "startChar": 16,
        "endLine": 50,
        "endChar": 29
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "663f46be_e505d916",
        "filename": "room/compiler/src/main/kotlin/androidx/room/vo/Relation.kt",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-31T00:11:17Z",
      "side": 1,
      "message": "do we have a test where relationship is within the same table?\nseems like this would conflict but not sure.",
      "range": {
        "startLine": 51,
        "startChar": 55,
        "endLine": 51,
        "endChar": 71
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a61e2ca_269eed1f",
        "filename": "room/compiler/src/test/kotlin/androidx/room/processor/PojoProcessorTest.kt",
        "patchSetId": 3
      },
      "lineNbr": 719,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-31T00:11:17Z",
      "side": 1,
      "message": "can we add test that uses @Join w/ field names ?  especially cases where you specify 1, or both and we fail (i see we have success above but it specifies both)",
      "range": {
        "startLine": 719,
        "startChar": 3,
        "endLine": 719,
        "endChar": 5
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3f54aa5_feebf161",
        "filename": "room/integration-tests/testapp/src/androidTest/java/androidx/room/integration/testapp/vo/PlaylistWithSongs.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-05-30T22:53:45Z",
      "side": 1,
      "message": "Yigit doesn\u0027t like a lot \u0027JoinEntity\u0027, other possible names can be:\n\nassociatedBy \u003d @Join(...)\nassociatedBy \u003d @Junction(...)\n\nThere are quite a few names for what a \u0027join table\u0027 is referred by:\n\n\"Associative tables are colloquially known under many names, including association table, bridge table, cross-reference table, crosswalk, intermediary table, intersection table, join table, junction table, link table, linking table, many-to-many resolver, map table, mapping table, pairing table, pivot table (as used incorrectly in Laravel - not to be confused with the correct use of pivot table in spreadsheets), or transition table.\" - Wikipedia",
      "range": {
        "startLine": 32,
        "startChar": 12,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4b6619_6bd0f678",
        "filename": "room/integration-tests/testapp/src/androidTest/java/androidx/room/integration/testapp/vo/PlaylistWithSongs.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-05-30T23:01:00Z",
      "side": 1,
      "message": "i think i like\n`associateBy \u003d @Junction(...)`\n\nI\u0027m not sure if associate vs associated by not putting d seems more consistent.",
      "parentUuid": "f3f54aa5_feebf161",
      "range": {
        "startLine": 32,
        "startChar": 12,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a951cb2_55ae2c70",
        "filename": "room/integration-tests/testapp/src/androidTest/java/androidx/room/integration/testapp/vo/PlaylistWithSongs.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-05-31T20:45:11Z",
      "side": 1,
      "message": "+1 I don\u0027t like JoinEntity name as well, because it is not \"Entity\" it doesn\u0027t create table or anything like that.",
      "parentUuid": "0a4b6619_6bd0f678",
      "range": {
        "startLine": 32,
        "startChar": 12,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "2ded3753afbee0db4de43d4af356284320cfdd0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}