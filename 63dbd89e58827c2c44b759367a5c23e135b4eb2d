{
  "comments": [
    {
      "key": {
        "uuid": "9a7ea395_fd1ad923",
        "filename": "ui/platform/src/main/java/androidx/ui/core/AndroidOwner.kt",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2019-05-20T14:33:53Z",
      "side": 1,
      "message": "I\u0027m not sure about this optimization. Saving to a bitmap could be quite expensive in terms of resources. If we are going to have an optimization like this, I expect the android framework to handle it.\n\nHave you done performance analysis on it?\n\nWe should aim toward using the View/RenderNode optimizations that exist. I think that we shouldn\u0027t be receiving at least onDraw() calls when the View hasn\u0027t been invalidated. It may be that we\u0027re receiving dispatchDraw() even when an invalidate() hasn\u0027t been called.\n\nThis optimization should be removed pending further exploration. I\u0027m still working on RenderNode/child View integration and this can wait until after that change. We should also look into how RenderNodes are used in View to see when the RenderNode hierarchy is invalidated and how to hook into that to avoid redraw.",
      "range": {
        "startLine": 293,
        "startChar": 13,
        "endLine": 293,
        "endChar": 30
      },
      "revId": "63dbd89e58827c2c44b759367a5c23e135b4eb2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08071c3b_4b2f3d0b",
        "filename": "ui/platform/src/main/java/androidx/ui/core/AndroidOwner.kt",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1292888
      },
      "writtenOn": "2019-05-20T17:34:32Z",
      "side": 1,
      "message": "The main purpose of the CL was not really to make things faster, but rather to enforce some expectations about the number of times our measure/layout/draw lambdas are executed. Currently we receive many redundant onMeasure/onLayout/onDraw calls, and we have no control over when these are coming. This makes our latch-based tests quite unpredictable.\nI don\u0027t have any performance analysis on it, but probably it\u0027s not worth spending time on it as the Bitmap-related code would be temporary anyways :)\nI was hoping that this CL (the test it\u0027s adding) would set these expectations, and then we could make sure they hold when changing the implementation to use RenderNodes (and RecordingCanvas instead of this Bitmap hack). I believe that, if we decide to care about the number of times the layout and draw lambdas are executed, we will still need to filter unwanted layouts/draws coming from the View system (at least for the case when the Compose hierarchy is child of a regular View).\nHowever, I totally agree if you believe it\u0027s better to keep this on hold until the RenderNode integration happens.",
      "parentUuid": "9a7ea395_fd1ad923",
      "range": {
        "startLine": 293,
        "startChar": 13,
        "endLine": 293,
        "endChar": 30
      },
      "revId": "63dbd89e58827c2c44b759367a5c23e135b4eb2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "740005fe_3b9cd1df",
        "filename": "ui/platform/src/main/java/androidx/ui/core/AndroidOwner.kt",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2019-05-20T17:36:53Z",
      "side": 1,
      "message": "Yes, let\u0027s hold off on this for now. I\u0027d like to investigate why it is receiving the dispatchDraw() at all. It should not draw again if it hasn\u0027t been invalidated.",
      "parentUuid": "08071c3b_4b2f3d0b",
      "range": {
        "startLine": 293,
        "startChar": 13,
        "endLine": 293,
        "endChar": 30
      },
      "revId": "63dbd89e58827c2c44b759367a5c23e135b4eb2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}