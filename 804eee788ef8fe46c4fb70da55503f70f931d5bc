{
  "comments": [
    {
      "key": {
        "uuid": "3e8c0203_9ff11e6a",
        "filename": "camera/camera2/src/main/java/androidx/camera/camera2/impl/CaptureSession.java",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-04-30T22:10:56Z",
      "side": 1,
      "message": "@trevormcguire, is this a place where we want to use the Compat code that you had mentioned?\nIf so, is there guidance on how this should be done?",
      "revId": "804eee788ef8fe46c4fb70da55503f70f931d5bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "906f4791_a7cf85f3",
        "filename": "camera/camera2/src/main/java/androidx/camera/camera2/impl/CaptureSession.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-04-30T22:10:56Z",
      "side": 1,
      "message": "Should it not be onEnableSession()?\nIt would seem to me that onDisableSession() needs to be called at close time, but perhaps the flow is not immediately obvious.",
      "revId": "804eee788ef8fe46c4fb70da55503f70f931d5bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e99c142a_7d8f7758",
        "filename": "camera/camera2/src/main/java/androidx/camera/camera2/impl/CaptureSession.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1475857
      },
      "writtenOn": "2019-05-01T08:08:11Z",
      "side": 1,
      "message": "Oh, this point is for close flow. \nI would like to call onDisable only when the session is in OPENED state. The close() method would be invoked when reset sessionConfig.",
      "parentUuid": "906f4791_a7cf85f3",
      "revId": "804eee788ef8fe46c4fb70da55503f70f931d5bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d49c562_b7e405a4",
        "filename": "camera/camera2/src/main/java/androidx/camera/camera2/impl/CaptureSession.java",
        "patchSetId": 1
      },
      "lineNbr": 687,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-04-30T22:10:56Z",
      "side": 1,
      "message": "@trevormcguire where are you placing the Executor/Handler code? It would be good to have consistency in how we handle this.",
      "revId": "804eee788ef8fe46c4fb70da55503f70f931d5bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4528637_5d20e64d",
        "filename": "camera/camera2/src/main/java/androidx/camera/camera2/impl/CaptureSession.java",
        "patchSetId": 1
      },
      "lineNbr": 687,
      "author": {
        "id": 1475857
      },
      "writtenOn": "2019-05-01T08:08:11Z",
      "side": 1,
      "message": "Maybe we can put this in core.impl.utils?\n\nBut the Executor have some customize here.\nI would like to keep the Executor have the similar behavior like we use the handler in createCaptureSession(surfaces, callbacks, handler).\n\nIn createCaptureSession(surfaces, callbacks, handler), it would use current thread to execute the command if handler not exist. And in ExecutorHandlerAdapter, I would get the looper in construction time, to handle the command (this behavior would be similar but it still have a little bit different from the original design).",
      "parentUuid": "1d49c562_b7e405a4",
      "revId": "804eee788ef8fe46c4fb70da55503f70f931d5bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}