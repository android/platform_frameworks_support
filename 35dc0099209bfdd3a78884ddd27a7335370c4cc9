{
  "comments": [
    {
      "key": {
        "uuid": "64a1c4e5_4216a375",
        "filename": "lifecycle/viewmodel-savedstate/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-12-05T18:22:38Z",
      "side": 1,
      "message": "so fragment depends on viewmodel, saved state and\nviewmodel-saved state depends on fragment. feel like we are headed for doomsday :/",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "245222ac_2c3b3eba",
        "filename": "lifecycle/viewmodel-savedstate/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-12-05T18:31:37Z",
      "side": 1,
      "message": "Kinda already there :D \n\nIt is the reason why ViewModelProviders are in lifecycle-extensions package: it depends on both lifecycle-viewmodel and fragments. If we decide to make this factory default than we can split contents of this module between  lifecycle-viewmodel/lifecycle-extension.",
      "parentUuid": "64a1c4e5_4216a375",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a041c763_b7451ef2",
        "filename": "lifecycle/viewmodel-savedstate/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2018-12-05T18:38:48Z",
      "side": 1,
      "message": "I\u0027d like to keep all ComponentActivity code in androidx.activity and Fragment code in androidx.fragment. ViewModelProviders is not a scalable approach and lifecycle-extension remains something I want to deprecate entirely - please don\u0027t repeat the same issue again.\n\nI\u0027d prefer if we only expose constructors for SavedStateVMFactory that take:\n- an Application and BundleSavedStateRegistryOwner\n- an Application and a BundleSavedStateRegistry\n\nand the Bundle overloads.\n\nFor EAP, developers can deal less clean SavedStateVMFactory(requireActivity().application, this) calls for their Fragments and SavedStateVMFactory(application, this) for ComponentActivity.",
      "parentUuid": "245222ac_2c3b3eba",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74cc1687_0dc5d818",
        "filename": "lifecycle/viewmodel-savedstate/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-12-06T12:51:18Z",
      "side": 1,
      "message": "I\u0027m happy to resolve that, this case is a bit more complicated,  we\u0027re currently missing hooks and just pass application isn\u0027t enough to get rid of fragments dependency \u003d( \nSee VMSavedStateInitializer.java: everytime fragment or activity is recreated I need to register already existent ViewModel\u0027s SavedStateProvider to new instance of activity / fragment. \nActivity case is simple, all is needed is Application, then I can add ActivityLifecycleCallbacks and check if activity has ViewModelStoreOwner interface. For fragments I did the same with FragmentLifecycleCallbacks, but it obviously requires fragment dependency. I don\u0027t see any elegant way to resolve it right now. \n\nOne more thing: I *really* (really, really) want to implement this SavedStateHandle thing as a separate module that is dependent on both savedstate-bundle and viewmodel, but neither savedstate-bundle or viewmodel modules don\u0027t know about each other. \n\nSo my suggestion for now:\n1. let\u0027s explicitly pass an application in factory as Ian suggested\n2. go to eap and gather feedback on whether people like that approach\n3. while running eap figure out what is the best way to resolve fragment dependency and add missing hooks. \n\nWhat do you think?",
      "parentUuid": "a041c763_b7451ef2",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef954c5_0c111018",
        "filename": "lifecycle/viewmodel-savedstate/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-12-06T18:54:47Z",
      "side": 1,
      "message": "I prefer to go w/ the least path of resistence for the EAP.\nWe have a lot things to get feedback and any time we lose trying to make a decision here costs time for all of them.\n\nI\u0027d rather we go with whatever we have and iterate during EAP.",
      "parentUuid": "74cc1687_0dc5d818",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d3dd1a_f02c5872",
        "filename": "lifecycle/viewmodel-savedstate/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2018-12-06T23:10:22Z",
      "side": 1,
      "message": "I think VMSavedStateInitializer needing to be a thing at all is a good sign we don\u0027t have the right entry point to this API - ideally supporting this in any Application+LifecycleOwner+BundleSavedStateRegistryOwner should a drop in thing - be it a one liner getLifecycle().addObserver(VMSavedStateInitializer(requireApplication(), getBundleSavedStateRegistry())) that EAP members can add temporarily or that ComponentActivity / Fragment does internally once we get to that stage.\n\nAck that this is something we can do during the EAP phase.",
      "parentUuid": "aef954c5_0c111018",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b23a34d0_76a10681",
        "filename": "lifecycle/viewmodel-savedstate/src/main/AndroidManifest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-12-05T18:22:38Z",
      "side": 1,
      "message": "this is weird for viewmodel-savedstate module to have fragment package.",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50d5caf5_dc8c9df1",
        "filename": "lifecycle/viewmodel-savedstate/src/main/AndroidManifest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2018-12-06T23:10:22Z",
      "side": 1,
      "message": "Yeah, viewmodel.savedstate was a good name, let\u0027s keep it.",
      "parentUuid": "b23a34d0_76a10681",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6629c19_e5aa04a9",
        "filename": "lifecycle/viewmodel-savedstate/src/main/AndroidManifest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-12-10T12:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50d5caf5_dc8c9df1",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d0be83f_f38f8ad7",
        "filename": "lifecycle/viewmodel-savedstate/src/main/AndroidManifest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1060451
      },
      "writtenOn": "2018-12-10T16:27:27Z",
      "side": 1,
      "message": "It looks it was switched to just androidx.lifecycle.viewmodel, rather than back to androidx.lifecycle.viewmodel.savedstate, which would mirror the androidTest package name.",
      "parentUuid": "a6629c19_e5aa04a9",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51126444_de59e982",
        "filename": "lifecycle/viewmodel-savedstate/src/main/AndroidManifest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-12-11T14:13:03Z",
      "side": 1,
      "message": ":facepalm switched to proper thing (hopefully)",
      "parentUuid": "5d0be83f_f38f8ad7",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39bf4f66_6143e11f",
        "filename": "lifecycle/viewmodel-savedstate/src/main/java/androidx/lifecycle/AbstractSavedStateVMFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-12-05T18:22:38Z",
      "side": 1,
      "message": "ugh the VM in the name isn\u0027t good.\n\nit is designed to be subclasses so not sure how to fix that w/o having a huge name (api council can fix that so it is fine for this CL).\n\nFrom kotlin though, we can have something like:\n\nfun \u003creified T : ViewModel\u003e createFactory( f : (String, SavedStateHandle) -\u003e T {\n}\n\nusing operator overloading, we can probably hide all different facotry classes under 1 function ?",
      "range": {
        "startLine": 32,
        "startChar": 22,
        "endLine": 32,
        "endChar": 49
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c00b84ba_9d7e5a3a",
        "filename": "lifecycle/viewmodel-savedstate/src/main/java/androidx/lifecycle/AbstractSavedStateVMFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-12-10T12:20:47Z",
      "side": 1,
      "message": "Yep, Kotlin makes it easier. Ack for EAP.",
      "parentUuid": "39bf4f66_6143e11f",
      "range": {
        "startLine": 32,
        "startChar": 22,
        "endLine": 32,
        "endChar": 49
      },
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f7cec25_e74e720a",
        "filename": "lifecycle/viewmodel-savedstate/src/main/java/androidx/lifecycle/SavedStateVMFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-12-05T18:22:38Z",
      "side": 1,
      "message": "same concern with the name but skipping for this CL since it is for EAP.",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aedd52c_af275590",
        "filename": "lifecycle/viewmodel-savedstate/src/main/java/androidx/lifecycle/SavedStateVMFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-12-10T12:20:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2f7cec25_e74e720a",
      "revId": "35dc0099209bfdd3a78884ddd27a7335370c4cc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}