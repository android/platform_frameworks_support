{
  "comments": [
    {
      "key": {
        "uuid": "31b88bc0_4b4c3119",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-04-18T12:11:46Z",
      "side": 1,
      "message": "I\u0027d a bit more docs about what it does (maybe just copy from IsolatedActivity)",
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8d872c_85b4b65b",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-18T20:19:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31b88bc0_4b4c3119",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aadc5f2_ef834d17",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2019-04-17T22:41:45Z",
      "side": 1,
      "message": "waitForActivitiesToComplete() happens _before_ any tests are run? Are you sure about that? Seems like a questionable thing to rely on though.\n\nCould instead this runner in onCreate inject a pre-test hook in BenchmarkState to trigger the activity launch if it\u0027s not already in the RESUMED state?",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0742257c_e34d55a5",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-17T22:47:56Z",
      "side": 1,
      "message": "It does - it happens before and after each test. I agree it\u0027s a questionable thing to rely on, I\u0027m planning on talking with the AndroidX Test folks about a better alternative.\n\nonCreate itself is on the UI thread, so I can\u0027t call launchActivitySync there. I thought about posting a runnable to do it, but I want to ensure the work is done before the first test starts.\n\nThe problem with injecting an activity launch inside the BenchmarkState is that it may be too late - if the first test happens to be @UiThreadTest, we\u0027ll be blocking the UI thread by the time we\u0027re running any code in BenchmarkState.\n\nI guess one other alternative would be to use the Rule/BenchmarkState\u0027s constructor - do you think that\u0027s preferable? Seems like making another assumption though - that the test class isn\u0027t constructed on the UI thread. May be a safer assumption though.",
      "parentUuid": "7aadc5f2_ef834d17",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f06de36_ec310234",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2019-04-17T22:54:31Z",
      "side": 1,
      "message": "Do you need launchActivitySync? Can you instead startActivity and let it be asynchronous, with a hook that has BenchmarkState block on the RESUMED status of IsolatedActivity if it\u0027s not on the main thread?\n\nRelying on the rule to not be on the main thread should be safe, and you can at least trivially verify that assumption with a Looper.myLooper() \u003d\u003d Looper.getMainLooper()",
      "parentUuid": "0742257c_e34d55a5",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c50a99c_6b60037d",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-17T23:42:13Z",
      "side": 1,
      "message": "Discussed this further in chat.\n\nWe can\u0027t put the launch inside the rule constructor. We don\u0027t know the ordering of our rule\u0027s construction vs an ActivityTestRule - we don\u0027t want to launch an activity after it does.\n\nwaitForActivitiesToComplete is actually quite nice as an entry point that runs on the test thread, before and after the entire test method (including activity rule launch and finish) is run.\n\nFor that reason, I\u0027m leaving this as is. Will look to expand waitForActivitiesToComplete usage later on, to re-launch the activity as necessary.\n\nIt is a pretty gross way to use this API though - will talk to test library team about getting an API for a proper way to do this.",
      "parentUuid": "4f06de36_ec310234",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a30b88b9_a7581738",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-04-18T12:11:46Z",
      "side": 1,
      "message": "\u003e We don\u0027t know the ordering of our rule\u0027s construction vs an ActivityTestRule - we don\u0027t want to launch an activity after it does.\n\nwhat if you make your custom rule @ClassRule instead of @TestRule, then you\u0027ll have a guarantee to be called before ActivityTestRule? It is hack as well, but I think it is less gross than this one.\n\nMy concern: providing your own AndroidJUnitRunner composes badly, for example internally in google we have custom runner.",
      "parentUuid": "1c50a99c_6b60037d",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5182a0c5_fb50f431",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-18T17:39:11Z",
      "side": 1,
      "message": "The ClassRule change sounds better in some ways, but we still have the problem that in a follow up, we want to hook into launch of all activities via Instrumentation.callActivityOnStart so we can set a flag on the window: http://b/129282573\n\nIs there a better way to hook into that? If so, we don\u0027t need the runner for now.",
      "parentUuid": "a30b88b9_a7581738",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "809c9aef_4cbce6c0",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-18T19:54:59Z",
      "side": 1,
      "message": "Blarg, so two problems with removing the runner from experiments:\n\n1) We still want to override waitForActivitiesToComplete to not call super, to avoid sleeping for 2 seconds before and after each test method, because our IsolationActivity isn\u0027t finished. We could avoid this problem by closing and reopening the activity each time, in between each test, but in my local tests, that causes two problems:\n\n1a) flickering and status bar redraw - the device is constantly animating window transitions (even if I disable exit animation), and re-launching the launcher. https://screenshot.googleplex.com/dcy24ATiUMm (screenshot showing \u003e 50% of CPU used on irrelevant stuff, causing bench to be descheduled)\n\n1b) latency - another ~75ms per test, and that\u0027s *without* me adding an extra long sleep to wait for animations and launcher launch work to finish. Would probably be 500ms+ for that...\n\n\n2) TestRule is an interface, ClassRule is an annotation. We could ask that everyone annotate our rule, but it\u0027s an extra line of code that\u0027s easy to miss.",
      "parentUuid": "5182a0c5_fb50f431",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30ea8296_001f32f8",
        "filename": "benchmark/src/main/java/androidx/benchmark/AndroidBenchmarkRunner.kt",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-18T20:19:43Z",
      "side": 1,
      "message": "I\u0027ll follow up with the AndroidX test folks about both of these problems. We\u0027ll see if we can avoid the runner in the long run with their support.",
      "parentUuid": "809c9aef_4cbce6c0",
      "range": {
        "startLine": 46,
        "startChar": 77,
        "endLine": 46,
        "endChar": 98
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad9f30e2_d9d428ab",
        "filename": "benchmark/src/main/java/androidx/benchmark/IsolationActivity.kt",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-04-18T12:11:46Z",
      "side": 1,
      "message": "is this log and one below useful for developers? (We don\u0027t usually log, but this is test, so I guess it is bit different story)",
      "range": {
        "startLine": 79,
        "startChar": 22,
        "endLine": 79,
        "endChar": 44
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5adb636_d17302f3",
        "filename": "benchmark/src/main/java/androidx/benchmark/IsolationActivity.kt",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-18T20:19:43Z",
      "side": 1,
      "message": "I added them because I think they\u0027ll be useful for debugging test logs, especially if our activity trickery surprises someone\u0027s activity testing infrastructure.",
      "parentUuid": "ad9f30e2_d9d428ab",
      "range": {
        "startLine": 79,
        "startChar": 22,
        "endLine": 79,
        "endChar": 44
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbca3b9d_4aaab1eb",
        "filename": "slices/benchmark/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-04-18T12:11:46Z",
      "side": 1,
      "message": "let\u0027s move it to AndroidXPlugin? So it is automatically done for every benchmark project",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 91
      },
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50f3f3b_f2e5df74",
        "filename": "slices/benchmark/build.gradle",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-04-18T20:19:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbca3b9d_4aaab1eb",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 91
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3d8b07e4208ae7799c11444948b41642f98bac0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}