{
  "comments": [
    {
      "key": {
        "uuid": "5f069255_bcae073a",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 110,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-09T13:21:39Z",
      "side": 1,
      "message": "\u003d\\",
      "range": {
        "startLine": 110,
        "startChar": 12,
        "endLine": 110,
        "endChar": 18
      },
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bbdefe2_740165a7",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1232209
      },
      "writtenOn": "2018-10-10T14:18:00Z",
      "side": 1,
      "message": "Should this method be main thread if set/get is?\n\nIf yes, let\u0027s null out the map to free references for early GC.\n\nIf no, we should take the lock, read the map reference into a local, null out the field, and then loop on the local.",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48f7d14d_fcf973f8",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-10T15:23:34Z",
      "side": 1,
      "message": "It is mainThreadOnly, but set/get aren\u0027t. \n\nSee my comment for line 161, on why I don\u0027t clear the map here and don\u0027t null out the field. \n\nSo If I can\u0027t clear the map and the field, I think this implementation is ok:\nmBagOfTags can\u0027t go back to null; All preexistent values will receive close(); values added concurrently will receive their close(), because of volatile mCleared \u003d true, either here, either in set method. Do you miss anything?",
      "parentUuid": "6bbdefe2_740165a7",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "157baecc_eb5c7230",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 130,
      "author": {
        "id": 1232209
      },
      "writtenOn": "2018-10-10T14:18:00Z",
      "side": 1,
      "message": "comment method name is wrong.",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cb1934e_06be876d",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 130,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-10T15:23:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "157baecc_eb5c7230",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6f3f772_ec7ef5ae",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1232209
      },
      "writtenOn": "2018-10-10T14:18:00Z",
      "side": 1,
      "message": "Need \u003cp\u003e here and next paragraph",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99e51db1_f046f9fb",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-10T15:23:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6f3f772_ec7ef5ae",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f003796d_b204a952",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1232209
      },
      "writtenOn": "2018-10-10T14:18:00Z",
      "side": 1,
      "message": "If this method is truly main thread-only then you don\u0027t need a lock or volatile. If not, we should remove the annotation.",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a71fef85_05b6f8ca",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-10T14:46:09Z",
      "side": 1,
      "message": "Yeah, annotation is stale (gonna remove it)",
      "parentUuid": "f003796d_b204a952",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a187e92_165df564",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-10T15:23:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a71fef85_05b6f8ca",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b93c88a_87cd8258",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1232209
      },
      "writtenOn": "2018-10-10T14:18:00Z",
      "side": 1,
      "message": "This seems like it should be first in the method to prevent initializing the map and interacting with it when cleared. Or, better yet, throw an exception if you try to put after clear?",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32d4e480_4b79386a",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-10T14:46:09Z",
      "side": 1,
      "message": "Yeah, this is main part. If we want to make viewModelScope thread-safe, than developer should be able to safely access .viewModelScope or be able to check it is safe to access it (exception won\u0027t be thrown).\n\nSo if we\u0027d like to throw exception here once vm is cleared, then we throw then .viewModelScope accessed after onClear, obviously .isCleared() method or any other check won\u0027t help. Instead of throwing we can return null here and make property viewModelScope nullable, but then code become quite weird. \n\nAlternatively (and it is what happens in this version) I support calling .viewModelScope after onClear, but scope is canceled. But this has consequences that you correctly pointed out:\n- we can\u0027t clear the map in clear() (otherwise we\u0027ll return different scopes before and after clear call)",
      "parentUuid": "8b93c88a_87cd8258",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a363ea24_bfbb1910",
        "filename": "lifecycle/viewmodel/src/main/java/androidx/lifecycle/ViewModel.java",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-09T13:21:39Z",
      "side": 1,
      "message": "\u003d\\",
      "revId": "a11960e4e78446ed295bb3eb9b5acf34c67b8dfd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}