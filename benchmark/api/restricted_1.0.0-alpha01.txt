// Signature format: 3.0
package androidx.benchmark {

  public final class BenchmarkRule implements org.junit.rules.TestRule {
    field @RestrictTo public static final androidx.benchmark.BenchmarkRule.Companion! Companion;
  }

  @RestrictTo({RestrictTo.Scope.LIBRARY}) public static final class BenchmarkRule.Companion {
  }

  public final class BenchmarkRule.Scope {
    method @RestrictTo({RestrictTo.Scope.LIBRARY}) public androidx.benchmark.BenchmarkState getOuterState();
  }

  public final class BenchmarkState {
    method @RestrictTo({RestrictTo.Scope.LIBRARY}) public inline boolean keepRunningInline();
    field @RestrictTo public static final androidx.benchmark.BenchmarkState.Companion! Companion;
  }

  @RestrictTo({RestrictTo.Scope.LIBRARY}) public static final class BenchmarkState.Companion {
  }

  @RestrictTo({RestrictTo.Scope.LIBRARY}) public final class IsolationActivity extends android.app.Activity {
    method public void actuallyFinish();
    method public boolean getResumed();
    method public void setResumed(boolean p);
    property public final boolean resumed;
    field public static final androidx.benchmark.IsolationActivity.Companion! Companion;
  }

  public static final class IsolationActivity.Companion {
    method @AnyThread public void finishSingleton();
    method @WorkerThread public void launchSingleton();
  }

}

