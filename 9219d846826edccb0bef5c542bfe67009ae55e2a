{
  "comments": [
    {
      "key": {
        "uuid": "c512656f_fc919010",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T15:11:34Z",
      "side": 1,
      "message": "this is unfortunate.  ItemKeyedDataSource is subclass, but we use its LoadParams (I know, that it existed in previous release, don\u0027t you think it would nicer to create class LoadParams here as well and extend ItemKeyedDataSource.LoadParams (like, ItemKeyedDataSource.LoadParams extends ListenableKeyedDataSource.LoadParams)",
      "range": {
        "startLine": 64,
        "startChar": 149,
        "endLine": 64,
        "endChar": 200
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "332bad8c_51a2a010",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T20:37:07Z",
      "side": 1,
      "message": "The problem is that to keep API compat, I\u0027ll have to manually rewrap the params objects each time I pass them from ListenableItemKeyedDataSource -\u003e ItemKeyedDataSource.\n\nIt\u0027s an unfortunate extra wrap/allocation, and we can\u0027t deprecate the old one, while maintaining API compatibility.",
      "parentUuid": "c512656f_fc919010",
      "range": {
        "startLine": 64,
        "startChar": 149,
        "endLine": 64,
        "endChar": 200
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e01818e_644964ae",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T23:12:33Z",
      "side": 1,
      "message": "I\u0027ll spend on this tomorrow a bit more",
      "parentUuid": "332bad8c_51a2a010",
      "range": {
        "startLine": 64,
        "startChar": 149,
        "endLine": 64,
        "endChar": 200
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38463f8b_686741ff",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T23:31:47Z",
      "side": 1,
      "message": "Uploaded a CL with this done, let me know what you think.\n\nI think it\u0027s preferable, since it will make all the non-callback (e.g. coroutine Kotlin) APIs nicer. It\u0027s 6 extra classes though :P",
      "parentUuid": "9e01818e_644964ae",
      "range": {
        "startLine": 64,
        "startChar": 149,
        "endLine": 64,
        "endChar": 200
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eec9676_fbec3183",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-12T15:44:03Z",
      "side": 1,
      "message": "I like it more too",
      "parentUuid": "38463f8b_686741ff",
      "range": {
        "startLine": 64,
        "startChar": 149,
        "endLine": 64,
        "endChar": 200
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b034b42_c17cfbcb",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T15:11:34Z",
      "side": 1,
      "message": "should be these classes final?",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96aae3d2_d7f32ce4",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T20:37:07Z",
      "side": 1,
      "message": "Can\u0027t be done, if we\u0027re subclassing them in the callback APIs",
      "parentUuid": "1b034b42_c17cfbcb",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ba98042_9e256b29",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T23:12:33Z",
      "side": 1,
      "message": "Can you please elaborate a little bit? Currently nothing subclasses them, so thee is a plan do that? Or are devs supposed to do that?",
      "parentUuid": "96aae3d2_d7f32ce4",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db33a93e_e48020eb",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T23:31:47Z",
      "side": 1,
      "message": "I\u0027m saying we can\u0027t make \u0027final class ListenableItemKeyedDataSource.InitialResult\u0027 if we want to do ItemKeyedDataSource.InitialResult extends ListenableItemKeyedDataSource.InitialResult.",
      "parentUuid": "7ba98042_9e256b29",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b24f226_230a8eb5",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-12T15:44:03Z",
      "side": 1,
      "message": ":facepalm you are very right",
      "parentUuid": "db33a93e_e48020eb",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e8e80_a29047f0",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 155,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T15:11:34Z",
      "side": 1,
      "message": "Is it binary compatible change?",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf94aceb_1eabd424",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 155,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T20:37:07Z",
      "side": 1,
      "message": "I don\u0027t see why it wouldn\u0027t be - we don\u0027t expose the constructor, so no one\u0027s subclassing - it shouldn\u0027t matter to apps using the API.",
      "parentUuid": "c73e8e80_a29047f0",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55c21ce2_18840df5",
        "filename": "paging/common/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 155,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T23:12:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bf94aceb_1eabd424",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cc99c1f_99aa7537",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T15:11:34Z",
      "side": 1,
      "message": "So this one is not public and its fields don\u0027t have documentation (fine), however you have public classes that extends this class, that don\u0027t provide any additional fields / method. So do you expect devs to touch these fields?  If yes, why don\u0027t you want to make this public?\n\n+ Why do you want to expose RangeResult / InitialResult classes if they don\u0027t provide anything new?",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "453fa798_f893fff1",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T20:37:07Z",
      "side": 1,
      "message": "I do not expect devs to touch any properties.\n\nThe subclasses constrain which constructors you can call, and still pass those to your ListenableFuture.\n\nNote that I\u0027m considering switching the constructors for the subtypes to builders.",
      "parentUuid": "2cc99c1f_99aa7537",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a9edac9_5bd6da75",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T23:12:33Z",
      "side": 1,
      "message": "So once you do that, subclasses will be hidden, right?",
      "parentUuid": "453fa798_f893fff1",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9c790bc_2d5df879",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T23:31:47Z",
      "side": 1,
      "message": "No, I\u0027d keep the subclasses around, for type safety, and add a ktx constructor for kotlin.\n\n\nFor example, a PageKeyedDataSource\u0027s initial load includes a next/prev key, and I want the return type of the function to clarify they need to pass those (by requiring that type).",
      "parentUuid": "8a9edac9_5bd6da75",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "905b0f6b_c1c15002",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-12T15:44:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b9c790bc_2d5df879",
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ac51dd4_7bddbb16",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 518,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T15:11:34Z",
      "side": 1,
      "message": "It is a bit weird here, DataSource doesn\u0027t have any public methods for loading. Do you think it would make sense to expand documentation and point to subclass load methods (loadAfter, loadBefore etc)? Or maybe make it package private here and make it public in subclasses?",
      "range": {
        "startLine": 518,
        "startChar": 46,
        "endLine": 518,
        "endChar": 53
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "858cd7ba_6e4896f7",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 518,
      "author": {
        "id": 1010334
      },
      "writtenOn": "2019-03-11T20:37:07Z",
      "side": 1,
      "message": "There are too many subclass load methods, but I could make it package private.\n\nOne nice feature about it being public on datasource is that apps can use it directly:\n\n    myAdapter.getCurrentList().getDataSource().isRetryableError()\n\nNot really necessary, since we always do it for them, but possibly justified in tests.",
      "parentUuid": "2ac51dd4_7bddbb16",
      "range": {
        "startLine": 518,
        "startChar": 46,
        "endLine": 518,
        "endChar": 53
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11178aa2_e3953781",
        "filename": "paging/common/src/main/java/androidx/paging/DataSource.java",
        "patchSetId": 14
      },
      "lineNbr": 518,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-03-11T23:12:33Z",
      "side": 1,
      "message": "I think we can link at least some not all of them? (though yeah all of them will be too much)",
      "parentUuid": "858cd7ba_6e4896f7",
      "range": {
        "startLine": 518,
        "startChar": 46,
        "endLine": 518,
        "endChar": 53
      },
      "revId": "9219d846826edccb0bef5c542bfe67009ae55e2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}