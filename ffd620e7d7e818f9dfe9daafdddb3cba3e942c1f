{
  "comments": [
    {
      "key": {
        "uuid": "9521b760_6eae7e7a",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1486234
      },
      "writtenOn": "2019-06-13T10:52:42Z",
      "side": 1,
      "message": "nit: maybe change the log as well.",
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "206a06c0_011b941d",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1377888
      },
      "writtenOn": "2019-06-13T17:38:44Z",
      "side": 1,
      "message": "So this will be logged every time imageIncoming() is called? Since that\u0027s the condition to break out of the do/while loop.\n\nIf that\u0027s the case, then we probably shouldn\u0027t be logging at all.",
      "range": {
        "startLine": 323,
        "startChar": 20,
        "endLine": 323,
        "endChar": 69
      },
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d97db35_e6902cc1",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-13T17:53:02Z",
      "side": 1,
      "message": "The exception is thrown when more images than maxImages has been acquired without a close. So this will only happen if the Images don\u0027t get closed in time.\n\nSo this is an example of what that log looks like\n2019-06-12 13:31:49.731 32068-32068/androidx.camera.integration.extensions E/MetadataImageReader: Failed to acquire latest image.\n    java.lang.IllegalStateException: maxImages (3) has already been acquired, call #close before acquiring more.",
      "parentUuid": "206a06c0_011b941d",
      "range": {
        "startLine": 323,
        "startChar": 20,
        "endLine": 323,
        "endChar": 69
      },
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201485b8_24cd855a",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1377888
      },
      "writtenOn": "2019-06-13T17:59:42Z",
      "side": 1,
      "message": "Ah ok I missed the part on acquireNextImage() that says it can return null.\n\nBut wouldn\u0027t this log also also happen if there are 3 images available (i.e., a full queue)? This is assuming images aren\u0027t closed in matchImage().",
      "parentUuid": "8d97db35_e6902cc1",
      "range": {
        "startLine": 323,
        "startChar": 20,
        "endLine": 323,
        "endChar": 69
      },
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69e75354_7d60ae18",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-13T21:58:14Z",
      "side": 1,
      "message": "Thats a good question.\n\nJust tested it, by waiting for 3 images to be in the queue before calling this 4 times in a row. This doesn\u0027t throw the exception, so it probably just returns null instead.\n\nBut if we wait for onImageAvailableListener to be called 4 times before acquiring all, then it throws the exception.\n\nLooking through the native code it looks that if it unable acquire a buffer then it won\u0027t throw the exception https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/media/jni/android_media_ImageReader.cpp#551\nIf however, there are more than maxImages buffers that are available in the BufferItemConsumer, then it will attempt to acquire the buffer which causes the issue.\n\nSo there will be a problem when the number of (Images available + Images which aren\u0027t closed) \u003e maxImages. This would require some logic to track when the Images get closed.\n\nIf you are okay with it, I say that is beyond the scope of this change. But we should open up an additional bug to fix this.",
      "parentUuid": "201485b8_24cd855a",
      "range": {
        "startLine": 323,
        "startChar": 20,
        "endLine": 323,
        "endChar": 69
      },
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6189437a_b8fa5782",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1377888
      },
      "writtenOn": "2019-06-13T23:17:34Z",
      "side": 1,
      "message": "Looks good",
      "parentUuid": "69e75354_7d60ae18",
      "range": {
        "startLine": 323,
        "startChar": 20,
        "endLine": 323,
        "endChar": 69
      },
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3331623d_cbc40a77",
        "filename": "camera/core/src/main/java/androidx/camera/core/MetadataImageReader.java",
        "patchSetId": 12
      },
      "lineNbr": 323,
      "author": {
        "id": 1482448
      },
      "writtenOn": "2019-06-14T01:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9521b760_6eae7e7a",
      "revId": "ffd620e7d7e818f9dfe9daafdddb3cba3e942c1f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}