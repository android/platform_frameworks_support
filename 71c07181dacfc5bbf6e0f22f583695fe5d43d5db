{
  "comments": [
    {
      "key": {
        "uuid": "ec230c03_5cc286b2",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 139,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "does it make sense to calculate it lazily? Btw, can you use Kotlin lazy for it?\n\nI guess this check should be turned on only for projects with samples, so maybe it is better to calculate it eagerly? (better \u003d simpler code)",
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d7f656c_2c45d7ad",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "use destructive declaration",
      "range": {
        "startLine": 186,
        "startChar": 53,
        "endLine": 186,
        "endChar": 57
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7578ebb2_18fe39e9",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "do:\n\nsampleFunctionCache\n   .filter { link \u003d\u003d function.fqName!!.asString() }\n   ...",
      "range": {
        "startLine": 193,
        "startChar": 23,
        "endLine": 196,
        "endChar": 25
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b529b2a8_9e552ed6",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 206,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "move to helper, so it would be a bit easier to read:\n\nif (!function.isSampledAnnotated()) {\n    context.report(...)\n}",
      "range": {
        "startLine": 198,
        "startChar": 23,
        "endLine": 206,
        "endChar": 25
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1285165a_0b30b189",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "why IllegalStateException instead of \"context.report(\"Unsatisfied link\")\" ?",
      "range": {
        "startLine": 217,
        "startChar": 26,
        "endLine": 217,
        "endChar": 47
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e425eae_261467b3",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 327,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "I\u0027d do context.report as well instead of \"crashing\", so we find more errors in one go",
      "range": {
        "startLine": 327,
        "startChar": 26,
        "endLine": 327,
        "endChar": 47
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9ec9ac7_2e95b733",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 381,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "nit: fancier way to do the same would be\n\n\"parentProjectPath \u003d parentProjectPath ?: dependenciesPathList.find {...}",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 67
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bd27451_7bbc6cfe",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 402,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "use flatMap instead",
      "range": {
        "startLine": 397,
        "startChar": 15,
        "endLine": 402,
        "endChar": 0
      },
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62c44d16_25f81c09",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 443,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "same as below",
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9262d74_8327ad3a",
        "filename": "buildSrc/lint-checks/src/main/java/androidx/build/lint/SampledAnnotationEnforcer.kt",
        "patchSetId": 7
      },
      "lineNbr": 459,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-24T11:43:49Z",
      "side": 1,
      "message": "more \"native\" way to do that would be: \n\nthis.accept(object : KtVisitor() {\n    fun visitNameFunction() { bla bla} \n})\n\nNot sure if there is any functional difference.",
      "revId": "71c07181dacfc5bbf6e0f22f583695fe5d43d5db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}