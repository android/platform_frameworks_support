{
  "comments": [
    {
      "key": {
        "uuid": "db59263d_d29da4de",
        "filename": "room/coroutines/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 5,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "is there a way to get rid of this constructor ?",
      "range": {
        "startLine": 5,
        "startChar": 16,
        "endLine": 5,
        "endChar": 30
      },
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aa5223b_a75d4b0b",
        "filename": "room/coroutines/api/current.txt",
        "patchSetId": 14
      },
      "lineNbr": 5,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Don\u0027t think so? Other ktx packages have it. \u003d/",
      "parentUuid": "db59263d_d29da4de",
      "range": {
        "startLine": 5,
        "startChar": 16,
        "endLine": 5,
        "endChar": 30
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efa13d94_986ef02c",
        "filename": "room/coroutines/src/main/java/androidx/room/CoroutinesRoom.kt",
        "patchSetId": 14
      },
      "lineNbr": 40,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "add a comment here to clarify what we are picking (dispatcher for existing transaction in the context or just a new context w/o a transaction)",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7bc3d43_41f65652",
        "filename": "room/coroutines/src/main/java/androidx/room/CoroutinesRoom.kt",
        "patchSetId": 14
      },
      "lineNbr": 40,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efa13d94_986ef02c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2097edcc_a4d8d177",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "lets call this control job as well, i was confused w/ this being cancelled in TransactionELement",
      "range": {
        "startLine": 87,
        "startChar": 8,
        "endLine": 87,
        "endChar": 11
      },
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df45e12c_5cac6f74",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2097edcc_a4d8d177",
      "range": {
        "startLine": 87,
        "startChar": 8,
        "endLine": 87,
        "endChar": 11
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16cdc481_92d4e822",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "this is nice :)",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcea212a_2c403b63",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Thanks?",
      "parentUuid": "16cdc481_92d4e822",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee02360_caf45098",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "shouldn\u0027t this be atomic ? are we guarateed single threaded access ?",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 149,
        "endChar": 0
      },
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b31243a4_0ffa8475",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Single threaded access (the transaction thread).",
      "parentUuid": "0ee02360_caf45098",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 149,
        "endChar": 0
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e3e0a04_d9164dc1",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 159,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "i was quite confused with this :/. reads like we are cancelling the transaction.\n\nmaybe rename it to controlJob AND comment on what this actually means",
      "range": {
        "startLine": 159,
        "startChar": 12,
        "endLine": 159,
        "endChar": 26
      },
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8cf4e2_d0cf74ae",
        "filename": "room/coroutines/src/main/java/androidx/room/RoomDatabase.kt",
        "patchSetId": 14
      },
      "lineNbr": 159,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Renamed to \u0027transactionThreadControlJob\u0027 and added comment.",
      "parentUuid": "1e3e0a04_d9164dc1",
      "range": {
        "startLine": 159,
        "startChar": 12,
        "endLine": 159,
        "endChar": 26
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4b4d6af_77d6a5aa",
        "filename": "room/integration-tests/kotlintestapp/src/androidTest/java/androidx/room/integration/kotlintestapp/test/SuspendingQueryTest.kt",
        "patchSetId": 14
      },
      "lineNbr": 422,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "this is bound to flake :/ \ninstead, use a CountDownLatch that you countDown when `runSuspending` starts so that you know for sure transaction started. and then await on it before cancelling.\n\nsimilar to these: https://android-review.googlesource.com/c/platform/frameworks/support/+/905134/8/lifecycle/runtime/eap/src/androidTest/java/androidx/lifecycle/PausingDispatcherTest.kt#106\n\nI\u0027ve not gone through the whole test so just update others as well if necessary.",
      "range": {
        "startLine": 422,
        "startChar": 12,
        "endLine": 422,
        "endChar": 22
      },
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a82b1f05_c037abef",
        "filename": "room/integration-tests/kotlintestapp/src/androidTest/java/androidx/room/integration/kotlintestapp/test/SuspendingQueryTest.kt",
        "patchSetId": 14
      },
      "lineNbr": 422,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Updated. I do have a second delay(200), but I can\u0027t change it to a latch. See the test runSuspendingTransaction_busyExecutor",
      "parentUuid": "e4b4d6af_77d6a5aa",
      "range": {
        "startLine": 422,
        "startChar": 12,
        "endLine": 422,
        "endChar": 22
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6e79449_712ab280",
        "filename": "room/integration-tests/kotlintestapp/src/androidTest/java/androidx/room/integration/kotlintestapp/test/SuspendingQueryTest.kt",
        "patchSetId": 14
      },
      "lineNbr": 443,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2019-02-19T22:27:22Z",
      "side": 1,
      "message": "not sure how you ensure the thread is not acquired in this test. \nseems like you want to block the IO thread with busy stuff to ensure that",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c95e3076_ed66bf81",
        "filename": "room/integration-tests/kotlintestapp/src/androidTest/java/androidx/room/integration/kotlintestapp/test/SuspendingQueryTest.kt",
        "patchSetId": 14
      },
      "lineNbr": 443,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2019-02-19T23:26:03Z",
      "side": 1,
      "message": "Its tricky, I have two similar versions of this test this one and runSuspendingTransaction_busyExecutor.\n\nrunSuspendingTransaction_busyExecutor does block the IO thread but requires we delay since I can\u0027t correctly place a latch.\n\nWhere as this relies on yield so that the launch block executes calling into runSuspendingTransaction but then the coroutines supends due to suspendCancellableCoroutine, going back to runBlocking where we call cancelAndJoin.\n\nAt the end of both test, we check if the transaction thread was freed (controlJob.cancel() was invoked)",
      "parentUuid": "b6e79449_712ab280",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c386d71b0a0493e349c4f52ca7729dc73804dbd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}