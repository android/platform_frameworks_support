// Baseline format: 1.0
CallbackMethodName: androidx.activity.OnBackPressedCallback:
    Callback method names must follow the on<Something> style: setEnabled


ForbiddenSuperClass: androidx.activity.ComponentActivity:
    ComponentActivity should not extend `Activity`. Activity subclasses are impossible to compose. Expose a composable API instead.


GetterSetterNames: androidx.activity.OnBackPressedCallback#isEnabled():
    Symmetric method for `setEnabled` must be named `getEnabled`; was `isEnabled`


ProtectedMember: androidx.activity.ComponentActivity#onCreate(android.os.Bundle):
    Protected methods not allowed; must be public: method androidx.activity.ComponentActivity.onCreate(android.os.Bundle)}
ProtectedMember: androidx.activity.ComponentActivity#onSaveInstanceState(android.os.Bundle):
    Protected methods not allowed; must be public: method androidx.activity.ComponentActivity.onSaveInstanceState(android.os.Bundle)}


RegistrationName: androidx.activity.OnBackPressedDispatcher#addCallback(androidx.activity.OnBackPressedCallback):
    Callback methods should be named register/unregister; was addCallback
RegistrationName: androidx.activity.OnBackPressedDispatcher#addCallback(androidx.lifecycle.LifecycleOwner, androidx.activity.OnBackPressedCallback):
    Callback methods should be named register/unregister; was addCallback


SamShouldBeLast: androidx.activity.OnBackPressedDispatcher#addCallback(androidx.lifecycle.LifecycleOwner, androidx.activity.OnBackPressedCallback):
    SAM-compatible parameters (such as parameter 1, "owner", in androidx.activity.OnBackPressedDispatcher.addCallback) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
