/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static androidx.build.dependencies.DependenciesKt.*


plugins {
    id("AndroidXPlugin")
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
}

dependencies {
//<<<<<<< HEAD
    implementation(ARCH_CORE_RUNTIME)
    implementation(ARCH_ROOM_RUNTIME)
    implementation(ARCH_ROOM_RXJAVA)
    implementation(ARCH_LIFECYCLE_EXTENSIONS)

    implementation(project(":paging:paging-common-ktx"))
    implementation(project(":paging:paging-runtime"))
    implementation(project(":paging:paging-rxjava2"))

    annotationProcessor(ARCH_ROOM_COMPILER)



    /*
=======


    implementation(project(":arch:core-runtime"))
    implementation(project(":arch:core-common"))

    implementation(project(":room:room-runtime"))
    implementation(project(":room:room-rxjava2"))

    implementation(project(":lifecycle:lifecycle-extensions"))
    implementation(project(":lifecycle:lifecycle-runtime"))
    implementation(project(":lifecycle:lifecycle-common"))
    implementation(project(":lifecycle:lifecycle-viewmodel-ktx"))
    implementation(project(":lifecycle:lifecycle-viewmodel-fragment"))
    implementation(project(":lifecycle:lifecycle-savedstate-fragment"))

    implementation(project(":paging:paging-common"))
    implementation(project(":paging:paging-runtime-ktx"))
    implementation(project(":paging:paging-rxjava2-ktx"))

    //annotationProcessor project(":room:room-compiler")
    kapt project(":room:room-compiler")
>>>>>>> ListenableFuture experiment
*/

    implementation(MULTIDEX)
    implementation(SUPPORT_RECYCLERVIEW, libs.support_exclude_config)
    implementation(SUPPORT_APPCOMPAT, libs.support_exclude_config)
    implementation(KOTLIN_STDLIB)
    //implementation(GUAVA_ANDROID)
    //implementation("com.google.guava:guava:26.0-android")
}

tasks['check'].dependsOn(tasks['connectedCheck'])

uploadArchives.enabled = false
