{
  "comments": [
    {
      "key": {
        "uuid": "5d89cc91_291a839a",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1092253
      },
      "writtenOn": "2018-10-05T17:42:05Z",
      "side": 1,
      "message": "Aurimas - since we already got this wrong once, is this the right way to do this? Ideally we\u0027d use the ID from the framework, but it\u0027s hidden and thus, I believe, not guaranteed stable from release to release.",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bda4ae_1fe42802",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2018-10-08T17:31:21Z",
      "side": 1,
      "message": "Can we make it public in platform?",
      "parentUuid": "5d89cc91_291a839a",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d26fb68a_d45faca5",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1092253
      },
      "writtenOn": "2018-10-08T17:35:47Z",
      "side": 1,
      "message": "It doesn\u0027t have any developer-serviceable parts. We\u0027re using it in the same way we\u0027re using it here - as an action id that means we want to click on a clickable span. It\u0027s only used internally, so I\u0027d strongly prefer not to make it public.\n\nOnce O is the minimum SDK supported by androidx, we won\u0027t need this code at all since the framework will handle it.",
      "parentUuid": "36bda4ae_1fe42802",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f928cce6_89ba1337",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2018-10-08T17:39:37Z",
      "side": 1,
      "message": "I guess we are stuck with a copy of the constant then?",
      "parentUuid": "d26fb68a_d45faca5",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64d29460_f7a86ac2",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1092253
      },
      "writtenOn": "2018-10-08T17:44:10Z",
      "side": 1,
      "message": "We may be stuck with it, but I wanted to double-check if there was some way to get a non-conflicting ID that is constant across all (future) versions of the support lib.\n\nNote that it isn\u0027t a copy of the framework constant. We don\u0027t think the framework constant is actually constant, since it isn\u0027t public and thus nobody\u0027s guaranteeing its value.",
      "parentUuid": "f928cce6_89ba1337",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba343c43_ecf9049b",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1014545
      },
      "writtenOn": "2018-10-08T17:47:03Z",
      "side": 1,
      "message": "If androidx needs to know about it, it needs to be a public framework API. Hiding the constant in the framework sdk doesn\u0027t make it any less public in reality.",
      "parentUuid": "64d29460_f7a86ac2",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f048a119_97d837e1",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1092253
      },
      "writtenOn": "2018-10-08T17:59:12Z",
      "side": 1,
      "message": "Androidx doesn\u0027t *need* to know about it, and it isn\u0027t actually a constant on the framework side. What we need to guarantee is that the value is the same in an app process as it is in an a11y service process. With the value in the framework, it is. But with the value in androidx, it\u0027s possible for the a11y service to be build against a different androidx version from the app, so the constants could mismatch.\n\nHard-coding to a constant solves this problem. I don\u0027t think we should make a value in the framework into a public constant just to avoid using a hard-coded value.\n\nSome sort of ID system in androidx that handed out constants that won\u0027t conflict but will remain consistent from one androidx version to the next would eliminate the ugliness of having a hard-coded constant, as well as the (remote) risk that we\u0027ll reuse this constant as an ID for another a11y action.",
      "parentUuid": "ba343c43_ecf9049b",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c90a63df_87ab1200",
        "filename": "core/src/main/java/androidx/core/view/AccessibilityDelegateCompat.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2018-10-08T19:01:45Z",
      "side": 1,
      "message": "Libraries don\u0027t own any particular part of the resource ID space, and we certainly can\u0027t go reserving a random block of IDs without strong guarantees from AAPT and the platform.\n\nIf this is for use in a communication channel between processes, it needs to either be defined by the platform or defined in a space that is exclusively used by AccessibilityDelegateCompat. A namespaced key on a Bundle, for example.\n\nIf you want to build a versioning system within that namespaced key, that\u0027s fine. I\u0027d recommend using VersionedParcelable if you have structured data.",
      "parentUuid": "f048a119_97d837e1",
      "range": {
        "startLine": 131,
        "startChar": 55,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "b3545137c34f3cc5fa44f3259013202264a08101",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}