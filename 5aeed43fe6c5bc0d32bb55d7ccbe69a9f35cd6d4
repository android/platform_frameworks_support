{
  "comments": [
    {
      "key": {
        "uuid": "32399454_c678468c",
        "filename": "preference/src/androidTest/java/androidx/preference/tests/DynamicSummaryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2018-09-03T11:36:04Z",
      "side": 1,
      "message": "Thanks for extensive tests!",
      "range": {
        "startLine": 45,
        "startChar": 13,
        "endLine": 45,
        "endChar": 31
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9166924_7fe59df8",
        "filename": "preference/src/main/java/androidx/preference/EditTextPreference.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2018-09-03T11:36:04Z",
      "side": 1,
      "message": "I\u0027m wondering about this. You have said that the default behavior might be not what the majority of developers will use at the end. But here we are introducing new API for setting a boolean for dynamic API summary to be used just for this. Wouldn\u0027t it be more general to actually introduce API for providing a summary formatter and implement some default ones? That would for instance promote composition over inheritance.",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 173,
        "endChar": 9
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dca2d4c_719457c4",
        "filename": "preference/src/main/java/androidx/preference/EditTextPreference.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1343300
      },
      "writtenOn": "2018-09-03T12:16:34Z",
      "side": 1,
      "message": "Yeah, I was considering that. However the problem then is because every type of Preference has a different value type / some have multiple types (e.g MultiSelectListPreference) - we would probably have to pass the entire Preference instead of just a changed value in the interface, and then we would end up with the same problem we have with onPreferenceChange, where there is either a god implementation with many different casting checks, or you implement it on each preference so you would still need to extend so the preference can safely know about itself.",
      "parentUuid": "e9166924_7fe59df8",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 173,
        "endChar": 9
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09cdc160_f4e66f0d",
        "filename": "preference/src/main/java/androidx/preference/EditTextPreference.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2018-09-03T12:19:49Z",
      "side": 1,
      "message": "What about this one?\n\nPreferenceFormatter\u003cT : Preference\u003e {\n\n  String format(T preference) {\n\n  }\n}\n\nEditTextFormatter : PreferenceFormatter\u003cEditText\u003e {\n\n  String format(EditTextPreference preference) {\n    .. do my job\n  }\n}\n\nQuestion is how XML will work here.",
      "parentUuid": "1dca2d4c_719457c4",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 173,
        "endChar": 9
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2916f922_218e853f",
        "filename": "preference/src/main/java/androidx/preference/EditTextPreference.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1343300
      },
      "writtenOn": "2018-09-03T12:29:10Z",
      "side": 1,
      "message": "I meant more as in if a developer wants to implement this themselves, they implement this, and then in onCreatePreferences they would need to do something like:\n\nEditTextPreference et \u003d ((EditTextPreference) findPreference(\"key\"));\net.setFormatter(...)\n\nListPreference list \u003d ((ListPreference) findPreference(\"key2\"));\net.setFormatter(...)\n\n....\n\nEditTextFormatter : PreferenceFormatter\u003cEditText\u003e {\n\n  String format(EditTextPreference preference) {\n    .. do my job\n  }\n}\n\nListFormatter : PreferenceFormatter\u003cListPreference\u003e {\n\n  String format(ListPreference preference) {\n    .. do my job\n  }\n}\n\n\nAnd that\u0027s a ton of boilerplate - doesn\u0027t seem to be much of an improvement over using onPreferenceChange.\n\nAnd the other problem is that if we configure this in onCreatePreferences, this would only work if the Preference is created dynamically, instead of just findPreference(...) - because after we set the preferences from XML, they get inflated and attached, so we would miss the hook to set the initial summary. So for that to work we would also probably have to call format(...) when the interface is set.",
      "parentUuid": "09cdc160_f4e66f0d",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 173,
        "endChar": 9
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe88e694_9e1cdcee",
        "filename": "preference/src/main/java/androidx/preference/EditTextPreference.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2018-09-03T12:32:29Z",
      "side": 1,
      "message": "Sure but that is maybe still better than extending every preference to provided that functionality? \n\nAlso would be good to investigate if this could be set via XML. Because then it is super easy.",
      "parentUuid": "2916f922_218e853f",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 173,
        "endChar": 9
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "518c325c_47538341",
        "filename": "preference/src/main/java/androidx/preference/Preference.java",
        "patchSetId": 3
      },
      "lineNbr": 2065,
      "author": {
        "id": 1238792
      },
      "writtenOn": "2018-09-03T11:36:04Z",
      "side": 1,
      "message": "We usually use updateD format in the method names.",
      "range": {
        "startLine": 2065,
        "startChar": 16,
        "endLine": 2065,
        "endChar": 31
      },
      "revId": "5aeed43fe6c5bc0d32bb55d7ccbe69a9f35cd6d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}