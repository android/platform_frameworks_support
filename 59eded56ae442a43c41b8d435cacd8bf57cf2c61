{
  "comments": [
    {
      "key": {
        "uuid": "0139dcb3_75e400ad",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T00:15:47Z",
      "side": 1,
      "message": "Should you remove too?",
      "range": {
        "startLine": 153,
        "startChar": 18,
        "endLine": 153,
        "endChar": 43
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "402f23b9_5e2e609c",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-26T14:35:03Z",
      "side": 1,
      "message": "There is no harm in keeping it around for the duration of the test. It\u0027s destroyed at the end of the test. Saves us thinking / maintaining a few lines of code. I\u0027m sticking to that convention in tests in other places.",
      "parentUuid": "0139dcb3_75e400ad",
      "range": {
        "startLine": 153,
        "startChar": 18,
        "endLine": 153,
        "endChar": 43
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3ec6387_bb6fe216",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T19:40:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "402f23b9_5e2e609c",
      "range": {
        "startLine": 153,
        "startChar": 18,
        "endLine": 153,
        "endChar": 43
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb644b_4a353613",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T00:15:47Z",
      "side": 1,
      "message": "This stuff felt really over-engineered to me at first.  But then I think I understand why at least some of it is necessary.  Can fragmentAdapterProvider and viewAdapterProvider just be functions instead?\n\nMy discomfort here may partially be the move to a much more functional perspective.  Ultimately, if all of this is necessary (or you think is better) go ahead and leave it.",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 261,
        "endChar": 86
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cfb5a40_c67fd757",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-26T14:35:03Z",
      "side": 1,
      "message": "Initially the problem was simple: create and adapter for a set of items. Then came the issue of needing to have access to a FragmentManager for FragmentStateAdapter, which is only available with the Activity, which isn\u0027t created yet.\n\nCouple of points:\n\n1) I\u0027m not sure why in Kotlin referring to a function defined by val is different to referring to one defined by val. To me they are the same thing, and I don\u0027t recall such distinction in F#.\n\nNotice the :: in viewAdapterProvider22 vs viewAdapterProvider11\n\nval viewAdapterProvider1: AdapterProviderForItems \u003d { items -\u003e { ViewAdapter(items) } }\nval viewAdapterProvider11: AdapterProviderForItems \u003d viewAdapterProvider1\n\nfun viewAdapterProvider2(items : List\u003cString\u003e) : AdapterProvider \u003d { _: TestActivity -\u003e ViewAdapter(items) }\nval viewAdapterProvider22: AdapterProviderForItems \u003d ::viewAdapterProvider2\n\n2) I could create an AdapterProviderFactory class taking items and returning an AdapterProvider, but I\u0027m not sure that\u0027d be any easier to follow. That\u0027s why I went with a functional approach. Happy to discuss though.",
      "parentUuid": "11fb644b_4a353613",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 261,
        "endChar": 86
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a49cbe4_4a27a923",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/BaseTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T19:40:27Z",
      "side": 1,
      "message": "Yeah, I think Kotlin wants the its user\u0027s mental model to be that functions are first class citizens, and it bridges the gap like other (functional languages do) between being able to reference methods (functions that can access the scope of a class?) and those that are functions (functions that can\u0027t?).\n\nI tried to fiddle around with things here and couldn\u0027t really land on anything better.  Don\u0027t need to change anything now, but, the type of \"it\" in fragmentAdapterProvider is not immediately obvious even though it is implicitly defined.  That is one area to be careful and you could opt to tell the reader what type it is.",
      "parentUuid": "5cfb5a40_c67fd757",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 261,
        "endChar": 86
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "511782b7_b41e6c4f",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T00:15:47Z",
      "side": 1,
      "message": "This is confusing to read because setAdapterSync sounds like a method, while viewAdapterProvider sounds like you are instantiating a new class (not calling a lambda).  Also, I see elsewhere you just do setAdapterSync { ViewAdapter(stringSequence(4) } (also commented).  I assume the difference is accidental?",
      "range": {
        "startLine": 85,
        "startChar": 27,
        "endLine": 85,
        "endChar": 46
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95e183a0_bb351326",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-26T14:35:03Z",
      "side": 1,
      "message": "That\u0027s actually what I wanted to convey: viewAdapterProvider is instantiating a new \u0027class\u0027 of type AdapterProvider. Functions being first class citizens here, like any other class object.",
      "parentUuid": "511782b7_b41e6c4f",
      "range": {
        "startLine": 85,
        "startChar": 27,
        "endLine": 85,
        "endChar": 46
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a2242d4_ea83f66d",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T19:40:27Z",
      "side": 1,
      "message": "I understand how it works, and IntelliJ/AS highlights the words to make it clear that these are \u0027things\u0027, but here in code review it looks confusing.  Just like this is funny: add(number(2), Number(2)), where \u0027Number\u0027 is a constructor, and \u0027number\u0027 is a property.\n\nMaybe viewAdapterProvider.invoke would clear it up.\n\nBut ultimately, we can consider this a nit and if you want to forge ahead, go for it.",
      "parentUuid": "95e183a0_bb351326",
      "range": {
        "startLine": 85,
        "startChar": 27,
        "endLine": 85,
        "endChar": 46
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "368594b1_5a64d42c",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageChangeListenerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-27T14:46:59Z",
      "side": 1,
      "message": "Got it, ::methodName means it has access to its instance fields. I don\u0027t see your point on the confusion part though, and I\u0027m not sure what you\u0027d like that to look like instead.",
      "parentUuid": "9a2242d4_ea83f66d",
      "range": {
        "startLine": 85,
        "startChar": 27,
        "endLine": 85,
        "endChar": 46
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3640d83_f75819ee",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageTransformerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T00:15:47Z",
      "side": 1,
      "message": "Here you don\u0027t use viewAdapterProvider, why the difference from other places?",
      "range": {
        "startLine": 118,
        "startChar": 26,
        "endLine": 118,
        "endChar": 63
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "227c7f7b_d7056837",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageTransformerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-26T14:35:03Z",
      "side": 1,
      "message": "No reason, both work. Changed for viewAdapterProvider for consistency.",
      "parentUuid": "f3640d83_f75819ee",
      "range": {
        "startLine": 118,
        "startChar": 26,
        "endLine": 118,
        "endChar": 63
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94801577_1a24f807",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/PageTransformerTest.kt",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T19:40:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "227c7f7b_d7056837",
      "range": {
        "startLine": 118,
        "startChar": 26,
        "endLine": 118,
        "endChar": 63
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72416a57_e5ff07e1",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/swipe/PageManipulator.kt",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T00:15:47Z",
      "side": 1,
      "message": "This class strikes me as a bit odd.  It inflates a layout into a container, finds a view in an activity, and sets and gets text.\n\nAlso it seems like the create method is only used in one place?",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4970823b_e44b932a",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/swipe/PageManipulator.kt",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-26T14:35:03Z",
      "side": 1,
      "message": "Could rename it to PageView class despite not inheriting from View. Originally created it to avoid code duplication in FragmentAdapter / ViewAdapter / SwipeTest\n\nIt creates a Page, and given an Activity can find, modify, and read the text on the Page.\nCreate is used 2x -- once in FragmentAdapter and once in ViewAdapter.",
      "parentUuid": "72416a57_e5ff07e1",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "055b52d3_224ea437",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/swipe/PageManipulator.kt",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1344416
      },
      "writtenOn": "2018-09-26T19:40:27Z",
      "side": 1,
      "message": "Ah. What confused me yesterday is that this is a non-static class, so my gut told me it had state, and I didn\u0027t see how these methods were related around some kind of shared state.  This is actually a util class, and should be static (just an Object declaration) if you truly do wan\u0027t to bind these methods together into a package.  I think canonical Kotlin would suggest that it should just be a file with 4 methods in it.  Right?",
      "parentUuid": "4970823b_e44b932a",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef984a5_c578d530",
        "filename": "viewpager2/src/androidTest/java/androidx/viewpager2/widget/swipe/PageManipulator.kt",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1344408
      },
      "writtenOn": "2018-09-27T14:46:59Z",
      "side": 1,
      "message": "I think a file with 4 methods in it would make those methods global and hardly discoverable.\nI don\u0027t see anything wrong in a stateless class. At the same time, static util classes are often considered evil.\n\nConverted to a more OO approach as middle ground.",
      "parentUuid": "055b52d3_224ea437",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "59eded56ae442a43c41b8d435cacd8bf57cf2c61",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}