{
  "comments": [
    {
      "key": {
        "uuid": "3949e4e9_d238ff20",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-03T18:42:30Z",
      "side": 1,
      "message": "I\u0027m not sure what the filepath for this script should be (the current name is kind of long); if anyone has suggestions, that\u0027d be great)\n\nI\u0027m also not sure what the name of this script should be, because it only does a first pass at diagnosing the build failure: classifying it into one of a few common problems. If for example, the build is failing at HEAD, it doesn\u0027t then try to analyze the error message and give some suggestions, or search through the git history either.\n\nI was thinking about calling this classify-build-failure.sh but that seems slightly too narrow in scope given that this script also can pinpoint which file in the out/ dir is triggering an incremental build failure.",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f78a0d_8161a6a2",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-04-03T20:50:39Z",
      "side": 1,
      "message": "This looks like it should be $to",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "794a37cc_0c68b8ed",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-03T21:26:08Z",
      "side": 1,
      "message": "Good point",
      "parentUuid": "38f78a0d_8161a6a2",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d2fc9e2_60752d0e",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-04-03T20:50:39Z",
      "side": 1,
      "message": "These seem slightly redundant with the same checks in diff-filterer.py.  These seem more helpful, but maybe worth disabling the checks in diff-filterer.py via a flag?",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a42f809_ef67946f",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-03T21:26:08Z",
      "side": 1,
      "message": "Good point.\n\nI\u0027m hoping that we can count on diff-filterer.py\u0027s sanity checks to be fast, since $tempDir/prev and $tempDir/clean should contain all of the generated files from having just run Gradle (and so the corresponding Gradle builds should be essentially no-ops).\n\nTechnically, it\u0027s possible that the second clean build in a row might not pass because the backup on line 141 is a backup of the result of the first clean build, whereas the build that passed actually started with an empty state on line 135.\n\nWe could explicitly check that in this script too and then promise diff-filterer.py via a flag that the given states do in fact pass or fail like they\u0027re supposed to.\n\nAlthough I guess that then if the build does happen to be nondeterministic (which is more likely to affect diff-filterer.py because it runs more builds), then if diff-filterer.py detects a problem, it might not detect that the build is nondeterministic and might instead just print that the caller was wrong to have passed the flag to disable the checks, which seems to me that it could be confusing.\n\nThoughts?",
      "parentUuid": "7d2fc9e2_60752d0e",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f60bb44d_abfbe2c6",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-04-04T00:53:37Z",
      "side": 1,
      "message": "I\u0027m not sure there\u0027s a lot we can do to produce reasonable results in the face of nondeterministic behavior.  It\u0027ll always be possible for it to be nondeterministic in just the wrong way.  So on that basis, I wouldn\u0027t worry too much about the non-deterministic case (unless we wanted to add deflake options, but that sounds like a v2...).  In any case, I would expect that diff-filterer.py wouldn\u0027t be able to detect that you were wrong to pass the flag to disable the checks, since in order to determine that, it would have to run the checks that you disabled, right?",
      "parentUuid": "4a42f809_ef67946f",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8dd77f1_123fc4af",
        "filename": "development/diagnose-build-failure/diagnose-build-failure.sh",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-03T18:42:30Z",
      "side": 1,
      "message": "There\u0027s kind of a lot of output generated by this script (diagnose-build-failure.sh) and also by diff-filterer.py , particularly because they each run Gradle a bunch of times , making it sort of inconvenient to detect where various messages are coming from.\n\nAlthough I guess I\u0027ll leave this for now unless anyone has suggestions/opinions",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0d716e3_e4a16f09",
        "filename": "development/diagnose-build-failure/impl/restore-state.sh",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-04-03T20:50:39Z",
      "side": 1,
      "message": "This goes two levels up - wouldn\u0027t that just get to development/ rather than frameworks/support?",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7731fcba_53e5b2a2",
        "filename": "development/diagnose-build-failure/impl/restore-state.sh",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-03T21:26:08Z",
      "side": 1,
      "message": "Oops, thanks, I must\u0027ve forgotten to update that after moving this script",
      "parentUuid": "c0d716e3_e4a16f09",
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d3b7a1a_c4ac9edb",
        "filename": "development/diagnose-build-failure/impl/restore-state.sh",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1137668
      },
      "writtenOn": "2019-04-03T18:42:30Z",
      "side": 1,
      "message": "I\u0027m not sure whether always restoring up $GRADLE_USER_HOME is worth it or whether in practice it will be too large to be relevant.\n\nMaybe we should try first restoring everything other than $GRADLE_USER_HOME and if that doesn\u0027t reproduce the problem then also restore GRADLE_USER_HOME\n\nI guess I\u0027ll leave this like it is unless anyone has suggestions and/or opinions",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "4af3a612e985c7030a8e0c8b8903199fc180bc88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}