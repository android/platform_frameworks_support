{
  "comments": [
    {
      "key": {
        "uuid": "6b45ca68_7dd1bd84",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/FeatureNotAvailableTestAppTest.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "I\u0027m not sure this is actually a good practice. This suggests that activities should abort immediately if the expected feature is unavailable, but we would prefer to suggest real apps to fallback gracefully",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 39,
        "endChar": 54
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3ef51b6_17969f6c",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/FeatureNotAvailableTestAppTest.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "I\u0027ve added more comments to clarify the appropriate usage of this test.  It is only intended for those apps that use the api not available message as the fallback.",
      "parentUuid": "6b45ca68_7dd1bd84",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 39,
        "endChar": 54
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30d8921c_c5ad169c",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/FeatureNotAvailableTestAppTest.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "Can we turn this into a map instead?",
      "range": {
        "startLine": 41,
        "startChar": 29,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f401d84_f52a8b8c",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/FeatureNotAvailableTestAppTest.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30d8921c_c5ad169c",
      "range": {
        "startLine": 41,
        "startChar": 29,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c37b16a_5c3b0b3a",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "I\u0027m concerned this is racy, since activities dynamically populate MenuListViews. Do we have any guarantees about the order of Activity#onCreate vs. the espresso tests?",
      "range": {
        "startLine": 82,
        "startChar": 34,
        "endLine": 82,
        "endChar": 37
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b9f8744_f9a9040e",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "ActivityTestRule takes care of launching the activity and waiting for onCreate to be complete. \nSee https://cs.corp.google.com/android/frameworks/base/core/java/android/app/Instrumentation.java?q\u003dstartActivitySync\u0026sq\u003dpackage:android\u0026g\u003d0\u0026l\u003d480",
      "parentUuid": "6c37b16a_5c3b0b3a",
      "range": {
        "startLine": 82,
        "startChar": 34,
        "endLine": 82,
        "endChar": 37
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6894fb48_dfe8379a",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T23:14:13Z",
      "side": 1,
      "message": "Can you add a note that the MenuList must be populated during Activity#onCreate in order to be compatible?\n\nSafeBrowsingActivity is an example where this is *not* compatible: http://cs/aosp-androidx/webkit/integration-tests/testapp/src/main/java/com/example/androidx/webkit/SafeBrowsingActivity.java?l\u003d46\u0026rcl\u003dc9180cce06bc6461ddbf3e8f66ffd35dfd5ffedd",
      "parentUuid": "2b9f8744_f9a9040e",
      "range": {
        "startLine": 82,
        "startChar": 34,
        "endLine": 82,
        "endChar": 37
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7d18bb7_03aee0fb",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "This is still not lgtm. This is racy if the app dynamically calls setText(). This is what I talked about on the design doc.\n\nYou should only look up string methods by viewId.",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 33
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97286fb0_58816663",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "Espresso\u0027s sync behavior waits for UI work to complete before executing actions: https://developer.android.com/training/testing/espresso/index.html#sync\n\nEspresso is designed for UI verification, where dynamic changes are expected.",
      "parentUuid": "b7d18bb7_03aee0fb",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 33
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2729ed93_61195387",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T23:14:13Z",
      "side": 1,
      "message": "I\u0027m not sure I believe that\u0027s enough. Does this know about every Thread/Handler/Looper? What about tasks which WebView is running on native threads that don\u0027t have a Looper (but later post to threads which do have a Looper)?\n\nI don\u0027t think it\u0027s generally possible to have a robust solution here, and I don\u0027t understand why this method is necessary. Devs should just use clickViewWithId(), which isn\u0027t as likely to be racy.",
      "parentUuid": "97286fb0_58816663",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 33
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a490eef_98917c29",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-14T02:25:54Z",
      "side": 1,
      "message": "By default, Espresso is only aware of the UI message queue.  But users can extend it for other operations not on the UI thread, see https://developer.android.com/training/testing/espresso/idling-resource.  Using a resource id does not guarantee that the view with the resource id is not being dynamically added to the view hierarchy.",
      "parentUuid": "2729ed93_61195387",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 33
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "833aa395_81afbf27",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "@IdRes, here and below",
      "range": {
        "startLine": 101,
        "startChar": 32,
        "endLine": 101,
        "endChar": 35
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f5c2d46_b8a56fec",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "833aa395_81afbf27",
      "range": {
        "startLine": 101,
        "startChar": 32,
        "endLine": 101,
        "endChar": 35
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4ebf2b_65349e9f",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "nit: \"assertViewHasText\" would be better",
      "range": {
        "startLine": 112,
        "startChar": 16,
        "endLine": 112,
        "endChar": 22
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5861029f_2532d86b",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "@StringRes",
      "range": {
        "startLine": 112,
        "startChar": 46,
        "endLine": 112,
        "endChar": 49
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f658ccf_7d020b5d",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5861029f_2532d86b",
      "range": {
        "startLine": 112,
        "startChar": 46,
        "endLine": 112,
        "endChar": 49
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8dde510_75dbc80f",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/IntegrationAppTestRule.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d4ebf2b_65349e9f",
      "range": {
        "startLine": 112,
        "startChar": 16,
        "endLine": 112,
        "endChar": 22
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "047e4a4b_5b806676",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/ProxyOverrideTestAppTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1141809
      },
      "writtenOn": "2019-06-13T00:51:43Z",
      "side": 1,
      "message": "Could you please split the file rename into a separate CL?\n\nAndroid supports dependent cls: https://sites.google.com/a/google.com/android/development/repo-gerrit-git-workflow#Working_in_the_same_package_Depe. The workflow is actually even simpler than this doc describes. You may simply make a second git commit on the *same* branch, and `repo upload` will refresh both CLs.",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 37
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76dcb935_3aea3371",
        "filename": "webkit/integration-tests/testapp/src/androidTest/java/com/example/androidx/webkit/ProxyOverrideTestAppTest.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1501025
      },
      "writtenOn": "2019-06-13T23:04:24Z",
      "side": 1,
      "message": "Cool, will do.",
      "parentUuid": "047e4a4b_5b806676",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 37
      },
      "revId": "c15a0c1845161f0189c89da77094e739f5f82525",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}