{
  "comments": [
    {
      "key": {
        "uuid": "92af95ee_94826a95",
        "filename": "room/compiler/src/main/kotlin/androidx/room/ext/KotlinMetadataProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-11-27T01:05:39Z",
      "side": 1,
      "message": "should we update this library or is it still compatible w/ 1.3 coroutines ?",
      "range": {
        "startLine": 21,
        "startChar": 42,
        "endLine": 21,
        "endChar": 51
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2137261c_99d8e472",
        "filename": "room/compiler/src/main/kotlin/androidx/room/ext/KotlinMetadataProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:25:05Z",
      "side": 1,
      "message": "There is no new update on eugenio\u0027s library. It seems compatible with 1.3.\n\nMaybe one day we might want to update to JetBrain\u0027s equivalent library: https://github.com/JetBrains/kotlin/tree/master/libraries/kotlinx-metadata/jvm",
      "parentUuid": "92af95ee_94826a95",
      "range": {
        "startLine": 21,
        "startChar": 42,
        "endLine": 21,
        "endChar": 51
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90be1dd3_781ebe12",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/QueryMethodProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-11-27T01:05:39Z",
      "side": 1,
      "message": "i think we have returnType.typeName() ? (since you are updating it :) )",
      "range": {
        "startLine": 98,
        "startChar": 29,
        "endLine": 98,
        "endChar": 53
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d5d2c47_23d9fc3e",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/QueryMethodProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90be1dd3_781ebe12",
      "range": {
        "startLine": 98,
        "startChar": 29,
        "endLine": 98,
        "endChar": 53
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92fbe941_8121b690",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/QueryMethodProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-11-27T01:05:39Z",
      "side": 1,
      "message": "hmm might be cleaner to check for continuation object.\nto avoid extra checks, we can create a local parameter:\n\nval queryParams \u003d if (isSuspendFunction) {\n   executableEleemnt.parameters.filter { \u003ccheck is assignable continuation\u003e }\n} else {\n   executableEleemnt.parameters\n}",
      "range": {
        "startLine": 142,
        "startChar": 13,
        "endLine": 143,
        "endChar": 83
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2caf5cf_3b56601c",
        "filename": "room/compiler/src/main/kotlin/androidx/room/processor/QueryMethodProcessor.kt",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "Moved to delegate, still pending checking continuation param instead of index.",
      "parentUuid": "92fbe941_8121b690",
      "range": {
        "startLine": 142,
        "startChar": 13,
        "endLine": 143,
        "endChar": 83
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53f58fe2_5162a9b8",
        "filename": "room/compiler/src/main/kotlin/androidx/room/solver/query/result/CoroutineResultBinder.kt",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-11-27T01:05:39Z",
      "side": 1,
      "message": "why do we care about this parameter name ?\nwe are the ones declaring the method so we can name it whatever we want?\n\nalso for other ones, we do have a mechanism to check related dependencies are in place. we need the same thing for corooutines as well.\n\ne.g. https://cs.corp.google.com/aosp-androidx/room/compiler/src/main/kotlin/androidx/room/solver/binderprovider/RxQueryResultBinderProvider.kt?q\u003dRxQueryResultBinderProvider\u0026sq\u003dpackage:android\u0026g\u003d0\u0026l\u003d67",
      "range": {
        "startLine": 38,
        "startChar": 16,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7779f91_5e5b11c8",
        "filename": "room/compiler/src/main/kotlin/androidx/room/solver/query/result/CoroutineResultBinder.kt",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "Added the check for the artifact.\n\nAs for the parameter name, we don\u0027t quite declare it, we use MethodSpec.overriding() which resolved type params, copies param names, visibility, etc, so we end up using the same name kapt used for the continuation param. I can probably grab the parameter and rename, so I\u0027ll keep it comment unresolved while I figure that out.",
      "parentUuid": "53f58fe2_5162a9b8",
      "range": {
        "startLine": 38,
        "startChar": 16,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0032fe79_bada5e12",
        "filename": "room/compiler/src/main/kotlin/androidx/room/solver/query/result/CoroutineResultBinder.kt",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-11-27T13:38:19Z",
      "side": 1,
      "message": "ಠ_ಠ\n\nThat DaoWriter.dbField thing spreads like cancer. You don\u0027t need it here (you have dbField). But you should remove completely DaoWriter.dbField in separate CL. Reason why we have it is RelationCollectorWriter, so to remove it you need to be creative. Possible ways: introduce DaoCodeGentScope or DaoWriter(propably not best idea)",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 63,
        "endChar": 33
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c670a41_39cf61c4",
        "filename": "room/compiler/src/main/kotlin/androidx/room/solver/query/result/CoroutineResultBinder.kt",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "Ack! Will tackle in a different CL, created issue: b/120104925",
      "parentUuid": "0032fe79_bada5e12",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 63,
        "endChar": 33
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c85e4b3_1d75f7ae",
        "filename": "room/coroutine/src/main/java/androidx/room/CoroutineRoom.kt",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-27T00:46:54Z",
      "side": 1,
      "message": "This is probably not necessary since the executor of a DB will not change once initialized (builder and configurator used), but still wanted to get your opinion on it.",
      "range": {
        "startLine": 38,
        "startChar": 12,
        "endLine": 38,
        "endChar": 42
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b7401a_a18052de",
        "filename": "room/coroutine/src/main/java/androidx/room/CoroutineRoom.kt",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "No loner relevant, resolving.",
      "parentUuid": "2c85e4b3_1d75f7ae",
      "range": {
        "startLine": 38,
        "startChar": 12,
        "endLine": 38,
        "endChar": 42
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c98b40f_2ee6e430",
        "filename": "room/coroutine/src/main/java/androidx/room/CoroutineRoom.kt",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-11-27T01:05:39Z",
      "side": 1,
      "message": "static variable to cache the executor ?\nseems like a bad idea as this is not per Room isntance but instaead for the whole app. \n\ninstead we should make RoomDatabase provide APIs to keep these objects. can be package private fields in RoomDatabsae if we cant find a better way .",
      "range": {
        "startLine": 43,
        "startChar": 7,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9c9babb_befda92d",
        "filename": "room/coroutine/src/main/java/androidx/room/CoroutineRoom.kt",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "Reverted these changes, will tackle in a follow-up CL since we have the same problem for the Rx Scheduler (i.e. doesn\u0027t get cache either).",
      "parentUuid": "9c98b40f_2ee6e430",
      "range": {
        "startLine": 43,
        "startChar": 7,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccb5cf00_93e2c7cf",
        "filename": "room/integration-tests/kotlintestapp/src/androidTest/java/androidx/room/integration/kotlintestapp/dao/BooksDao.kt",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1060337
      },
      "writtenOn": "2018-11-27T01:05:39Z",
      "side": 1,
      "message": "need a lot more testing for these.\n\n@RawQuery comes to mind first. \nwe should also have a deciison on what to do if someone returns a LiveData, Single etc. it does not even make sense but maybe there is areason to allow them ?\n\nwe also need a test for a query with @Transaction (or a couple :) )",
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cab64ab_256c3198",
        "filename": "room/integration-tests/kotlintestapp/src/androidTest/java/androidx/room/integration/kotlintestapp/dao/BooksDao.kt",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1258207
      },
      "writtenOn": "2018-11-28T01:35:43Z",
      "side": 1,
      "message": "Added a few more tests, but still want to add more, leaving comment unresolved meanwhile.",
      "parentUuid": "ccb5cf00_93e2c7cf",
      "revId": "6060bd4bfe3cba65b80c65f47fd6b807f0f34636",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}