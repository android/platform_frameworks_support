{
  "comments": [
    {
      "key": {
        "uuid": "9ae5c410_31c34b4b",
        "filename": "work/workmanager-test/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "per yesterday\u0027s discussion that should be \"testing\":\nIf you have an artifact that is intended to be used while testing usages of\nyour library, the `artifactId` should end with `-testing`\n(e.g. `androidx.room:room-testing`). (c) Yigit",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c36f23c_e840ae5e",
        "filename": "work/workmanager-test/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T16:53:36Z",
      "side": 1,
      "message": "Yup, I\u0027ll do this in a separate CL and we can rebase and re-generate current.txt in this CL.",
      "parentUuid": "9ae5c410_31c34b4b",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04fd4ef5_2b05c9a2",
        "filename": "work/workmanager-test/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T17:32:01Z",
      "side": 1,
      "message": "Resolving.",
      "parentUuid": "1c36f23c_e840ae5e",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c485ea7_1e63b97f",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "Configuration is very generic, for example it will clash with android.content.res.Configuration inside of android. I would recommend to rename it to something like WorkManagerConfiguration",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "666d9881_af6f50d5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T16:53:36Z",
      "side": 1,
      "message": "I disagree; we would get into this with nearly every class then.  This is properly scoped; I don\u0027t think anyone will be using res.Configuration and work.Configuration in the same section of code.",
      "parentUuid": "4c485ea7_1e63b97f",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c93749_2067536b",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T17:27:22Z",
      "side": 1,
      "message": "but people will see in their code completion both classes, just because \"res\" one is in SDK and is always there. Other instances that we have are \"AppBarConfiguration/DatabaseConfiguration\". \nBut if you feel strongly about it, you can test in on API council and see.",
      "parentUuid": "666d9881_af6f50d5",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1902104e_48051eb3",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T17:37:12Z",
      "side": 1,
      "message": "I\u0027ll defer to API council\u0027s feedback if they feel strongly about it.  I think \"WorkManagerConfiguration\" is really long and repetitive.  I see your point, but I think there are obvious counter-examples, even within arch: https://developer.android.com/reference/android/arch/persistence/db/SupportSQLiteOpenHelper.Configuration",
      "parentUuid": "01c93749_2067536b",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e735eb62_64ca25b5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "It is not very clear from documentation  how I as a library user may want to choose this number.\n\n+ take a look at @IntRange annotation to specify valid range",
      "range": {
        "startLine": 28,
        "startChar": 54,
        "endLine": 28,
        "endChar": 74
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3e45dca_c028d180",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1344433
      },
      "writtenOn": "2018-10-12T18:29:08Z",
      "side": 1,
      "message": "I added the @IntRange to the getMaxSchedulerLimit() API.",
      "parentUuid": "e735eb62_64ca25b5",
      "range": {
        "startLine": 28,
        "startChar": 54,
        "endLine": 28,
        "endChar": 74
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee0cf812_88ec76c8",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "does it need to be mutable object?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 57
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0346f4b7_fbfe3acf",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1344433
      },
      "writtenOn": "2018-10-12T18:29:08Z",
      "side": 1,
      "message": "Marked them @hide.",
      "parentUuid": "ee0cf812_88ec76c8",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 57
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac7523e0_ac675b2a",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "Why do you need to expose your type here, can we use simply Set\u003cTrigger\u003e instead of that?\n\nExposing your own iterable is a bit painful. For example,\n1. in your case I can remove from underlying set because you expose hashSet.iterator(), however there is no such function in the API of ContentUriTriggers\n2.  you have to clearly define behavior for adding things during iterations (in your case it will be ConcurrentModificationException)",
      "range": {
        "startLine": 62,
        "startChar": 1,
        "endLine": 62,
        "endChar": 71
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "091fae2b_3a0a8b55",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1344433
      },
      "writtenOn": "2018-10-12T18:29:08Z",
      "side": 1,
      "message": "ContentUriTriggers no longer implements Iterable.\nAlso the `getTriggers()` method is now marked with a @hide.",
      "parentUuid": "ac7523e0_ac675b2a",
      "range": {
        "startLine": 62,
        "startChar": 1,
        "endLine": 62,
        "endChar": 71
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a10228b_5aaafe58",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "lately in api council we suggest to keep api consistent in terms of using collections / arrays",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 68
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72c13822_a2814a34",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "beginWith / beginUniqueWork seems inconsistent, it should be smth like: \n1 beginWith \u0026 beginWithUnique\n2 beginWork \u0026 beginUniqueWork\n3 begin \u0026 beginUnique \netc",
      "range": {
        "startLine": 232,
        "startChar": 58,
        "endLine": 232,
        "endChar": 67
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba31dccf_cdb6b0b5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 239,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "It is weird that you can\u0027t enqueueUniqueWork that receives OneTimeWorkRequest, but you can beginUniqueWork(...).enqueue().   \n\nIn general here is a lot of variations that let you schedule a work, it would be nice to somehow minimize a number of ways to do that. For example one ways of would be:\nlet\u0027s say you should always use enqueue + PeriodicRequest and begin + OneTimeWorkRequest.",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 239,
        "endChar": 215
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "127ee4bb_d357feb0",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "just an idea, don\u0027t you want to introduce StatusQuery class. It would be smth like:\ninterface WorkManagerQuery\u003cT\u003e {\n  fun future(): ListenableFuture\u003cT\u003e\n  fun liveData(): LiveData\u003cT\u003e\n}\n\nso you wouldn\u0027t need to duplicate functions for LiveData / ListenableFuture. As a nice feature, if anyone (or maybe even you) would like to use rx / kotlin channels or whatever, they can add extension method on this interface and not duplicate all functions as well.",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 152
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c717c757_ac2f70f5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T18:20:46Z",
      "side": 1,
      "message": "Interesting idea; we\u0027ll have to think a little bit more about this.  Considering our libraries are Java-first, extension methods aren\u0027t really possible for some o these cases.",
      "parentUuid": "127ee4bb_d357feb0",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 152
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0230b6_bebcc0d5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 281,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "can it be final?",
      "range": {
        "startLine": 281,
        "startChar": 2,
        "endLine": 281,
        "endChar": 53
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3ac68b7_eb2ae07d",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 281,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T17:32:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc0230b6_bebcc0d5",
      "range": {
        "startLine": 281,
        "startChar": 2,
        "endLine": 281,
        "endChar": 53
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "089ea46c_c5f766c8",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 283,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "can it be final?",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 57
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75eee99d_a16bae6d",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 283,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T17:32:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "089ea46c_c5f766c8",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 57
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b15dd598_5ca09988",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "it is a bit weird, I\u0027d better expose DefaultFactory class",
      "range": {
        "startLine": 289,
        "startChar": 3,
        "endLine": 289,
        "endChar": 162
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71bd91b7_1eabc4d0",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T17:32:01Z",
      "side": 1,
      "message": "This wasn\u0027t meant to be exposed.  I\u0027ll hide it.",
      "parentUuid": "b15dd598_5ca09988",
      "range": {
        "startLine": 289,
        "startChar": 3,
        "endLine": 289,
        "endChar": 162
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c33fe6b8_24980dbe",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "hmmm it is duplicated in ListenableWorker, don\u0027t you want to do expose them as ListenableWorker.getParams()",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 300,
        "endChar": 3
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4782e0a_9ef73e8e",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2018-10-12T18:20:46Z",
      "side": 1,
      "message": "Yeah, I\u0027m of two minds about this.  We can do that, but I feel like some of those methods are pretty nice.  In particular, a top-level listenableWorker.getId() is nice.  listenableWorker.getInputData() is a nice analog to worker.setOutputData(Data), for example.  I\u0027m torn on this one.",
      "parentUuid": "c33fe6b8_24980dbe",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 300,
        "endChar": 3
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}