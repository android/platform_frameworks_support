{
  "comments": [
    {
      "key": {
        "uuid": "9ae5c410_31c34b4b",
        "filename": "work/workmanager-test/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "per yesterday\u0027s discussion that should be \"testing\":\nIf you have an artifact that is intended to be used while testing usages of\nyour library, the `artifactId` should end with `-testing`\n(e.g. `androidx.room:room-testing`). (c) Yigit",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c485ea7_1e63b97f",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "Configuration is very generic, for example it will clash with android.content.res.Configuration inside of android. I would recommend to rename it to something like WorkManagerConfiguration",
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e735eb62_64ca25b5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "It is not very clear from documentation  how I as a library user may want to choose this number.\n\n+ take a look at @IntRange annotation to specify valid range",
      "range": {
        "startLine": 28,
        "startChar": 54,
        "endLine": 28,
        "endChar": 74
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee0cf812_88ec76c8",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "does it need to be mutable object?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 57
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac7523e0_ac675b2a",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "Why do you need to expose your type here, can we use simply Set\u003cTrigger\u003e instead of that?\n\nExposing your own iterable is a bit painful. For example,\n1. in your case I can remove from underlying set because you expose hashSet.iterator(), however there is no such function in the API of ContentUriTriggers\n2.  you have to clearly define behavior for adding things during iterations (in your case it will be ConcurrentModificationException)",
      "range": {
        "startLine": 62,
        "startChar": 1,
        "endLine": 62,
        "endChar": 71
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a10228b_5aaafe58",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "lately in api council we suggest to keep api consistent in terms of using collections / arrays",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 68
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72c13822_a2814a34",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "beginWith / beginUniqueWork seems inconsistent, it should be smth like: \n1 beginWith \u0026 beginWithUnique\n2 beginWork \u0026 beginUniqueWork\n3 begin \u0026 beginUnique \netc",
      "range": {
        "startLine": 232,
        "startChar": 58,
        "endLine": 232,
        "endChar": 67
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba31dccf_cdb6b0b5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 239,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "It is weird that you can\u0027t enqueueUniqueWork that receives OneTimeWorkRequest, but you can beginUniqueWork(...).enqueue().   \n\nIn general here is a lot of variations that let you schedule a work, it would be nice to somehow minimize a number of ways to do that. For example one ways of would be:\nlet\u0027s say you should always use enqueue + PeriodicRequest and begin + OneTimeWorkRequest.",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 239,
        "endChar": 215
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "127ee4bb_d357feb0",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "just an idea, don\u0027t you want to introduce StatusQuery class. It would be smth like:\ninterface WorkManagerQuery\u003cT\u003e {\n  fun future(): ListenableFuture\u003cT\u003e\n  fun liveData(): LiveData\u003cT\u003e\n}\n\nso you wouldn\u0027t need to duplicate functions for LiveData / ListenableFuture. As a nice feature, if anyone (or maybe even you) would like to use rx / kotlin channels or whatever, they can add extension method on this interface and not duplicate all functions as well.",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 152
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0230b6_bebcc0d5",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 281,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "can it be final?",
      "range": {
        "startLine": 281,
        "startChar": 2,
        "endLine": 281,
        "endChar": 53
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "089ea46c_c5f766c8",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 283,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "can it be final?",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 57
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15dd598_5ca09988",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "it is a bit weird, I\u0027d better expose DefaultFactory class",
      "range": {
        "startLine": 289,
        "startChar": 3,
        "endLine": 289,
        "endChar": 162
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c33fe6b8_24980dbe",
        "filename": "work/workmanager/api/current.txt",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2018-10-12T16:28:25Z",
      "side": 1,
      "message": "hmmm it is duplicated in ListenableWorker, don\u0027t you want to do expose them as ListenableWorker.getParams()",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 300,
        "endChar": 3
      },
      "revId": "b8738a78735f257d66dc63ef1608a1e37fb8c665",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}