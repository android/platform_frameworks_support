// Signature format: 3.0
package androidx.security.crypto {

  public final class EncryptedFile {
    method public java.io.FileInputStream openFileInput() throws java.security.GeneralSecurityException, java.io.IOException;
    method public java.io.FileOutputStream openFileOutput() throws java.security.GeneralSecurityException, java.io.IOException;
  }

  public static final class EncryptedFile.Builder {
    ctor public EncryptedFile.Builder(String, android.content.Context, androidx.security.crypto.MasterKey, androidx.security.crypto.EncryptedFile.FileEncryptionScheme);
    ctor public EncryptedFile.Builder(java.io.File, android.content.Context, androidx.security.crypto.MasterKey, androidx.security.crypto.EncryptedFile.FileEncryptionScheme);
    method public androidx.security.crypto.EncryptedFile build() throws java.security.GeneralSecurityException, java.io.IOException;
    method public androidx.security.crypto.EncryptedFile.Builder setFileKeysetAlias(String);
    method public androidx.security.crypto.EncryptedFile.Builder setKeyFileName(String);
  }

  public enum EncryptedFile.FileEncryptionScheme {
    enum_constant public static final androidx.security.crypto.EncryptedFile.FileEncryptionScheme AES256_GCM_HKDF_4KB;
  }

  public final class EncryptedSharedPreferences implements android.content.SharedPreferences {
    method public boolean contains(String?);
    method public static android.content.SharedPreferences create(String, androidx.security.crypto.MasterKey, android.content.Context, androidx.security.crypto.EncryptedSharedPreferences.KeyEncryptionScheme, androidx.security.crypto.EncryptedSharedPreferences.ValueEncryptionScheme) throws java.security.GeneralSecurityException, java.io.IOException;
    method public android.content.SharedPreferences.Editor edit();
    method public java.util.Map<java.lang.String,?> getAll();
    method public boolean getBoolean(String?, boolean);
    method public float getFloat(String?, float);
    method public int getInt(String?, int);
    method public long getLong(String?, long);
    method public String? getString(String?, String?);
    method public java.util.Set<java.lang.String>? getStringSet(String?, java.util.Set<java.lang.String>?);
    method public void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);
    method public void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);
  }

  public static final class EncryptedSharedPreferences.Builder {
    ctor public EncryptedSharedPreferences.Builder(String, android.content.Context, androidx.security.crypto.MasterKey, androidx.security.crypto.EncryptedSharedPreferences.KeyEncryptionScheme, androidx.security.crypto.EncryptedSharedPreferences.ValueEncryptionScheme);
    method public androidx.security.crypto.EncryptedSharedPreferences build() throws java.security.GeneralSecurityException, java.io.IOException;
    method public androidx.security.crypto.EncryptedSharedPreferences.Builder setKeyFileName(String);
    method public androidx.security.crypto.EncryptedSharedPreferences.Builder setKeyKeysetAlias(String);
    method public androidx.security.crypto.EncryptedSharedPreferences.Builder setValueFileName(String);
    method public androidx.security.crypto.EncryptedSharedPreferences.Builder setValueKeysetAlias(String);
  }

  public enum EncryptedSharedPreferences.KeyEncryptionScheme {
    enum_constant public static final androidx.security.crypto.EncryptedSharedPreferences.KeyEncryptionScheme AES256_SIV;
  }

  public enum EncryptedSharedPreferences.ValueEncryptionScheme {
    enum_constant public static final androidx.security.crypto.EncryptedSharedPreferences.ValueEncryptionScheme AES256_GCM;
  }

  public final class MasterKey {
    method public static android.security.keystore.KeyGenParameterSpec createAES256GCMKeyGenParameterSpec(String);
    method public static android.security.keystore.KeyGenParameterSpec createAES256GCMKeyGenParameterSpec();
    method @WorkerThread public static void ensureExistence(androidx.security.crypto.MasterKey) throws java.security.GeneralSecurityException, java.io.IOException;
    method public static androidx.security.crypto.MasterKey getOrCreate(android.security.keystore.KeyGenParameterSpec);
    method public void promptForUnlock(androidx.fragment.app.FragmentActivity, int, CharSequence, CharSequence);
  }

  public static final class MasterKey.Builder {
    ctor public MasterKey.Builder(android.security.keystore.KeyGenParameterSpec);
    method public androidx.security.crypto.MasterKey build();
  }

}

package androidx.security.net {

  public class ValidatedUrl {
    ctor public ValidatedUrl(String) throws java.net.MalformedURLException;
    ctor public ValidatedUrl(String, String[]) throws java.net.MalformedURLException;
    method public void ensureValid(javax.net.ssl.HttpsURLConnection) throws java.security.GeneralSecurityException, javax.net.ssl.SSLException;
    method public String getHostname();
    method public int getPort();
    method public javax.net.ssl.HttpsURLConnection openConnection() throws java.security.GeneralSecurityException, java.io.IOException;
    field public static final java.util.List<java.lang.String> STRONG_SSL_CIPHERS;
  }

}

