// Signature format: 3.0
package androidx.security.content {

  public class EncryptedSharedPreferencesCompat implements android.content.SharedPreferences android.content.SharedPreferences.Editor {
    method public void apply();
    method public android.content.SharedPreferences.Editor clear();
    method public boolean commit();
    method public boolean contains(String?);
    method public android.content.SharedPreferences.Editor edit();
    method public java.util.Map<java.lang.String,?> getAll();
    method public boolean getBoolean(String?, boolean);
    method public static android.content.SharedPreferences getEncryptedSharedPreferences(String, int, androidx.security.crypto.MasterKey, android.content.Context, androidx.security.content.EncryptedSharedPreferencesCompat.KeyEncryptionScheme, androidx.security.content.EncryptedSharedPreferencesCompat.ValueEncryptionScheme) throws java.security.GeneralSecurityException, java.io.IOException;
    method public float getFloat(String?, float);
    method public int getInt(String?, int);
    method public long getLong(String?, long);
    method public String? getString(String?, String?);
    method public java.util.Set<java.lang.String>? getStringSet(String?, java.util.Set<java.lang.String>?);
    method public android.content.SharedPreferences.Editor putBoolean(String?, boolean);
    method public android.content.SharedPreferences.Editor putFloat(String?, float);
    method public android.content.SharedPreferences.Editor putInt(String?, int);
    method public android.content.SharedPreferences.Editor putLong(String?, long);
    method public android.content.SharedPreferences.Editor putString(String?, String?);
    method public android.content.SharedPreferences.Editor putStringSet(String?, java.util.Set<java.lang.String>?);
    method public void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);
    method public android.content.SharedPreferences.Editor remove(String?);
    method public void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener);
    field public static final String KEY_FILE_NAME = "_androidx_security_encrypted_shared_prefs_key_file_";
    field public static final String KEY_KEYSET_ALIAS = "_androidx_security_encrypted_key_keyset_";
    field public static final String VALUE_FILE_NAME = "_androidx_security_encrypted_shared_prefs_value_file_";
    field public static final String VALUE_KEYSET_ALIAS = "_androidx_security_encrypted_value_keyset_";
  }

  public static class EncryptedSharedPreferencesCompat.Builder {
    ctor public EncryptedSharedPreferencesCompat.Builder(String, int, android.content.Context, androidx.security.crypto.MasterKey, androidx.security.content.EncryptedSharedPreferencesCompat.KeyEncryptionScheme, androidx.security.content.EncryptedSharedPreferencesCompat.ValueEncryptionScheme);
    method public androidx.security.content.EncryptedSharedPreferencesCompat build() throws java.security.GeneralSecurityException, java.io.IOException;
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setContext(android.content.Context);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setFileName(String);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setKeyEncryptionScheme(androidx.security.content.EncryptedSharedPreferencesCompat.KeyEncryptionScheme);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setKeyFileName(String);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setKeyKeysetAlias(String);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setMasterKey(androidx.security.crypto.MasterKey);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setMode(int);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setValueEncryptionScheme(androidx.security.content.EncryptedSharedPreferencesCompat.ValueEncryptionScheme);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setValueFileName(String);
    method public androidx.security.content.EncryptedSharedPreferencesCompat.Builder setValueKeysetAlias(String);
  }

  public enum EncryptedSharedPreferencesCompat.KeyEncryptionScheme {
    enum_constant public static final androidx.security.content.EncryptedSharedPreferencesCompat.KeyEncryptionScheme AES256_SIV;
  }

  public enum EncryptedSharedPreferencesCompat.ValueEncryptionScheme {
    enum_constant public static final androidx.security.content.EncryptedSharedPreferencesCompat.ValueEncryptionScheme AES256_GCM;
  }

}

package androidx.security.crypto {

  public class EncryptedFile {
    method public java.io.FileInputStream openEncryptedFileInput(String) throws java.security.GeneralSecurityException, java.io.IOException;
    method public java.io.FileOutputStream openEncryptedFileOutput(String, int) throws java.security.GeneralSecurityException, java.io.IOException;
    field public static final String FILE_NAME = "_androidx_security_encrypted_file_file_";
    field public static final String KEYSET_ALIAS = "_androidx_security_encrypted_file_keyset_";
  }

  public static class EncryptedFile.Builder {
    ctor public EncryptedFile.Builder(android.content.Context, androidx.security.crypto.MasterKey, androidx.security.crypto.EncryptedFile.FileEncryptionScheme);
    method public androidx.security.crypto.EncryptedFile build() throws java.security.GeneralSecurityException, java.io.IOException;
    method public androidx.security.crypto.EncryptedFile.Builder setContext(android.content.Context);
    method public androidx.security.crypto.EncryptedFile.Builder setFileEncryptionScheme(androidx.security.crypto.EncryptedFile.FileEncryptionScheme);
    method public androidx.security.crypto.EncryptedFile.Builder setFileKeysetAlias(String);
    method public androidx.security.crypto.EncryptedFile.Builder setKeyFileName(String);
    method public androidx.security.crypto.EncryptedFile.Builder setMasterKey(androidx.security.crypto.MasterKey);
  }

  public enum EncryptedFile.FileEncryptionScheme {
    enum_constant public static final androidx.security.crypto.EncryptedFile.FileEncryptionScheme AES256_GCM_HKDF_4KB;
  }

  public class MasterKey {
    ctor public MasterKey();
    method public static void ensureExistence(androidx.security.crypto.MasterKey) throws java.security.GeneralSecurityException, java.io.IOException;
    method public boolean getDeviceUnlockedRequired();
    method public androidx.security.crypto.MasterKey.MasterKeyEncryptionScheme getEncryptionScheme();
    method public String getKeyAlias();
    method public android.security.keystore.KeyGenParameterSpec getKeyGenParameterSpec();
    method public static androidx.security.crypto.MasterKey getOrCreate(androidx.security.crypto.MasterKey.MasterKeyEncryptionScheme);
    method public static androidx.security.crypto.MasterKey getOrCreate(android.security.keystore.KeyGenParameterSpec);
    method public int getUserAuthRequiredSeconds();
    method public void promptForUnlock(androidx.fragment.app.FragmentActivity, int, String, String);
    field public static final String ANDROID_KEYSTORE = "AndroidKeyStore";
    field public static final String MASTER_KEY_ALIAS = "_androidx_security_master_key_";
  }

  public static class MasterKey.Builder {
    ctor public MasterKey.Builder(android.security.keystore.KeyGenParameterSpec);
    ctor public MasterKey.Builder(androidx.security.crypto.MasterKey.MasterKeyEncryptionScheme);
    method public androidx.security.crypto.MasterKey build();
    method public androidx.security.crypto.MasterKey.Builder setDeviceUnlockedRequired(boolean);
    method public androidx.security.crypto.MasterKey.Builder setKeyAlias(String);
    method public androidx.security.crypto.MasterKey.Builder setKeyGenParameterSpec(android.security.keystore.KeyGenParameterSpec);
    method public androidx.security.crypto.MasterKey.Builder setMasterKeyEncryptionScheme(androidx.security.crypto.MasterKey.MasterKeyEncryptionScheme);
    method public androidx.security.crypto.MasterKey.Builder setUserAuthRequiredSeconds(int);
  }

  public enum MasterKey.MasterKeyEncryptionScheme {
    enum_constant public static final androidx.security.crypto.MasterKey.MasterKeyEncryptionScheme AES256_GCM;
  }

}

package androidx.security.net {

  public class ValidatedURL {
    ctor public ValidatedURL(String) throws java.net.MalformedURLException;
    ctor public ValidatedURL(String, String[]) throws java.net.MalformedURLException;
    method public void ensureValid(javax.net.ssl.HttpsURLConnection) throws java.security.GeneralSecurityException, javax.net.ssl.SSLException;
    method public String getHostname();
    method public int getPort();
    method public java.net.URLConnection openConnection() throws java.security.GeneralSecurityException, java.io.IOException;
    field public static final String[] STRONG_SSL_CIPHERS;
  }

}

