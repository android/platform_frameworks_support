{
  "comments": [
    {
      "key": {
        "uuid": "ac1d23fd_99c2ab4e",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/AnimationGestureSemanticsActivity.kt",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "This cascading seems a bit awkward as an API.  It\u0027s sort of weird that you get the action not as the return value, but as a parameter to a child lambda.  It also makes it somewhat tedious to list multiple actions.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50c36c1_19d7e6e0",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/AnimationGestureSemanticsActivity.kt",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "After implementing node merging, we would remove line 149 and the semantic actions would be combined with semantic properties. If they are presented as nested components, this is logically easier to understand. I feel it would be awkward for a Composable function to return a value, and have a side effect of emitting semantics.\n\nAlso, if the user does not want to use the actions with a gesture detector, they can just ignore the parameter to the child lambda.\n\nThe level 1 API allows the users to create actions individually and then manually add them along with the properties.",
      "parentUuid": "ac1d23fd_99c2ab4e",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc6b2d7b_18e1b73f",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/AnimationGestureSemanticsActivity.kt",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "\u003e I feel it would be awkward for a Composable function to return a value, and have a side effect of emitting semantics.\n\nI agree (it\u0027s also impossible, currently - Composable functions can\u0027t return values) and I don\u0027t think that would be a good thing to add.\n\nI guess it\u0027s probably alright for a shortcut API to be awkward to use to add too many things, since as you point out, they can drop down to the lower-level API.\n\nWould we also remove the passing to the child lambda with node merging?  If not, what would be the use-case for that then?",
      "parentUuid": "b50c36c1_19d7e6e0",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc6d05a7_51196124",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/AnimationGestureSemanticsActivity.kt",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "The child lambda parameter would be needed if the user wants to pass the action to a gesture detector.\n\nIn cases where there is no gesture detector (eg autofill) we can just ignore the lambda parameter as we can write {action-\u003e ...} as {...} \n\nIf the component only accepts one child, we would have to nest the SemanticAction and the SemanticProperty, the order wouldn\u0027t matter.\n\nOr, if our component accepts multiple children, we could write the SemanticAction and SemanticProperty at the same indent level.",
      "parentUuid": "fc6b2d7b_18e1b73f",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4df8c34_89e8c2da",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "This comment does not match the code",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe4cfc9_a35191e6",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4df8c34_89e8c2da",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ed0d112_a398976a",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "I think this needs some indication that it\u0027s part of Semantics.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4791b62_701ab432",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ed0d112_a398976a",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "349f788e_bf31f17c",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "It might be more illustrative to focus on what the final API would look like rather than limiting it by what can be put together in a tech demo.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c64bdfda_9decde98",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "349f788e_bf31f17c",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6eba0fd_d6926fc8",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T06:08:15Z",
      "side": 1,
      "message": "I think this example still illustrates the final API. SemanticProperties just has one extra parameter \"actions\" which will not be present in the final API.",
      "parentUuid": "c64bdfda_9decde98",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75e345b5_b9b409e4",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "As above - should probably indicate that this is related to Semantics.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56dd3b2b_667eecfc",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75e345b5_b9b409e4",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8723ce53_14e261ab",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "This name is confusing - it\u0027s unclear what \"phrase\" means in the context of an action.  Something like \"label\" or \"description\" would be a better fit.  We should probably pick one for all of Semantics - as suggestions, we could use the more Flutter-esque \"label\" or the more Android-esque \"contentDescription\"/\"description\".",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13b499ab_35c7486c",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "I initially used label here, but during a previous review it was suggested to use something different, as we also have a property that is called \"label\". I\u0027m fine using label for both actions and the property \"label\", but I think we can address this later.",
      "parentUuid": "8723ce53_14e261ab",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f6c6590_92f12506",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "Fair, agreed that we can address that later.  I think the larger problem is that the concept of having a label for both an action and the component it\u0027s on is somewhat confusing (in large part because they would often, but not always, be the same), and not that the word for those is the same.",
      "parentUuid": "13b499ab_35c7486c",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4956f317_116d370b",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "Can we enforce some sort of type-safety here?  What happens if someone uses the wrong type?",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b10eef7_3d51146c",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "I didn\u0027t understand your concern. The user would have to use the right type when they invoke the action. The type argument used here is the same as the type passed to the action lambda.",
      "parentUuid": "4956f317_116d370b",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c730c6_459647fe",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "What happens if the user passes a lambda that takes a PxPosition and supplies and action that takes a Boolean as its parameter?",
      "parentUuid": "9b10eef7_3d51146c",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71a14e03_5f85421a",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "The user will not be able to do that. \n\nval pxAction \u003d SemanticAction\u003cPxPosition\u003e(\n                   defaultParam \u003d PxPosition.Origin,\n                   action \u003d {param:ActionParam\u003cBoolean\u003e -\u003e ...})\n\nwill result in a compilation error.",
      "parentUuid": "79c730c6_459647fe",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d41492_408d03e4",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-16T17:32:56Z",
      "side": 1,
      "message": "Sorry, to clarify - what if they pass an action type (e.g., move cursor forward by character) that takes a boolean argument?",
      "parentUuid": "71a14e03_5f85421a",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a873f926_e261d547",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-16T17:47:24Z",
      "side": 1,
      "message": "That should be fine. We allow any ActionType. The API only enforces the type for the callback. ie a SemanticAction\u003cPxPosition\u003e requires an action of type ActionParam\u003cPxPositon\u003e -\u003e Unit.\n\nFor example,\n\nval pxAction \u003d SemanticAction\u003cPxPosition\u003e(\n                   defaultParam \u003d PxPosition.Origin,\n                   action \u003d {param:ActionParam\u003cBoolean\u003e -\u003e ...}\n                   types \u003d setOf(ActionTypeWithBooleanParam, ActionTypeWithIntParam))\n\n\nIs allowed. The action types are flexible on purpose, so that we could add support for a new framework in the future, and it can add its own implementation of the ActionType interface.",
      "parentUuid": "76d41492_408d03e4",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b328336c_c3539b66",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-16T18:01:02Z",
      "side": 1,
      "message": "I don\u0027t think this _should_ be allowed (does the action\u0027s parameter just get silently discarded if the types don\u0027t match?), but I\u0027m not sure how we could enforce it with this design, so I think this makes sense as far as this design goes.",
      "parentUuid": "a873f926_e261d547",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f368b6af_188972db",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "Would it be an error to specify an empty set here?",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78763f45_7bf7c970",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "No it is not, the developer always has the option of specifying an action but not providing any extra semantic information. The action will not be available for other frameworks, but could still be used in a gesture detector.",
      "parentUuid": "f368b6af_188972db",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efb9c02c_a3a90fe1",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "Is it really a semantic action if it doesn\u0027t convey any semantic information whatsoever?  I don\u0027t know if that\u0027s something we should be including in Semantics (assuming \"other frameworks\" refers to clients of Semantics, i.e., a11y, autofill, assist, etc.).  I\u0027m not sure every gesture detector callback needs to (or should) go through Semantics.",
      "parentUuid": "78763f45_7bf7c970",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab250957_6fdc6ead",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL2.kt",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "Fair point. \n\nIn the last meeting, we couldn\u0027t come to a consensus if gesture detectors should use actions or a lambda. For now, I made the assumption that gesture detectors always use an action. If we decide to switch back to the initial proposal, the gesture detector lambda could invoke an action (if needed), and then we can add a check to make sure this set is not empty.",
      "parentUuid": "efb9c02c_a3a90fe1",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e338f1c_88bb54d7",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "What would you expect someone to want to do on press in a typical clickable component? I\u0027d expect a client of this API to mostly want to detect clicks and let some internal thing (maybe a material ink surface) care about when they\u0027re pressed to, e.g., draw a ripple.  I\u0027m curious if this sort of thing would be practical with current gesture APIs.  At the very least, this doesn\u0027t seem like a required parameter in a typical scenario.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baa886b9_18e64311",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "In this example, the ClickInteraction combines semantics and gestures.I\u0027m using the gesture api on line 47 here.\n\nIf a user wants to detect a click and not emit any semantics, I would assume they would use the gesture detector directly.",
      "parentUuid": "0e338f1c_88bb54d7",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19d7b1a1_c3bc597a",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "My assumption was that this was intended to be the component that 95%+ of users would use to make something clickable.  In that scenario, I\u0027m not sure what users would want with a press.  They would only care about a full press/release (AKA click).  I would assume it would also trigger from a keypress once we add key input.  If that assumption is wrong, what is the intention of this?\n\n\u003e If a user wants to detect a click and not emit any semantics, I would assume they would use the gesture detector directly.\n\nWe should be discouraging this - it would almost never be correct.",
      "parentUuid": "baa886b9_18e64311",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5939fdbd_a4574650",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "Let me rephrase.\n\nYes, a user would always use this if they want to make something clickable. Which could include a key press. We could even omit the release action here, and only provide click, if we decide to do that. While the user specifies the click action, they can use the builder to pass along extra semantic information to describe the intent of the click.\n\nFor other cases, where components don\u0027t want to emit semantics (eg, a material ink surface displaying a ripple) I would assume that they won\u0027t use a click action, but would use the gesture detector directly. That way the ink surface could also get the release and cancel callbacks.",
      "parentUuid": "19d7b1a1_c3bc597a",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8612425a_98ba357d",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "I don\u0027t think press is going to have any semantic meaning in 99% of cases - I don\u0027t think we should be exposing that to the semantics system.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fabdf8a4_586247f1",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "This is just a default label that is used if the developer doesn\u0027t specify anything. This is just an example, we might end up leaving it blank, or calling it \"Click\".",
      "parentUuid": "8612425a_98ba357d",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "958525a2_e74bda27",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "What I meant is - pressing on most components has no semantic meaning.  Only the combination of press/release (i.e., a click) does.  Thus, most clients of this would not want this (assuming my assumption described above is correct)",
      "parentUuid": "fabdf8a4_586247f1",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c40c2a41_b496b1a7",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "Ok, I understand. I\u0027ll simplify the ClickInteraction to only use one action.",
      "parentUuid": "958525a2_e74bda27",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c2d2024_4fd3f8f8",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "How would this action be represented to the a11y system?  This seems like it\u0027s intended to be the primary/click action, but that\u0027s not exposed in any way.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00fd4e88_fd4c1913",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "This is just a default label. The other frameworks would access this action using the appropriate action type.\n\nTo associate the accessibility primary/click action with this action, we would need to set the action type as AccessibilityAction.Primary. Which is done in AnimationGestureSemanticsActivity.Level3ApiExtras()",
      "parentUuid": "7c2d2024_4fd3f8f8",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd518192_9a08fb1e",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "With this API, you can easily create a ClickInteraction that\u0027s completely invisible to a11y.  In fact, it\u0027s the default - you have to explicitly add AccessibilityAction.Primary to the list.  We shouldn\u0027t do that - click interactions should expose their click actions to a11y by default, without requiring opt-in.  (again, this assumes ClickInteraction is intended for use by the majority of users as the way to make things clickable)",
      "parentUuid": "00fd4e88_fd4c1913",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a30efda_28c5fbaf",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "Good point. \n\nI didn\u0027t want to assume that this was the primary action, but you are right, we should not have no accessibility action by default. I set the default to primary.",
      "parentUuid": "fd518192_9a08fb1e",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1adf9cd4_d1c7ef7c",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "I don\u0027t think canceling a click should perform the release action.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ad7bdb0_7b094652",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "I moved this over from the animation sample, but sure we don\u0027t need to invoke the released action.",
      "parentUuid": "1adf9cd4_d1c7ef7c",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a349ddfb_8b223046",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-14T22:55:07Z",
      "side": 1,
      "message": "I\u0027m not sure I\u0027m sold on this being a cleaner syntax.  To me it seems quite confusing - action is a property, but also the name of an extension method.  It\u0027s especially confusing because, as a function type, the property itself can be invoked (albeit with different, incompatible parameters).  I think we should stick to either setters or builder methods, not mix the two.",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b7e5ebf_805e0947",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T00:38:05Z",
      "side": 1,
      "message": "I changed the \"Action\" component to \"SemanticAction\"\n\nI\u0027m using a builder here to allow me to specify default values that are specific to the use case. Eg. The ClickInteraction uses the action builder and passes the default phrases \"On Press\" and \"On Release\". A GroupSemantics tag could use the action builder and pass default phrases \"Next\" and \"Previous\". \n\nSince we need different default values in different cases, I cannot set the appropriate defaults in the SemanticAction component.",
      "parentUuid": "a349ddfb_8b223046",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ea5e866_0545efe5",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1014468
      },
      "writtenOn": "2019-05-15T06:50:35Z",
      "side": 1,
      "message": "This doesn\u0027t really address that - you have both a builder method (`action(...)`) and a setter (`action \u003d ...`).\n\nI\u0027m not sure how having both of these allows you to specify default values that are specific to the use case.",
      "parentUuid": "6b7e5ebf_805e0947",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8860dfc4_f53cae8d",
        "filename": "ui/framework/integration-tests/framework-demos/src/main/java/androidx/ui/framework/demos/SemanticsL3.kt",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1402596
      },
      "writtenOn": "2019-05-15T09:11:06Z",
      "side": 1,
      "message": "Sorry I thought the comment was about the builder. Agree that the extension function is unnecessary. I removed it.",
      "parentUuid": "0ea5e866_0545efe5",
      "revId": "68b1c94816897505f499bb8a8222339162833f7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}