{
  "comments": [
    {
      "key": {
        "uuid": "71e14d44_c1669ac2",
        "filename": "work/workmanager-ktx/api/current.txt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2019-04-11T16:51:49Z",
      "side": 1,
      "message": "This indicates that the return type is nullable.  Can we explicitly declare it to be non-nullable?  (And then re-generate this file.)",
      "range": {
        "startLine": 25,
        "startChar": 115,
        "endLine": 25,
        "endChar": 116
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faccc048_2b94b2ac",
        "filename": "work/workmanager-ktx/api/current.txt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1367449
      },
      "writtenOn": "2019-04-11T19:36:20Z",
      "side": 1,
      "message": "From go/metalava:\nthe signature format now uses a suffix of `?` for nullable, `!` for not yet annotated, and nothing for non-null.\n\nSo, in this case there\u0027s a missing annotation, but it seems to me more of an issue in Metalava than a really missing annotation.\nI\u0027ve tried specifying a non-null return type to the function, but the API it\u0027s still generated with the \"!\":\n\ninline fun \u003creified W : ListenableWorker\u003e OneTimeWorkRequestFrom() : OneTimeWorkRequest \u003d\n        OneTimeWorkRequest.from(W::class.java)",
      "parentUuid": "71e14d44_c1669ac2",
      "range": {
        "startLine": 25,
        "startChar": 115,
        "endLine": 25,
        "endChar": 116
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5ce4972_a597dbe2",
        "filename": "work/workmanager-ktx/api/current.txt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1060206
      },
      "writtenOn": "2019-04-12T19:36:50Z",
      "side": 1,
      "message": "This sounds like a problem.  This should not generate a !.  I\u0027ll try to ask people who would know.",
      "parentUuid": "faccc048_2b94b2ac",
      "range": {
        "startLine": 25,
        "startChar": 115,
        "endLine": 25,
        "endChar": 116
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f4d7d74_4cc52243",
        "filename": "work/workmanager-ktx/src/main/java/androidx/work/OneTimeWorkRequest.kt",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1344433
      },
      "writtenOn": "2019-04-11T15:57:17Z",
      "side": 1,
      "message": "I think this can be just OneTimeWorkRequest(). It\u0027s cleaner and it looks like a constructor.",
      "range": {
        "startLine": 34,
        "startChar": 42,
        "endLine": 34,
        "endChar": 64
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "696eb26b_5de6f8fa",
        "filename": "work/workmanager-ktx/src/main/java/androidx/work/OneTimeWorkRequest.kt",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1367449
      },
      "writtenOn": "2019-04-11T19:36:20Z",
      "side": 1,
      "message": "Having something like OneTimeWorkRequest\u003cTestWorker\u003e() works but confuses AndroidStudio linter (\"No Type arguments expected for constructo OneTimeWorkRequest()\"):\n\nhttps://drive.google.com/file/d/1Rput-JMwvfyfVx_Sp9AcNbbP1gckFdBQ/view?usp\u003dsharing\n\nand I don\u0027t like much that this is shadowing the real constructor",
      "parentUuid": "8f4d7d74_4cc52243",
      "range": {
        "startLine": 34,
        "startChar": 42,
        "endLine": 34,
        "endChar": 64
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66277388_8d89a9b0",
        "filename": "work/workmanager-ktx/src/main/java/androidx/work/OneTimeWorkRequest.kt",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1344433
      },
      "writtenOn": "2019-04-11T21:17:13Z",
      "side": 1,
      "message": "That is actually a common pattern with Jetbrains kotlin libraries. Job() in Couroutines is for e.g a factory function and is not a real constructor.\n\nOneTimeWorkRequestFrom\u003c\u003e is essentially OneTimeWorkRequestBuilder\u003c\u003e.build().\n\nHow about OneTimeWorkRequestOf\u003c\u003e if you can\u0027t use OneTimeWorkRequest\u003c\u003e() ?",
      "parentUuid": "696eb26b_5de6f8fa",
      "range": {
        "startLine": 34,
        "startChar": 42,
        "endLine": 34,
        "endChar": 64
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a17ae7e6_7ad5c125",
        "filename": "work/workmanager-ktx/src/main/java/androidx/work/OneTimeWorkRequest.kt",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1367449
      },
      "writtenOn": "2019-04-12T11:18:55Z",
      "side": 1,
      "message": "Having done few iterations of this, I\u0027m not sure that this is such an improvement to the API.\nI\u0027ve updated it to OneTimeWorkRequestOf\u003c\u003e() and it looks ok to me.\n\nFrom:\n\n        // Add WorkRequest to Cleanup temporary images\n        var continuation \u003d workManager\n                .beginUniqueWork(\n                        IMAGE_MANIPULATION_WORK_NAME,\n                        ExistingWorkPolicy.REPLACE,\n                        OneTimeWorkRequest.from(CleanupWorker::class.java)\n                )\n\nTo:\n\n\n        // Add WorkRequest to Cleanup temporary images\n        var continuation \u003d workManager\n                .beginUniqueWork(\n                        IMAGE_MANIPULATION_WORK_NAME,\n                        ExistingWorkPolicy.REPLACE,\n                        OneTimeWorkRequestOf\u003cCleanupWorker\u003e()\n                )\n\nI\u0027m ok to simply abandon this CL, was a good learning for me, but is it really so much better than the original to justify an new API to maintain?",
      "parentUuid": "66277388_8d89a9b0",
      "range": {
        "startLine": 34,
        "startChar": 42,
        "endLine": 34,
        "endChar": 64
      },
      "revId": "6b48fb34d9d0a6d8f57cdd0c61e92f3a9fa1358b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}