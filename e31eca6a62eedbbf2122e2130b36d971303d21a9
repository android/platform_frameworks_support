{
  "comments": [
    {
      "key": {
        "uuid": "bb9c7d23_60cf929c",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "I\u0027d better use:\nval useAnnotation \u003d ...  ?: throw IllegalStateException(\"Failed to extract level from annotation\")\n\ninstead of \"!!\"",
      "range": {
        "startLine": 80,
        "startChar": 82,
        "endLine": 80,
        "endChar": 84
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e12a9dca_617f2b48",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:55:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb9c7d23_60cf929c",
      "range": {
        "startLine": 80,
        "startChar": 82,
        "endLine": 80,
        "endChar": 84
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f644999_c3421eab",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "will UElement.getParentOfType help you?",
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5bc4a5d_7c62b826",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:55:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f644999_c3421eab",
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cfb8806_839b5e11",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "again style thing, I\u0027d write: \n\nval matchName \u003d annotations.any { annotation.qualifiedName \u003d\u003d annotationName } \nval matchUseAnnotaion \u003d annotations\n    .filter { annotation.qualifiedName \u003d\u003d USE_EXPERIMENTAL_ANNOTATION }\n    .mapNotNull { annotation.attributeValues.getOrNull(0) }\n    .any { markerClass -\u003e getQualifiedNameFromExpression(context, markerClass) \u003d\u003d annotationName} \nif (matchName || matchUseAnnotation) return true",
      "range": {
        "startLine": 98,
        "startChar": 16,
        "endLine": 108,
        "endChar": 17
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd157b2b_7993f791",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:55:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cfb8806_839b5e11",
      "range": {
        "startLine": 98,
        "startChar": 16,
        "endLine": 108,
        "endChar": 17
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06109bcb_f880e27d",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "nit: I personally like to move functions like this to file level, so it would be obvious that they are \"pure\"\n\nalso I\u0027d make it extension property, to improve readability on caller side. Impl\u0027d look like:\n\nprivate val UNamedExpression?.simpleName : String?\n    get() \u003d this?.let { (expression as? USimpleNameReferenceExpression)?.identifier }",
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc3743db_d86272dd",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:55:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06109bcb_f880e27d",
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d9e6bef_0527589d",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "here I\u0027d go with extension method:\nexpression.resolveQualifiedName(context)",
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd6241c4_f6e87ba1",
        "filename": "annotation/annotation-experimental-lint/src/main/java/androidx/annotation/lint/ExperimentalDetector.kt",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:55:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d9e6bef_0527589d",
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1f7246_1e9284ef",
        "filename": "annotation/annotation-experimental-lint/src/sample/java/sample/UseExperimentalClassChecked.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-18T22:21:31Z",
      "side": 1,
      "message": "For some reason I have to use the full \"level \u003d ERROR\" here rather than just \"ERROR\" or it will give me a mysterious redline error about value(). Unclear where that\u0027s coming from.",
      "range": {
        "startLine": 30,
        "startChar": 18,
        "endLine": 30,
        "endChar": 31
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17e199a6_2dbba579",
        "filename": "annotation/annotation-experimental-lint/src/sample/java/sample/UseExperimentalClassChecked.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ff1f7246_1e9284ef",
      "range": {
        "startLine": 30,
        "startChar": 18,
        "endLine": 30,
        "endChar": 31
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0f45590_c0749f5a",
        "filename": "annotation/annotation-experimental/build.gradle",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-21T18:55:56Z",
      "side": 1,
      "message": "Need to turn lintPublish back on, which is going to create a dependency cycle and probably make Studio silently reject the dependency.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e0ee297_6c911cbc",
        "filename": "annotation/annotation-experimental/src/main/java/androidx/annotation/Experimental.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-06-18T22:21:31Z",
      "side": 1,
      "message": "I will file a separate bug to handle linting that these annotations are always CLASS (or Kotlin BINARY) retention.",
      "range": {
        "startLine": 36,
        "startChar": 3,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49a0301b_ad5e21ff",
        "filename": "annotation/annotation-experimental/src/main/java/androidx/annotation/Experimental.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1098853
      },
      "writtenOn": "2019-06-18T23:04:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9e0ee297_6c911cbc",
      "range": {
        "startLine": 36,
        "startChar": 3,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "e31eca6a62eedbbf2122e2130b36d971303d21a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}