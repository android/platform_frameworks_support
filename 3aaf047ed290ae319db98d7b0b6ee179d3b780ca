{
  "comments": [
    {
      "key": {
        "uuid": "21c2feb5_c8602c67",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1361834
      },
      "writtenOn": "2019-03-07T12:22:42Z",
      "side": 1,
      "message": "This library adds FloatPropertyCompat class, so as a user I would expect the method to have a FloatPropertyCompat as a parameter when it called \"...ofProperyy\". With the current signature of setter and getter params I would suggest to not rename it and keep just \"flingAnimationOf\" as a name.",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab0a35c3_cc909522",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1053203
      },
      "writtenOn": "2019-03-07T19:34:34Z",
      "side": 1,
      "message": "I considered flingAnimationOf(..), but since property isn\u0027t one of the parameters, I was concerned it might not be clear enough. I\u0027m happy to change it back.",
      "parentUuid": "21c2feb5_c8602c67",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "407441dc_86ba2bce",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1053203
      },
      "writtenOn": "2019-03-08T06:49:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab0a35c3_cc909522",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29195836_0427d834",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1361834
      },
      "writtenOn": "2019-03-07T12:22:42Z",
      "side": 1,
      "message": "This feels like a misuse of FloatValueHolder class for me. I can think about quite more clear way of doing this with extracting an interface from FloatValueHolder and have two implementations: 1) which stores into a mValue field; 2) which takes setter and getter lambdas as a constructor parameter.",
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55755584_b47625ce",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1053203
      },
      "writtenOn": "2019-03-07T19:34:34Z",
      "side": 1,
      "message": "It\u0027s a good suggestion except for one small caveat: FloatValueHolder is defined in java. So we can\u0027t use lambda\u0027s in FloatValueHolder for the lack of java 8. Do you have other suggestions on improving it? I wasn\u0027t stressing over it as it\u0027s an implementation detail. Though I would love to get feedback on making it look better.",
      "parentUuid": "29195836_0427d834",
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c575c53_cc52035a",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1361834
      },
      "writtenOn": "2019-03-07T23:48:42Z",
      "side": 1,
      "message": "We still can define an interface and the first implementation with just a field in java and the one with lambda in Kotlin. Wdyt?",
      "parentUuid": "55755584_b47625ce",
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f1e82f5_709ae2ef",
        "filename": "dynamic-animation/ktx/src/main/java/androidx/dynamicanimation/animation/DynamicAnimation.kt",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1053203
      },
      "writtenOn": "2019-03-08T06:49:30Z",
      "side": 1,
      "message": "Please correct me if I misunderstood you, you are suggesting:\nCreate an interface in Java, and have FloatValueHolder implement it. In kotlin, create another impl of that interface that uses setter and getter directly.\n\nThat is a viable option. However, it involves either changing all the public APIs (in 3 classes) that currently use FloatValueHolder to that new interface, or adding a bunch of new APIs to support that interface. It seems like too much API change to avoid this bit of internal implementation detail messiness, especially that we don\u0027t expose this intermediate FloatValueHolder to devs. Given this tradeoff, I\u0027m leaning towards not adding new Java APIs. What do you think?",
      "parentUuid": "4c575c53_cc52035a",
      "revId": "3aaf047ed290ae319db98d7b0b6ee179d3b780ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}