// Signature format: 2.0
package androidx.legacy.app {

  @Deprecated public class ActionBarDrawerToggle implements androidx.drawerlayout.widget.DrawerLayout.DrawerListener {
    ctor public ActionBarDrawerToggle(android.app.Activity!, androidx.drawerlayout.widget.DrawerLayout!, @DrawableRes int, @StringRes int, @StringRes int);
    ctor public ActionBarDrawerToggle(android.app.Activity!, androidx.drawerlayout.widget.DrawerLayout!, boolean, @DrawableRes int, @StringRes int, @StringRes int);
    method public boolean isDrawerIndicatorEnabled();
    method public void onConfigurationChanged(android.content.res.Configuration!);
    method public void onDrawerClosed(android.view.View!);
    method public void onDrawerOpened(android.view.View!);
    method public void onDrawerSlide(android.view.View!, float);
    method public void onDrawerStateChanged(int);
    method public boolean onOptionsItemSelected(android.view.MenuItem!);
    method public void setDrawerIndicatorEnabled(boolean);
    method public void setHomeAsUpIndicator(android.graphics.drawable.Drawable!);
    method public void setHomeAsUpIndicator(int);
    method public void syncState();
  }

  @Deprecated public static interface ActionBarDrawerToggle.Delegate {
    method public android.graphics.drawable.Drawable? getThemeUpIndicator();
    method public void setActionBarDescription(@StringRes int);
    method public void setActionBarUpIndicator(android.graphics.drawable.Drawable!, @StringRes int);
  }

  @Deprecated public static interface ActionBarDrawerToggle.DelegateProvider {
    method public androidx.legacy.app.ActionBarDrawerToggle.Delegate? getDrawerToggleDelegate();
  }

}

package androidx.legacy.widget {

  @Deprecated public class Space extends android.view.View {
    ctor @Deprecated public Space(android.content.Context, android.util.AttributeSet?, int);
    ctor @Deprecated public Space(android.content.Context, android.util.AttributeSet?);
    ctor @Deprecated public Space(android.content.Context);
    method @Deprecated public void draw(android.graphics.Canvas!);
    method @Deprecated protected void onMeasure(int, int);
  }

}

